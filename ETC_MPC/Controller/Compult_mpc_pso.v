// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Compult_mpc_pso (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dx1_in_V,
        dx2_in_V,
        y_in_V,
        u_in_V,
        ref_in_V,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 33'b1;
parameter    ap_ST_st2_fsm_1 = 33'b10;
parameter    ap_ST_st3_fsm_2 = 33'b100;
parameter    ap_ST_st4_fsm_3 = 33'b1000;
parameter    ap_ST_st5_fsm_4 = 33'b10000;
parameter    ap_ST_st6_fsm_5 = 33'b100000;
parameter    ap_ST_st7_fsm_6 = 33'b1000000;
parameter    ap_ST_st8_fsm_7 = 33'b10000000;
parameter    ap_ST_st9_fsm_8 = 33'b100000000;
parameter    ap_ST_st10_fsm_9 = 33'b1000000000;
parameter    ap_ST_st11_fsm_10 = 33'b10000000000;
parameter    ap_ST_st12_fsm_11 = 33'b100000000000;
parameter    ap_ST_st13_fsm_12 = 33'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 33'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 33'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 33'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 33'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 33'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 33'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 33'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 33'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 33'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 33'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 33'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 33'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 33'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 33'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 33'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 33'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 33'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 33'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 33'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 33'b100000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv36_0 = 36'b000000000000000000000000000000000000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv31_79999A00 = 31'b1111001100110011001101000000000;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv36_7FFFFFFFF = 36'b11111111111111111111111111111111111;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv22_0 = 22'b0000000000000000000000;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv6_3F = 6'b111111;
parameter    ap_const_lv7_7F = 7'b1111111;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv36_800000000 = 36'b100000000000000000000000000000000000;
parameter    ap_const_lv28_7FFFFFF = 28'b111111111111111111111111111;
parameter    ap_const_lv28_8000000 = 28'b1000000000000000000000000000;
parameter    ap_const_lv27_0 = 27'b000000000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] dx1_in_V;
input  [29:0] dx2_in_V;
input  [27:0] y_in_V;
input  [29:0] u_in_V;
input  [27:0] ref_in_V;
output  [26:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[26:0] ap_return;
(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm = 33'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_51;
wire   [4:0] Sx_0_address0;
reg    Sx_0_ce0;
wire   [28:0] Sx_0_q0;
wire   [4:0] Sx_1_address0;
reg    Sx_1_ce0;
wire   [21:0] Sx_1_q0;
wire   [5:0] g_V_address0;
reg    g_V_ce0;
wire   [28:0] g_V_q0;
wire  signed [30:0] p_Val2_s_fu_368_p2;
reg  signed [30:0] p_Val2_s_reg_1149;
wire  signed [30:0] p_Val2_6_fu_374_p2;
reg  signed [30:0] p_Val2_6_reg_1155;
wire  signed [60:0] OP2_V_cast_fu_380_p1;
reg  signed [60:0] OP2_V_cast_reg_1161;
wire  signed [51:0] OP2_V_1_cast_fu_384_p1;
reg  signed [51:0] OP2_V_1_cast_reg_1166;
wire   [31:0] i_cast9_fu_388_p1;
reg   [31:0] i_cast9_reg_1171;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_105;
wire   [4:0] i_3_fu_399_p2;
reg   [4:0] i_3_reg_1180;
wire   [0:0] exitcond6_fu_393_p2;
wire   [39:0] tmp_7_cast_fu_405_p1;
reg   [39:0] tmp_7_cast_reg_1190;
wire   [39:0] tmp_12_cast_cast_fu_408_p1;
reg   [39:0] tmp_12_cast_cast_reg_1195;
reg   [28:0] Sx_0_load_reg_1200;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_127;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_136;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_145;
reg   [21:0] Sx_1_load_reg_1215;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_153;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_162;
wire  signed [60:0] grp_fu_414_p2;
reg  signed [60:0] p_Val2_7_reg_1225;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_171;
wire  signed [51:0] grp_fu_422_p2;
reg  signed [51:0] p_Val2_1_reg_1230;
reg   [23:0] tmp_reg_1235;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_182;
reg   [0:0] qbit_reg_1240;
wire   [0:0] r_fu_465_p2;
reg   [0:0] r_reg_1245;
reg   [0:0] tmp_57_reg_1250;
wire   [0:0] qb_assign_1_fu_483_p2;
reg   [0:0] qb_assign_1_reg_1255;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_197;
wire   [31:0] i_1_cast8_fu_505_p1;
reg   [31:0] i_1_cast8_reg_1260;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_206;
wire   [4:0] i_5_fu_516_p2;
reg   [4:0] i_5_reg_1268;
wire   [0:0] exitcond7_fu_510_p2;
wire  signed [39:0] p_Val2_30_fu_534_p2;
reg  signed [39:0] p_Val2_30_reg_1278;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_222;
reg   [0:0] signbit_reg_1283;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_231;
reg   [28:0] tmp_60_reg_1289;
reg   [0:0] qbit_4_reg_1294;
wire   [0:0] r_i_i1_fu_587_p2;
reg   [0:0] r_i_i1_reg_1299;
wire   [0:0] qb_assign_3_fu_593_p2;
reg   [0:0] qb_assign_3_reg_1304;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_246;
wire  signed [35:0] p_Val2_33_fu_603_p2;
reg  signed [35:0] p_Val2_33_reg_1309;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_255;
wire   [0:0] newsignbit_fu_609_p3;
reg   [0:0] newsignbit_reg_1314;
wire   [0:0] p_Result_1_not_fu_617_p2;
reg   [0:0] p_Result_1_not_reg_1319;
wire   [0:0] p_not_i_fu_633_p2;
reg   [0:0] p_not_i_reg_1324;
wire   [1:0] i_4_fu_662_p2;
reg   [1:0] i_4_reg_1332;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_270;
wire   [6:0] p_addr_fu_692_p2;
reg   [6:0] p_addr_reg_1337;
wire   [0:0] exitcond8_fu_656_p2;
wire   [4:0] j_1_fu_713_p2;
reg   [4:0] j_1_reg_1345;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_284;
wire   [0:0] exitcond_fu_707_p2;
wire   [0:0] overflow_6_fu_773_p2;
reg   [0:0] overflow_6_reg_1360;
wire   [0:0] underflow_fu_797_p2;
reg   [0:0] underflow_reg_1366;
wire   [0:0] tmp_68_fu_803_p1;
reg   [0:0] tmp_68_reg_1373;
reg   [28:0] g_V_load_reg_1379;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_307;
wire   [35:0] Ep_V_q0;
reg   [35:0] Ep_V_load_reg_1384;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_318;
wire  signed [64:0] grp_fu_813_p2;
reg  signed [64:0] p_Val2_35_reg_1399;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_329;
reg   [0:0] qbit_5_reg_1404;
wire   [20:0] tmp_71_fu_827_p1;
reg   [20:0] tmp_71_reg_1409;
reg   [0:0] signbit_2_reg_1414;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_342;
reg   [35:0] p_Val2_37_reg_1420;
reg   [0:0] tmp_72_reg_1425;
wire   [0:0] qb_assign_5_fu_893_p2;
reg   [0:0] qb_assign_5_reg_1430;
wire   [0:0] Range1_all_ones_1_fu_932_p2;
reg   [0:0] Range1_all_ones_1_reg_1435;
wire   [0:0] Range1_all_zeros_fu_938_p2;
reg   [0:0] Range1_all_zeros_reg_1442;
wire   [0:0] p_41_i_i_fu_950_p2;
reg   [0:0] p_41_i_i_reg_1447;
wire   [35:0] p_Val2_38_fu_959_p2;
reg   [35:0] p_Val2_38_reg_1452;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_363;
wire   [0:0] newsignbit_6_fu_964_p3;
reg   [0:0] newsignbit_6_reg_1458;
wire   [0:0] deleted_zeros_1_fu_983_p3;
reg   [0:0] deleted_zeros_1_reg_1464;
wire   [0:0] deleted_ones_1_fu_989_p3;
reg   [0:0] deleted_ones_1_reg_1469;
wire   [0:0] p_38_i_i_fu_995_p2;
reg   [0:0] p_38_i_i_reg_1474;
wire   [0:0] overflow_5_fu_1015_p2;
reg   [0:0] overflow_5_reg_1480;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_380;
wire   [0:0] underflow_6_fu_1036_p2;
reg   [0:0] underflow_6_reg_1485;
wire   [0:0] underflow_14_not_fu_1047_p2;
reg   [0:0] underflow_14_not_reg_1491;
wire   [35:0] sum_V_fu_1069_p3;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_393;
wire   [27:0] G_1_V_1_fu_1125_p3;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_402;
wire   [27:0] G_1_V_2_fu_1132_p3;
reg   [4:0] SxDx_V_address0;
reg    SxDx_V_ce0;
reg    SxDx_V_we0;
wire   [25:0] SxDx_V_d0;
wire   [25:0] SxDx_V_q0;
reg   [4:0] Ep_V_address0;
reg    Ep_V_ce0;
reg    Ep_V_we0;
wire   [35:0] Ep_V_d0;
wire    grp_Compult_pso_fu_348_ap_start;
wire    grp_Compult_pso_fu_348_ap_done;
wire    grp_Compult_pso_fu_348_ap_idle;
wire    grp_Compult_pso_fu_348_ap_ready;
wire   [27:0] grp_Compult_pso_fu_348_G_0_V_read;
wire   [27:0] grp_Compult_pso_fu_348_G_1_V_read;
wire   [30:0] grp_Compult_pso_fu_348_b_0_V_read;
wire   [30:0] grp_Compult_pso_fu_348_b_1_V_read;
wire   [30:0] grp_Compult_pso_fu_348_b_2_V_read;
wire   [30:0] grp_Compult_pso_fu_348_b_3_V_read;
wire   [26:0] grp_Compult_pso_fu_348_ap_return;
reg   [4:0] i_reg_266;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_446;
reg   [4:0] i_1_reg_277;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_455;
reg   [27:0] G_V_0_s_reg_288;
reg   [27:0] G_V_1_s_reg_300;
reg   [1:0] i_2_reg_312;
reg   [35:0] p_Val2_2_reg_324;
reg   [4:0] j_reg_336;
reg    grp_Compult_pso_fu_348_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_480;
wire   [31:0] p_addr1_cast_fu_724_p1;
wire   [31:0] j_cast6_fu_698_p1;
wire  signed [30:0] tmp_s_fu_364_p1;
wire  signed [31:0] grp_fu_414_p0;
wire   [28:0] grp_fu_414_p1;
wire   [21:0] grp_fu_422_p0;
wire  signed [29:0] grp_fu_422_p1;
wire   [53:0] tmp_5_fu_427_p3;
wire  signed [60:0] tmp_5_cast_fu_434_p1;
wire  signed [60:0] p_Val2_8_fu_438_p2;
wire   [35:0] tmp_56_fu_461_p1;
wire   [0:0] r_i_i_fu_479_p2;
wire  signed [24:0] p_Val2_9_cast_cast_fu_488_p1;
wire   [24:0] tmp_6_cast_cast_fu_491_p1;
wire  signed [24:0] p_Val2_29_fu_494_p2;
wire   [36:0] tmp_58_fu_522_p3;
wire  signed [39:0] tmp_10_cast_cast_fu_530_p1;
wire  signed [39:0] p_Val2_31_fu_539_p2;
wire   [9:0] tmp_62_fu_569_p1;
wire   [0:0] tmp_63_fu_579_p3;
wire   [0:0] r_3_fu_573_p2;
wire  signed [35:0] p_Val2_32_fu_597_p1;
wire   [35:0] tmp_14_fu_600_p1;
wire   [0:0] not_carry_fu_622_p2;
wire   [0:0] deleted_zeros_fu_628_p2;
wire   [0:0] brmerge_i5_fu_639_p2;
wire   [0:0] overflow_fu_643_p2;
wire   [5:0] tmp_21_fu_668_p3;
wire   [3:0] tmp_22_fu_680_p3;
wire   [6:0] p_shl_cast_fu_676_p1;
wire   [6:0] p_shl1_cast_fu_688_p1;
wire   [6:0] j_cast6_cast_fu_703_p1;
wire   [6:0] p_addr1_fu_719_p2;
wire   [8:0] p_Result_7_fu_745_p4;
wire   [0:0] newsignbit_7_fu_737_p3;
wire   [0:0] p_not_i4_fu_755_p2;
wire   [0:0] isneg_fu_729_p3;
wire   [0:0] brmerge_i_fu_761_p2;
wire   [0:0] tmp_17_fu_767_p2;
wire   [0:0] p_not38_i_fu_785_p2;
wire   [0:0] newsignbit_0_not_i_fu_779_p2;
wire   [0:0] brmerge39_i_fu_791_p2;
wire  signed [35:0] grp_fu_813_p0;
wire   [28:0] grp_fu_813_p1;
wire   [57:0] tmp_18_fu_831_p3;
wire  signed [64:0] tmp_21_cast_cast_fu_839_p1;
wire  signed [64:0] p_Val2_36_fu_843_p2;
wire   [0:0] tmp_73_fu_879_p3;
wire   [0:0] r_4_fu_866_p2;
wire   [0:0] r_i_i_i_fu_887_p2;
wire   [5:0] tmp_76_fu_906_p4;
wire   [6:0] tmp_77_fu_922_p4;
wire   [0:0] tmp_75_fu_898_p3;
wire   [0:0] Range2_all_ones_fu_916_p2;
wire   [0:0] tmp_23_fu_944_p2;
wire   [35:0] tmp_19_fu_956_p1;
wire   [0:0] tmp_20_fu_972_p2;
wire   [0:0] carry_fu_978_p2;
wire   [0:0] p_not_i_i_fu_1000_p2;
wire   [0:0] brmerge_i_i4_fu_1005_p2;
wire   [0:0] tmp_24_fu_1010_p2;
wire   [0:0] brmerge40_demorgan_i_i_fu_1021_p2;
wire   [0:0] tmp4_demorgan_fu_1025_p2;
wire   [0:0] tmp4_fu_1030_p2;
wire   [0:0] tmp5_fu_1041_p2;
wire   [0:0] brmerge_i_i_i_fu_1052_p2;
wire   [35:0] p_Val2_91_mux_fu_1056_p3;
wire   [35:0] p_Val2_2_50_fu_1063_p3;
wire   [26:0] tmp_66_fu_1076_p1;
wire   [0:0] underflow_15_not_fu_1092_p2;
wire   [0:0] brmerge_i_i3_fu_1088_p2;
wire   [27:0] p_Val2_34_fu_1080_p3;
wire   [0:0] brmerge3_fu_1097_p2;
wire   [27:0] p_Val2_87_mux_fu_1102_p3;
wire   [27:0] p_Val2_s_51_fu_1110_p3;
wire   [27:0] G_0_V_fu_1117_p3;
wire    grp_fu_414_ce;
wire    grp_fu_422_ce;
wire    grp_fu_813_ce;
reg   [26:0] ap_return_preg = 27'b000000000000000000000000000;
reg   [32:0] ap_NS_fsm;
wire   [60:0] grp_fu_414_p10;
wire   [51:0] grp_fu_422_p00;
wire   [64:0] grp_fu_813_p10;


Compult_mpc_pso_Sx_0 #(
    .DataWidth( 29 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
Sx_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( Sx_0_address0 ),
    .ce0( Sx_0_ce0 ),
    .q0( Sx_0_q0 )
);

Compult_mpc_pso_Sx_1 #(
    .DataWidth( 22 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
Sx_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( Sx_1_address0 ),
    .ce0( Sx_1_ce0 ),
    .q0( Sx_1_q0 )
);

Compult_mpc_pso_g_V #(
    .DataWidth( 29 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
g_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( g_V_address0 ),
    .ce0( g_V_ce0 ),
    .q0( g_V_q0 )
);

Compult_mpc_pso_SxDx_V #(
    .DataWidth( 26 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
SxDx_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( SxDx_V_address0 ),
    .ce0( SxDx_V_ce0 ),
    .we0( SxDx_V_we0 ),
    .d0( SxDx_V_d0 ),
    .q0( SxDx_V_q0 )
);

Compult_mpc_pso_Ep_V #(
    .DataWidth( 36 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
Ep_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( Ep_V_address0 ),
    .ce0( Ep_V_ce0 ),
    .we0( Ep_V_we0 ),
    .d0( Ep_V_d0 ),
    .q0( Ep_V_q0 )
);

Compult_pso grp_Compult_pso_fu_348(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_Compult_pso_fu_348_ap_start ),
    .ap_done( grp_Compult_pso_fu_348_ap_done ),
    .ap_idle( grp_Compult_pso_fu_348_ap_idle ),
    .ap_ready( grp_Compult_pso_fu_348_ap_ready ),
    .G_0_V_read( grp_Compult_pso_fu_348_G_0_V_read ),
    .G_1_V_read( grp_Compult_pso_fu_348_G_1_V_read ),
    .b_0_V_read( grp_Compult_pso_fu_348_b_0_V_read ),
    .b_1_V_read( grp_Compult_pso_fu_348_b_1_V_read ),
    .b_2_V_read( grp_Compult_pso_fu_348_b_2_V_read ),
    .b_3_V_read( grp_Compult_pso_fu_348_b_3_V_read ),
    .ap_return( grp_Compult_pso_fu_348_ap_return )
);

Compult_mul_32s_29ns_61_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 61 ))
Compult_mul_32s_29ns_61_6_U46(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_414_p0 ),
    .din1( grp_fu_414_p1 ),
    .ce( grp_fu_414_ce ),
    .dout( grp_fu_414_p2 )
);

Compult_mul_22ns_30s_52_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 52 ))
Compult_mul_22ns_30s_52_3_U47(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_422_p0 ),
    .din1( grp_fu_422_p1 ),
    .ce( grp_fu_422_ce ),
    .dout( grp_fu_422_p2 )
);

Compult_mul_36s_29ns_65_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 65 ))
Compult_mul_36s_29ns_65_6_U48(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_813_p0 ),
    .din1( grp_fu_813_p1 ),
    .ce( grp_fu_813_ce ),
    .dout( grp_fu_813_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_return_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv27_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_Compult_pso_fu_348_ap_done))) begin
            ap_return_preg <= grp_Compult_pso_fu_348_ap_return;
        end
    end
end

/// grp_Compult_pso_fu_348_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_Compult_pso_fu_348_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_Compult_pso_fu_348_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) & ~(ap_const_lv1_0 == exitcond8_fu_656_p2))) begin
            grp_Compult_pso_fu_348_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_Compult_pso_fu_348_ap_ready)) begin
            grp_Compult_pso_fu_348_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond6_fu_393_p2 == ap_const_lv1_0))) begin
        i_1_reg_277 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        i_1_reg_277 <= i_5_reg_1268;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & ~(ap_const_lv1_0 == exitcond7_fu_510_p2))) begin
        i_2_reg_312 <= ap_const_lv2_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        i_2_reg_312 <= i_4_reg_1332;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        i_reg_266 <= i_3_reg_1180;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_266 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) & (ap_const_lv1_0 == exitcond8_fu_656_p2))) begin
        j_reg_336 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        j_reg_336 <= j_1_reg_1345;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) & (ap_const_lv1_0 == exitcond8_fu_656_p2))) begin
        p_Val2_2_reg_324 <= ap_const_lv36_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        p_Val2_2_reg_324 <= sum_V_fu_1069_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        Ep_V_load_reg_1384 <= Ep_V_q0;
        g_V_load_reg_1379 <= g_V_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        G_V_0_s_reg_288 <= G_1_V_1_fu_1125_p3;
        G_V_1_s_reg_300 <= G_1_V_2_fu_1132_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        OP2_V_1_cast_reg_1166 <= OP2_V_1_cast_fu_384_p1;
        OP2_V_cast_reg_1161 <= OP2_V_cast_fu_380_p1;
        p_Val2_6_reg_1155 <= p_Val2_6_fu_374_p2;
        p_Val2_s_reg_1149 <= p_Val2_s_fu_368_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        Range1_all_ones_1_reg_1435 <= Range1_all_ones_1_fu_932_p2;
        Range1_all_zeros_reg_1442 <= Range1_all_zeros_fu_938_p2;
        p_41_i_i_reg_1447 <= p_41_i_i_fu_950_p2;
        p_Val2_37_reg_1420 <= {{p_Val2_36_fu_843_p2[ap_const_lv32_39 : ap_const_lv32_16]}};
        qb_assign_5_reg_1430 <= qb_assign_5_fu_893_p2;
        signbit_2_reg_1414 <= p_Val2_36_fu_843_p2[ap_const_lv32_40];
        tmp_72_reg_1425 <= p_Val2_36_fu_843_p2[ap_const_lv32_39];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        Sx_0_load_reg_1200 <= Sx_0_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        Sx_1_load_reg_1215 <= Sx_1_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        deleted_ones_1_reg_1469 <= deleted_ones_1_fu_989_p3;
        deleted_zeros_1_reg_1464 <= deleted_zeros_1_fu_983_p3;
        newsignbit_6_reg_1458 <= p_Val2_38_fu_959_p2[ap_const_lv32_23];
        p_38_i_i_reg_1474 <= p_38_i_i_fu_995_p2;
        p_Val2_38_reg_1452 <= p_Val2_38_fu_959_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        i_1_cast8_reg_1260[0] <= i_1_cast8_fu_505_p1[0];
i_1_cast8_reg_1260[1] <= i_1_cast8_fu_505_p1[1];
i_1_cast8_reg_1260[2] <= i_1_cast8_fu_505_p1[2];
i_1_cast8_reg_1260[3] <= i_1_cast8_fu_505_p1[3];
i_1_cast8_reg_1260[4] <= i_1_cast8_fu_505_p1[4];
        i_5_reg_1268 <= i_5_fu_516_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_3_reg_1180 <= i_3_fu_399_p2;
        i_cast9_reg_1171[0] <= i_cast9_fu_388_p1[0];
i_cast9_reg_1171[1] <= i_cast9_fu_388_p1[1];
i_cast9_reg_1171[2] <= i_cast9_fu_388_p1[2];
i_cast9_reg_1171[3] <= i_cast9_fu_388_p1[3];
i_cast9_reg_1171[4] <= i_cast9_fu_388_p1[4];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        i_4_reg_1332 <= i_4_fu_662_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        j_1_reg_1345 <= j_1_fu_713_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        newsignbit_reg_1314 <= p_Val2_33_fu_603_p2[ap_const_lv32_23];
        p_Result_1_not_reg_1319 <= p_Result_1_not_fu_617_p2;
        p_Val2_33_reg_1309 <= p_Val2_33_fu_603_p2;
        p_not_i_reg_1324 <= p_not_i_fu_633_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        overflow_5_reg_1480 <= overflow_5_fu_1015_p2;
        underflow_14_not_reg_1491 <= underflow_14_not_fu_1047_p2;
        underflow_6_reg_1485 <= underflow_6_fu_1036_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) & ~(ap_const_lv1_0 == exitcond_fu_707_p2))) begin
        overflow_6_reg_1360 <= overflow_6_fu_773_p2;
        tmp_68_reg_1373 <= tmp_68_fu_803_p1;
        underflow_reg_1366 <= underflow_fu_797_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        p_Val2_1_reg_1230 <= grp_fu_422_p2;
        p_Val2_7_reg_1225 <= grp_fu_414_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        p_Val2_30_reg_1278 <= p_Val2_30_fu_534_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        p_Val2_35_reg_1399 <= grp_fu_813_p2;
        qbit_5_reg_1404 <= grp_fu_813_p2[ap_const_lv32_15];
        tmp_71_reg_1409 <= tmp_71_fu_827_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) & (ap_const_lv1_0 == exitcond8_fu_656_p2))) begin
        p_addr_reg_1337[2] <= p_addr_fu_692_p2[2];
p_addr_reg_1337[3] <= p_addr_fu_692_p2[3];
p_addr_reg_1337[4] <= p_addr_fu_692_p2[4];
p_addr_reg_1337[5] <= p_addr_fu_692_p2[5];
p_addr_reg_1337[6] <= p_addr_fu_692_p2[6];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        qb_assign_1_reg_1255 <= qb_assign_1_fu_483_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        qb_assign_3_reg_1304 <= qb_assign_3_fu_593_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        qbit_4_reg_1294 <= p_Val2_31_fu_539_p2[ap_const_lv32_A];
        r_i_i1_reg_1299 <= r_i_i1_fu_587_p2;
        signbit_reg_1283 <= p_Val2_31_fu_539_p2[ap_const_lv32_27];
        tmp_60_reg_1289 <= {{p_Val2_31_fu_539_p2[ap_const_lv32_27 : ap_const_lv32_B]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        qbit_reg_1240 <= p_Val2_8_fu_438_p2[ap_const_lv32_24];
        r_reg_1245 <= r_fu_465_p2;
        tmp_57_reg_1250 <= p_Val2_8_fu_438_p2[ap_const_lv32_25];
        tmp_reg_1235 <= {{p_Val2_8_fu_438_p2[ap_const_lv32_3C : ap_const_lv32_25]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond6_fu_393_p2 == ap_const_lv1_0))) begin
        tmp_12_cast_cast_reg_1195[0] <= tmp_12_cast_cast_fu_408_p1[0];
tmp_12_cast_cast_reg_1195[1] <= tmp_12_cast_cast_fu_408_p1[1];
tmp_12_cast_cast_reg_1195[2] <= tmp_12_cast_cast_fu_408_p1[2];
tmp_12_cast_cast_reg_1195[3] <= tmp_12_cast_cast_fu_408_p1[3];
tmp_12_cast_cast_reg_1195[4] <= tmp_12_cast_cast_fu_408_p1[4];
tmp_12_cast_cast_reg_1195[5] <= tmp_12_cast_cast_fu_408_p1[5];
tmp_12_cast_cast_reg_1195[6] <= tmp_12_cast_cast_fu_408_p1[6];
tmp_12_cast_cast_reg_1195[7] <= tmp_12_cast_cast_fu_408_p1[7];
tmp_12_cast_cast_reg_1195[8] <= tmp_12_cast_cast_fu_408_p1[8];
tmp_12_cast_cast_reg_1195[9] <= tmp_12_cast_cast_fu_408_p1[9];
tmp_12_cast_cast_reg_1195[10] <= tmp_12_cast_cast_fu_408_p1[10];
tmp_12_cast_cast_reg_1195[11] <= tmp_12_cast_cast_fu_408_p1[11];
tmp_12_cast_cast_reg_1195[12] <= tmp_12_cast_cast_fu_408_p1[12];
tmp_12_cast_cast_reg_1195[13] <= tmp_12_cast_cast_fu_408_p1[13];
tmp_12_cast_cast_reg_1195[14] <= tmp_12_cast_cast_fu_408_p1[14];
tmp_12_cast_cast_reg_1195[15] <= tmp_12_cast_cast_fu_408_p1[15];
tmp_12_cast_cast_reg_1195[16] <= tmp_12_cast_cast_fu_408_p1[16];
tmp_12_cast_cast_reg_1195[17] <= tmp_12_cast_cast_fu_408_p1[17];
tmp_12_cast_cast_reg_1195[18] <= tmp_12_cast_cast_fu_408_p1[18];
tmp_12_cast_cast_reg_1195[19] <= tmp_12_cast_cast_fu_408_p1[19];
tmp_12_cast_cast_reg_1195[20] <= tmp_12_cast_cast_fu_408_p1[20];
tmp_12_cast_cast_reg_1195[21] <= tmp_12_cast_cast_fu_408_p1[21];
tmp_12_cast_cast_reg_1195[22] <= tmp_12_cast_cast_fu_408_p1[22];
tmp_12_cast_cast_reg_1195[23] <= tmp_12_cast_cast_fu_408_p1[23];
tmp_12_cast_cast_reg_1195[24] <= tmp_12_cast_cast_fu_408_p1[24];
tmp_12_cast_cast_reg_1195[25] <= tmp_12_cast_cast_fu_408_p1[25];
tmp_12_cast_cast_reg_1195[26] <= tmp_12_cast_cast_fu_408_p1[26];
tmp_12_cast_cast_reg_1195[27] <= tmp_12_cast_cast_fu_408_p1[27];
        tmp_7_cast_reg_1190[0] <= tmp_7_cast_fu_405_p1[0];
tmp_7_cast_reg_1190[1] <= tmp_7_cast_fu_405_p1[1];
tmp_7_cast_reg_1190[2] <= tmp_7_cast_fu_405_p1[2];
tmp_7_cast_reg_1190[3] <= tmp_7_cast_fu_405_p1[3];
tmp_7_cast_reg_1190[4] <= tmp_7_cast_fu_405_p1[4];
tmp_7_cast_reg_1190[5] <= tmp_7_cast_fu_405_p1[5];
tmp_7_cast_reg_1190[6] <= tmp_7_cast_fu_405_p1[6];
tmp_7_cast_reg_1190[7] <= tmp_7_cast_fu_405_p1[7];
tmp_7_cast_reg_1190[8] <= tmp_7_cast_fu_405_p1[8];
tmp_7_cast_reg_1190[9] <= tmp_7_cast_fu_405_p1[9];
tmp_7_cast_reg_1190[10] <= tmp_7_cast_fu_405_p1[10];
tmp_7_cast_reg_1190[11] <= tmp_7_cast_fu_405_p1[11];
tmp_7_cast_reg_1190[12] <= tmp_7_cast_fu_405_p1[12];
tmp_7_cast_reg_1190[13] <= tmp_7_cast_fu_405_p1[13];
tmp_7_cast_reg_1190[14] <= tmp_7_cast_fu_405_p1[14];
tmp_7_cast_reg_1190[15] <= tmp_7_cast_fu_405_p1[15];
tmp_7_cast_reg_1190[16] <= tmp_7_cast_fu_405_p1[16];
tmp_7_cast_reg_1190[17] <= tmp_7_cast_fu_405_p1[17];
tmp_7_cast_reg_1190[18] <= tmp_7_cast_fu_405_p1[18];
tmp_7_cast_reg_1190[19] <= tmp_7_cast_fu_405_p1[19];
tmp_7_cast_reg_1190[20] <= tmp_7_cast_fu_405_p1[20];
tmp_7_cast_reg_1190[21] <= tmp_7_cast_fu_405_p1[21];
tmp_7_cast_reg_1190[22] <= tmp_7_cast_fu_405_p1[22];
tmp_7_cast_reg_1190[23] <= tmp_7_cast_fu_405_p1[23];
tmp_7_cast_reg_1190[24] <= tmp_7_cast_fu_405_p1[24];
tmp_7_cast_reg_1190[25] <= tmp_7_cast_fu_405_p1[25];
tmp_7_cast_reg_1190[26] <= tmp_7_cast_fu_405_p1[26];
tmp_7_cast_reg_1190[27] <= tmp_7_cast_fu_405_p1[27];
    end
end

/// Ep_V_address0 assign process. ///
always @ (i_1_cast8_reg_1260 or ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st18_fsm_17 or j_cast6_fu_698_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        Ep_V_address0 = i_1_cast8_reg_1260;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        Ep_V_address0 = j_cast6_fu_698_p1;
    end else begin
        Ep_V_address0 = 'bx;
    end
end

/// Ep_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        Ep_V_ce0 = ap_const_logic_1;
    end else begin
        Ep_V_ce0 = ap_const_logic_0;
    end
end

/// Ep_V_we0 assign process. ///
always @ (ap_sig_cseq_ST_st18_fsm_17)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        Ep_V_we0 = ap_const_logic_1;
    end else begin
        Ep_V_we0 = ap_const_logic_0;
    end
end

/// SxDx_V_address0 assign process. ///
always @ (i_cast9_reg_1171 or i_1_cast8_fu_505_p1 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        SxDx_V_address0 = i_cast9_reg_1171;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        SxDx_V_address0 = i_1_cast8_fu_505_p1;
    end else begin
        SxDx_V_address0 = 'bx;
    end
end

/// SxDx_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        SxDx_V_ce0 = ap_const_logic_1;
    end else begin
        SxDx_V_ce0 = ap_const_logic_0;
    end
end

/// SxDx_V_we0 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        SxDx_V_we0 = ap_const_logic_1;
    end else begin
        SxDx_V_we0 = ap_const_logic_0;
    end
end

/// Sx_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        Sx_0_ce0 = ap_const_logic_1;
    end else begin
        Sx_0_ce0 = ap_const_logic_0;
    end
end

/// Sx_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        Sx_1_ce0 = ap_const_logic_1;
    end else begin
        Sx_1_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or grp_Compult_pso_fu_348_ap_done or ap_sig_cseq_ST_st33_fsm_32)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_Compult_pso_fu_348_ap_done)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (grp_Compult_pso_fu_348_ap_done or ap_sig_cseq_ST_st33_fsm_32)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_Compult_pso_fu_348_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_return assign process. ///
always @ (grp_Compult_pso_fu_348_ap_done or grp_Compult_pso_fu_348_ap_return or ap_sig_cseq_ST_st33_fsm_32 or ap_return_preg)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_Compult_pso_fu_348_ap_done))) begin
        ap_return = grp_Compult_pso_fu_348_ap_return;
    end else begin
        ap_return = ap_return_preg;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_182)
begin
    if (ap_sig_bdd_182) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_197)
begin
    if (ap_sig_bdd_197) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_446)
begin
    if (ap_sig_bdd_446) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_206)
begin
    if (ap_sig_bdd_206) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_222)
begin
    if (ap_sig_bdd_222) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_231)
begin
    if (ap_sig_bdd_231) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_246)
begin
    if (ap_sig_bdd_246) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_255)
begin
    if (ap_sig_bdd_255) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_455)
begin
    if (ap_sig_bdd_455) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_270)
begin
    if (ap_sig_bdd_270) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_51)
begin
    if (ap_sig_bdd_51) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_284)
begin
    if (ap_sig_bdd_284) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_307)
begin
    if (ap_sig_bdd_307) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_318)
begin
    if (ap_sig_bdd_318) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_329)
begin
    if (ap_sig_bdd_329) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_342)
begin
    if (ap_sig_bdd_342) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_363)
begin
    if (ap_sig_bdd_363) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_105)
begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_380)
begin
    if (ap_sig_bdd_380) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_393)
begin
    if (ap_sig_bdd_393) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_402)
begin
    if (ap_sig_bdd_402) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_480)
begin
    if (ap_sig_bdd_480) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_127)
begin
    if (ap_sig_bdd_127) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_136)
begin
    if (ap_sig_bdd_136) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_145)
begin
    if (ap_sig_bdd_145) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_153)
begin
    if (ap_sig_bdd_153) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_162)
begin
    if (ap_sig_bdd_162) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_171)
begin
    if (ap_sig_bdd_171) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// g_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        g_V_ce0 = ap_const_logic_1;
    end else begin
        g_V_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond6_fu_393_p2 or exitcond7_fu_510_p2 or exitcond8_fu_656_p2 or exitcond_fu_707_p2 or grp_Compult_pso_fu_348_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond6_fu_393_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st13_fsm_12 : 
        begin
            if (~(ap_const_lv1_0 == exitcond7_fu_510_p2)) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st19_fsm_18 : 
        begin
            if ((ap_const_lv1_0 == exitcond8_fu_656_p2)) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        ap_ST_st20_fsm_19 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_707_p2)) begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st33_fsm_32 : 
        begin
            if (~(ap_const_logic_0 == grp_Compult_pso_fu_348_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ep_V_d0 = ((overflow_fu_643_p2)? ap_const_lv36_7FFFFFFFF: p_Val2_33_reg_1309);
assign G_0_V_fu_1117_p3 = ((brmerge3_fu_1097_p2)? p_Val2_87_mux_fu_1102_p3: p_Val2_s_51_fu_1110_p3);
assign G_1_V_1_fu_1125_p3 = ((tmp_68_reg_1373)? G_V_0_s_reg_288: G_0_V_fu_1117_p3);
assign G_1_V_2_fu_1132_p3 = ((tmp_68_reg_1373)? G_0_V_fu_1117_p3: G_V_1_s_reg_300);
assign OP2_V_1_cast_fu_384_p1 = $signed(dx2_in_V);
assign OP2_V_cast_fu_380_p1 = $signed(dx1_in_V);
assign Range1_all_ones_1_fu_932_p2 = (tmp_77_fu_922_p4 == ap_const_lv7_7F? 1'b1: 1'b0);
assign Range1_all_zeros_fu_938_p2 = (tmp_77_fu_922_p4 == ap_const_lv7_0? 1'b1: 1'b0);
assign Range2_all_ones_fu_916_p2 = (tmp_76_fu_906_p4 == ap_const_lv6_3F? 1'b1: 1'b0);
assign SxDx_V_d0 = $signed(p_Val2_29_fu_494_p2);
assign Sx_0_address0 = i_cast9_fu_388_p1;
assign Sx_1_address0 = i_cast9_reg_1171;

/// ap_sig_bdd_105 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_127 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_127 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_136 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_136 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_145 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_145 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_153 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_162 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_162 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_171 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_171 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_182 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_182 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_197 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_197 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_206 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_206 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_222 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_222 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_231 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_231 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_246 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_246 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_255 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_255 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_270 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_270 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_284 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_284 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_307 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_307 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_318 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_318 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_329 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_329 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_342 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_342 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_363 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_363 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_380 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_380 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_393 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_393 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_402 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_402 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_446 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_446 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_455 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_455 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_480 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_480 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_51 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_51 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign brmerge39_i_fu_791_p2 = (p_not38_i_fu_785_p2 | newsignbit_0_not_i_fu_779_p2);
assign brmerge3_fu_1097_p2 = (overflow_6_reg_1360 | underflow_15_not_fu_1092_p2);
assign brmerge40_demorgan_i_i_fu_1021_p2 = (newsignbit_6_reg_1458 & deleted_ones_1_reg_1469);
assign brmerge_i5_fu_639_p2 = (newsignbit_reg_1314 | p_not_i_reg_1324);
assign brmerge_i_fu_761_p2 = (newsignbit_7_fu_737_p3 | p_not_i4_fu_755_p2);
assign brmerge_i_i3_fu_1088_p2 = (underflow_reg_1366 | overflow_6_reg_1360);
assign brmerge_i_i4_fu_1005_p2 = (newsignbit_6_reg_1458 | p_not_i_i_fu_1000_p2);
assign brmerge_i_i_i_fu_1052_p2 = (underflow_6_reg_1485 | overflow_5_reg_1480);
assign carry_fu_978_p2 = (tmp_72_reg_1425 & tmp_20_fu_972_p2);
assign deleted_ones_1_fu_989_p3 = ((carry_fu_978_p2)? p_41_i_i_reg_1447: Range1_all_ones_1_reg_1435);
assign deleted_zeros_1_fu_983_p3 = ((carry_fu_978_p2)? Range1_all_ones_1_reg_1435: Range1_all_zeros_reg_1442);
assign deleted_zeros_fu_628_p2 = (signbit_reg_1283 ^ not_carry_fu_622_p2);
assign exitcond6_fu_393_p2 = (i_reg_266 == ap_const_lv5_14? 1'b1: 1'b0);
assign exitcond7_fu_510_p2 = (i_1_reg_277 == ap_const_lv5_14? 1'b1: 1'b0);
assign exitcond8_fu_656_p2 = (i_2_reg_312 == ap_const_lv2_2? 1'b1: 1'b0);
assign exitcond_fu_707_p2 = (j_reg_336 == ap_const_lv5_14? 1'b1: 1'b0);
assign g_V_address0 = p_addr1_cast_fu_724_p1;
assign grp_Compult_pso_fu_348_G_0_V_read = G_V_0_s_reg_288;
assign grp_Compult_pso_fu_348_G_1_V_read = G_V_1_s_reg_300;
assign grp_Compult_pso_fu_348_ap_start = grp_Compult_pso_fu_348_ap_start_ap_start_reg;
assign grp_Compult_pso_fu_348_b_0_V_read = p_Val2_s_reg_1149;
assign grp_Compult_pso_fu_348_b_1_V_read = p_Val2_s_reg_1149;
assign grp_Compult_pso_fu_348_b_2_V_read = p_Val2_6_reg_1155;
assign grp_Compult_pso_fu_348_b_3_V_read = p_Val2_6_reg_1155;
assign grp_fu_414_ce = ap_const_logic_1;
assign grp_fu_414_p0 = OP2_V_cast_reg_1161;
assign grp_fu_414_p1 = grp_fu_414_p10;
assign grp_fu_414_p10 = Sx_0_load_reg_1200;
assign grp_fu_422_ce = ap_const_logic_1;
assign grp_fu_422_p0 = grp_fu_422_p00;
assign grp_fu_422_p00 = Sx_1_load_reg_1215;
assign grp_fu_422_p1 = OP2_V_1_cast_reg_1166;
assign grp_fu_813_ce = ap_const_logic_1;
assign grp_fu_813_p0 = Ep_V_load_reg_1384;
assign grp_fu_813_p1 = grp_fu_813_p10;
assign grp_fu_813_p10 = g_V_load_reg_1379;
assign i_1_cast8_fu_505_p1 = i_1_reg_277;
assign i_3_fu_399_p2 = (i_reg_266 + ap_const_lv5_1);
assign i_4_fu_662_p2 = (i_2_reg_312 + ap_const_lv2_1);
assign i_5_fu_516_p2 = (i_1_reg_277 + ap_const_lv5_1);
assign i_cast9_fu_388_p1 = i_reg_266;
assign isneg_fu_729_p3 = p_Val2_2_reg_324[ap_const_lv32_23];
assign j_1_fu_713_p2 = (j_reg_336 + ap_const_lv5_1);
assign j_cast6_cast_fu_703_p1 = j_reg_336;
assign j_cast6_fu_698_p1 = j_reg_336;
assign newsignbit_0_not_i_fu_779_p2 = (newsignbit_7_fu_737_p3 ^ ap_const_lv1_1);
assign newsignbit_6_fu_964_p3 = p_Val2_38_fu_959_p2[ap_const_lv32_23];
assign newsignbit_7_fu_737_p3 = p_Val2_2_reg_324[ap_const_lv32_1A];
assign newsignbit_fu_609_p3 = p_Val2_33_fu_603_p2[ap_const_lv32_23];
assign not_carry_fu_622_p2 = (newsignbit_fu_609_p3 | p_Result_1_not_fu_617_p2);
assign overflow_5_fu_1015_p2 = (brmerge_i_i4_fu_1005_p2 & tmp_24_fu_1010_p2);
assign overflow_6_fu_773_p2 = (brmerge_i_fu_761_p2 & tmp_17_fu_767_p2);
assign overflow_fu_643_p2 = (brmerge_i5_fu_639_p2 & p_Result_1_not_reg_1319);
assign p_38_i_i_fu_995_p2 = (carry_fu_978_p2 & Range1_all_ones_1_reg_1435);
assign p_41_i_i_fu_950_p2 = (Range2_all_ones_fu_916_p2 & tmp_23_fu_944_p2);
assign p_Result_1_not_fu_617_p2 = (signbit_reg_1283 ^ ap_const_lv1_1);
assign p_Result_7_fu_745_p4 = {{p_Val2_2_reg_324[ap_const_lv32_23 : ap_const_lv32_1B]}};
assign p_Val2_29_fu_494_p2 = ($signed(p_Val2_9_cast_cast_fu_488_p1) + $signed(tmp_6_cast_cast_fu_491_p1));
assign p_Val2_2_50_fu_1063_p3 = ((underflow_6_reg_1485)? ap_const_lv36_800000000: p_Val2_38_reg_1452);
assign p_Val2_30_fu_534_p2 = ($signed(tmp_7_cast_reg_1190) - $signed(tmp_10_cast_cast_fu_530_p1));
assign p_Val2_31_fu_539_p2 = ($signed(p_Val2_30_reg_1278) - $signed(tmp_12_cast_cast_reg_1195));
assign p_Val2_32_fu_597_p1 = $signed(tmp_60_reg_1289);
assign p_Val2_33_fu_603_p2 = ($signed(p_Val2_32_fu_597_p1) + $signed(tmp_14_fu_600_p1));
assign p_Val2_34_fu_1080_p3 = {{tmp_66_fu_1076_p1}, {ap_const_lv1_0}};
assign p_Val2_36_fu_843_p2 = ($signed(tmp_21_cast_cast_fu_839_p1) + $signed(p_Val2_35_reg_1399));
assign p_Val2_38_fu_959_p2 = (p_Val2_37_reg_1420 + tmp_19_fu_956_p1);
assign p_Val2_6_fu_374_p2 = ($signed(ap_const_lv31_79999A00) - $signed(tmp_s_fu_364_p1));
assign p_Val2_87_mux_fu_1102_p3 = ((brmerge_i_i3_fu_1088_p2)? ap_const_lv28_7FFFFFF: p_Val2_34_fu_1080_p3);
assign p_Val2_8_fu_438_p2 = ($signed(tmp_5_cast_fu_434_p1) + $signed(p_Val2_7_reg_1225));
assign p_Val2_91_mux_fu_1056_p3 = ((brmerge_i_i_i_fu_1052_p2)? ap_const_lv36_7FFFFFFFF: p_Val2_38_reg_1452);
assign p_Val2_9_cast_cast_fu_488_p1 = $signed(tmp_reg_1235);
assign p_Val2_s_51_fu_1110_p3 = ((underflow_reg_1366)? ap_const_lv28_8000000: p_Val2_34_fu_1080_p3);
assign p_Val2_s_fu_368_p2 = ($signed(tmp_s_fu_364_p1) + $signed(ap_const_lv31_79999A00));
assign p_addr1_cast_fu_724_p1 = p_addr1_fu_719_p2;
assign p_addr1_fu_719_p2 = (p_addr_reg_1337 + j_cast6_cast_fu_703_p1);
assign p_addr_fu_692_p2 = (p_shl_cast_fu_676_p1 + p_shl1_cast_fu_688_p1);
assign p_not38_i_fu_785_p2 = (p_Result_7_fu_745_p4 != ap_const_lv9_1FF? 1'b1: 1'b0);
assign p_not_i4_fu_755_p2 = (p_Result_7_fu_745_p4 != ap_const_lv9_0? 1'b1: 1'b0);
assign p_not_i_fu_633_p2 = (deleted_zeros_fu_628_p2 ^ ap_const_lv1_1);
assign p_not_i_i_fu_1000_p2 = (deleted_zeros_1_reg_1464 ^ ap_const_lv1_1);
assign p_shl1_cast_fu_688_p1 = tmp_22_fu_680_p3;
assign p_shl_cast_fu_676_p1 = tmp_21_fu_668_p3;
assign qb_assign_1_fu_483_p2 = (r_i_i_fu_479_p2 & qbit_reg_1240);
assign qb_assign_3_fu_593_p2 = (r_i_i1_reg_1299 & qbit_4_reg_1294);
assign qb_assign_5_fu_893_p2 = (r_i_i_i_fu_887_p2 & qbit_5_reg_1404);
assign r_3_fu_573_p2 = (tmp_62_fu_569_p1 != ap_const_lv10_0? 1'b1: 1'b0);
assign r_4_fu_866_p2 = (tmp_71_reg_1409 != ap_const_lv21_0? 1'b1: 1'b0);
assign r_fu_465_p2 = (tmp_56_fu_461_p1 != ap_const_lv36_0? 1'b1: 1'b0);
assign r_i_i1_fu_587_p2 = (tmp_63_fu_579_p3 | r_3_fu_573_p2);
assign r_i_i_fu_479_p2 = (tmp_57_reg_1250 | r_reg_1245);
assign r_i_i_i_fu_887_p2 = (tmp_73_fu_879_p3 | r_4_fu_866_p2);
assign sum_V_fu_1069_p3 = ((underflow_14_not_reg_1491)? p_Val2_91_mux_fu_1056_p3: p_Val2_2_50_fu_1063_p3);
assign tmp4_demorgan_fu_1025_p2 = (p_38_i_i_reg_1474 | brmerge40_demorgan_i_i_fu_1021_p2);
assign tmp4_fu_1030_p2 = (tmp4_demorgan_fu_1025_p2 ^ ap_const_lv1_1);
assign tmp5_fu_1041_p2 = (brmerge40_demorgan_i_i_fu_1021_p2 | tmp_24_fu_1010_p2);
assign tmp_10_cast_cast_fu_530_p1 = $signed(tmp_58_fu_522_p3);
assign tmp_12_cast_cast_fu_408_p1 = y_in_V;
assign tmp_14_fu_600_p1 = qb_assign_3_reg_1304;
assign tmp_17_fu_767_p2 = (isneg_fu_729_p3 ^ ap_const_lv1_1);
assign tmp_18_fu_831_p3 = {{p_Val2_2_reg_324}, {ap_const_lv22_0}};
assign tmp_19_fu_956_p1 = qb_assign_5_reg_1430;
assign tmp_20_fu_972_p2 = (newsignbit_6_fu_964_p3 ^ ap_const_lv1_1);
assign tmp_21_cast_cast_fu_839_p1 = $signed(tmp_18_fu_831_p3);
assign tmp_21_fu_668_p3 = {{i_2_reg_312}, {ap_const_lv4_0}};
assign tmp_22_fu_680_p3 = {{i_2_reg_312}, {ap_const_lv2_0}};
assign tmp_23_fu_944_p2 = (tmp_75_fu_898_p3 ^ ap_const_lv1_1);
assign tmp_24_fu_1010_p2 = (signbit_2_reg_1414 ^ ap_const_lv1_1);
assign tmp_56_fu_461_p1 = p_Val2_8_fu_438_p2[35:0];
assign tmp_58_fu_522_p3 = {{SxDx_V_q0}, {ap_const_lv11_0}};
assign tmp_5_cast_fu_434_p1 = $signed(tmp_5_fu_427_p3);
assign tmp_5_fu_427_p3 = {{p_Val2_1_reg_1230}, {ap_const_lv2_0}};
assign tmp_62_fu_569_p1 = p_Val2_31_fu_539_p2[9:0];
assign tmp_63_fu_579_p3 = p_Val2_31_fu_539_p2[ap_const_lv32_B];
assign tmp_66_fu_1076_p1 = p_Val2_2_reg_324[26:0];
assign tmp_68_fu_803_p1 = i_2_reg_312[0:0];
assign tmp_6_cast_cast_fu_491_p1 = qb_assign_1_reg_1255;
assign tmp_71_fu_827_p1 = grp_fu_813_p2[20:0];
assign tmp_73_fu_879_p3 = p_Val2_36_fu_843_p2[ap_const_lv32_16];
assign tmp_75_fu_898_p3 = p_Val2_36_fu_843_p2[ap_const_lv32_3A];
assign tmp_76_fu_906_p4 = {{p_Val2_36_fu_843_p2[ap_const_lv32_40 : ap_const_lv32_3B]}};
assign tmp_77_fu_922_p4 = {{p_Val2_36_fu_843_p2[ap_const_lv32_40 : ap_const_lv32_3A]}};
assign tmp_7_cast_fu_405_p1 = ref_in_V;
assign tmp_s_fu_364_p1 = $signed(u_in_V);
assign underflow_14_not_fu_1047_p2 = (tmp5_fu_1041_p2 | p_38_i_i_reg_1474);
assign underflow_15_not_fu_1092_p2 = (underflow_reg_1366 ^ ap_const_lv1_1);
assign underflow_6_fu_1036_p2 = (signbit_2_reg_1414 & tmp4_fu_1030_p2);
assign underflow_fu_797_p2 = (brmerge39_i_fu_791_p2 & isneg_fu_729_p3);
always @ (posedge ap_clk)
begin
    i_cast9_reg_1171[31:5] <= 27'b000000000000000000000000000;
    tmp_7_cast_reg_1190[39:28] <= 12'b000000000000;
    tmp_12_cast_cast_reg_1195[39:28] <= 12'b000000000000;
    i_1_cast8_reg_1260[31:5] <= 27'b000000000000000000000000000;
    p_addr_reg_1337[1:0] <= 2'b00;
end



endmodule //Compult_mpc_pso

