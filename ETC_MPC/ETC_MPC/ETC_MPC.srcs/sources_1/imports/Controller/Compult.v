// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Compult,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.877500,HLS_SYN_LAT=149819,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=80,HLS_SYN_FF=7709,HLS_SYN_LUT=12361}" *)

module Compult (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        y_in_V,
        ref_in_V,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 24'b1;
parameter    ap_ST_st2_fsm_1 = 24'b10;
parameter    ap_ST_st3_fsm_2 = 24'b100;
parameter    ap_ST_st4_fsm_3 = 24'b1000;
parameter    ap_ST_st5_fsm_4 = 24'b10000;
parameter    ap_ST_st6_fsm_5 = 24'b100000;
parameter    ap_ST_st7_fsm_6 = 24'b1000000;
parameter    ap_ST_st8_fsm_7 = 24'b10000000;
parameter    ap_ST_st9_fsm_8 = 24'b100000000;
parameter    ap_ST_st10_fsm_9 = 24'b1000000000;
parameter    ap_ST_st11_fsm_10 = 24'b10000000000;
parameter    ap_ST_st12_fsm_11 = 24'b100000000000;
parameter    ap_ST_st13_fsm_12 = 24'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 24'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 24'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 24'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 24'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 24'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 24'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 24'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 24'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 24'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 24'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 24'b100000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv36_73333 = 36'b1110011001100110011;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv18_0 = 18'b000000000000000000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv16_FFFF = 16'b1111111111111111;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv41_1F4 = 41'b111110100;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv7_7F = 7'b1111111;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_7FFFFFFF = 32'b1111111111111111111111111111111;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv30_1FFFFFFF = 30'b11111111111111111111111111111;
parameter    ap_const_lv30_20000000 = 30'b100000000000000000000000000000;
parameter    ap_const_lv55_1D4C000 = 55'b1110101001100000000000000;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv36_0 = 36'b000000000000000000000000000000000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv16_7FFF = 16'b111111111111111;
parameter    ap_const_lv16_8000 = 16'b1000000000000000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv13_1FFF = 13'b1111111111111;
parameter    ap_const_lv27_0 = 27'b000000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] y_in_V;
input  [15:0] ref_in_V;
output  [29:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm = 24'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_40;
reg   [27:0] x1_1_V = 28'b0000000000000000000000000000;
reg   [31:0] x2_2_V = 32'b00000000000000000000000000000000;
reg   [29:0] u_V = 30'b000000000000000000000000000000;
reg   [15:0] p_Val2_6_reg_1156;
reg   [0:0] qbit_reg_1161;
wire   [17:0] tmp_25_fu_208_p1;
reg   [17:0] tmp_25_reg_1166;
reg   [0:0] tmp_26_reg_1171;
reg   [0:0] tmp_27_reg_1176;
wire   [0:0] qb_assign_1_fu_238_p2;
reg   [0:0] qb_assign_1_reg_1181;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_75;
wire   [15:0] tmp_15_fu_267_p3;
reg   [15:0] tmp_15_reg_1186;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_84;
wire   [27:0] p_Val2_11_fu_274_p3;
reg   [27:0] p_Val2_11_reg_1191;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_93;
wire   [28:0] p_Val2_12_fu_293_p2;
reg   [28:0] p_Val2_12_reg_1196;
wire   [30:0] tmp_16_fu_305_p3;
reg   [30:0] tmp_16_reg_1201;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_104;
reg   [0:0] signbit_reg_1211;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_115;
reg   [0:0] qbit_2_reg_1217;
reg   [0:0] newsignbit_reg_1222;
reg   [0:0] tmp_37_reg_1228;
reg   [30:0] tmp_s_reg_1233;
reg   [6:0] tmp_38_reg_1238;
reg   [15:0] p_Val2_9_reg_1244;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_134;
reg   [0:0] qbit_1_reg_1249;
wire   [17:0] tmp_30_fu_402_p1;
reg   [17:0] tmp_30_reg_1254;
reg   [0:0] tmp_31_reg_1259;
reg   [0:0] tmp_32_reg_1264;
wire   [0:0] qb_assign_5_fu_422_p2;
reg   [0:0] qb_assign_5_reg_1269;
wire   [0:0] brmerge_i_i2_fu_436_p2;
reg   [0:0] brmerge_i_i2_reg_1274;
wire   [0:0] brmerge40_demorgan_i_i_fu_441_p2;
reg   [0:0] brmerge40_demorgan_i_i_reg_1279;
wire   [0:0] qb_assign_3_fu_456_p2;
reg   [0:0] qb_assign_3_reg_1285;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_157;
wire   [31:0] p_Val2_15_fu_514_p3;
reg   [31:0] p_Val2_15_reg_1290;
wire   [29:0] p_Val2_18_fu_571_p1;
reg   [29:0] p_Val2_18_reg_1296;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_168;
wire   [0:0] overflow_2_fu_611_p2;
reg   [0:0] overflow_2_reg_1302;
wire   [0:0] underflow_2_fu_635_p2;
reg   [0:0] underflow_2_reg_1308;
wire   [15:0] tmp_17_fu_646_p3;
reg   [15:0] tmp_17_reg_1315;
wire  signed [31:0] dx1_V_fu_653_p1;
reg  signed [31:0] dx1_V_reg_1320;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_183;
wire   [29:0] dx2_V_fu_684_p3;
reg   [29:0] dx2_V_reg_1325;
wire   [27:0] this_assign_s_fu_698_p3;
reg   [27:0] this_assign_s_reg_1336;
reg   [0:0] isneg_2_reg_1341;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_198;
wire    grp_Compult_mpc_pso_fu_161_ap_done;
wire   [29:0] p_Val2_23_fu_735_p1;
reg   [29:0] p_Val2_23_reg_1348;
reg   [0:0] newsignbit_3_reg_1354;
wire   [29:0] tmp_7_fu_785_p3;
reg   [29:0] tmp_7_reg_1361;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_215;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_224;
reg   [0:0] signbit_1_reg_1371;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_233;
reg   [15:0] p_Val2_25_reg_1378;
reg   [0:0] qbit_3_reg_1383;
wire   [35:0] tmp_47_fu_834_p1;
reg   [35:0] tmp_47_reg_1388;
reg   [0:0] tmp_48_reg_1393;
reg   [0:0] tmp_49_reg_1398;
reg   [0:0] tmp_51_reg_1403;
reg   [1:0] tmp_8_reg_1408;
wire   [0:0] qb_assign_7_fu_882_p2;
reg   [0:0] qb_assign_7_reg_1414;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_256;
wire   [15:0] p_Val2_26_fu_890_p2;
reg   [15:0] p_Val2_26_reg_1419;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_265;
wire   [0:0] newsignbit_4_fu_895_p3;
reg   [0:0] newsignbit_4_reg_1425;
wire   [0:0] deleted_zeros_fu_924_p3;
reg   [0:0] deleted_zeros_reg_1431;
wire   [0:0] deleted_ones_fu_942_p3;
reg   [0:0] deleted_ones_reg_1436;
wire   [0:0] p_38_i_fu_950_p2;
reg   [0:0] p_38_i_reg_1441;
wire   [0:0] underflow_4_fu_992_p2;
reg   [0:0] underflow_4_reg_1447;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_282;
wire   [0:0] brmerge_i_i6_fu_997_p2;
reg   [0:0] brmerge_i_i6_reg_1452;
wire   [0:0] underflow_17_not_fu_1009_p2;
reg   [0:0] underflow_17_not_reg_1457;
reg   [0:0] isneg_3_reg_1462;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_295;
wire   [2:0] tmp_53_fu_1041_p1;
reg   [2:0] tmp_53_reg_1468;
wire   [0:0] brmerge_i8_fu_1069_p2;
reg   [0:0] brmerge_i8_reg_1473;
wire   [0:0] brmerge39_i_fu_1087_p2;
reg   [0:0] brmerge39_i_reg_1478;
wire    grp_Compult_mpc_pso_fu_161_ap_start;
wire    grp_Compult_mpc_pso_fu_161_ap_idle;
wire    grp_Compult_mpc_pso_fu_161_ap_ready;
wire   [31:0] grp_Compult_mpc_pso_fu_161_dx1_in_V;
wire   [29:0] grp_Compult_mpc_pso_fu_161_dx2_in_V;
wire   [27:0] grp_Compult_mpc_pso_fu_161_y_in_V;
wire   [29:0] grp_Compult_mpc_pso_fu_161_u_in_V;
wire   [27:0] grp_Compult_mpc_pso_fu_161_ref_in_V;
wire   [26:0] grp_Compult_mpc_pso_fu_161_ap_return;
reg    grp_Compult_mpc_pso_fu_161_ap_start_ap_start_reg = 1'b0;
wire   [15:0] p_Val2_s_fu_184_p0;
wire   [35:0] p_Val2_s_fu_184_p2;
wire   [0:0] r_fu_228_p2;
wire   [0:0] r_i_i_fu_233_p2;
wire   [15:0] tmp_1_fu_243_p1;
wire   [15:0] p_Val2_7_fu_246_p2;
wire   [0:0] tmp_28_fu_251_p3;
wire   [15:0] phitmp_fu_259_p3;
wire   [28:0] tmp_i_cast_fu_281_p1;
wire   [28:0] tmp_i_cast_36_fu_289_p1;
wire  signed [30:0] grp_fu_316_p0;
wire   [9:0] grp_fu_316_p1;
wire  signed [40:0] grp_fu_316_p2;
wire   [15:0] p_Val2_8_fu_378_p0;
wire   [35:0] p_Val2_8_fu_378_p2;
wire   [0:0] p_not_i_i_fu_431_p2;
wire   [0:0] Range1_all_ones_3_fu_426_p2;
wire   [0:0] r_1_fu_446_p2;
wire   [0:0] r_i_i2_fu_451_p2;
wire   [0:0] tmp_34_i_fu_467_p2;
wire   [0:0] tmp_fu_477_p2;
wire   [0:0] underflow_fu_482_p2;
wire   [0:0] overflow_fu_472_p2;
wire   [0:0] brmerge_i_i_i3_fu_487_p2;
wire   [31:0] p_Val2_14_fu_461_p3;
wire   [0:0] tmp7_fu_493_p2;
wire   [31:0] p_Val2_97_mux_i_fu_498_p3;
wire   [31:0] p_Val2_i4_fu_506_p3;
wire   [15:0] tmp_3_fu_522_p1;
wire   [15:0] p_Val2_10_fu_525_p2;
wire   [0:0] tmp_33_fu_530_p3;
wire  signed [32:0] tmp_35_i_fu_546_p1;
wire  signed [32:0] tmp_36_i5_fu_553_p1;
wire  signed [32:0] p_Val2_17_fu_557_p2;
wire   [2:0] p_Result_21_i_fu_583_p4;
wire   [0:0] newsignbit_2_fu_575_p3;
wire   [0:0] p_not_i5_i_fu_593_p2;
wire   [0:0] isneg_fu_563_p3;
wire   [0:0] brmerge_i6_i_fu_599_p2;
wire   [0:0] tmp_37_i6_fu_605_p2;
wire   [0:0] p_not38_i_i_fu_623_p2;
wire   [0:0] newsignbit_0_not_i_i_fu_617_p2;
wire   [0:0] brmerge39_i_i_fu_629_p2;
wire   [15:0] phitmp8_fu_538_p3;
wire   [0:0] underflow_16_not_i_fu_661_p2;
wire   [0:0] brmerge_i_i5_i_fu_657_p2;
wire   [0:0] brmerge2_i_fu_666_p2;
wire   [29:0] p_Val2_101_mux_i_fu_671_p3;
wire   [29:0] p_Val2_3_i_fu_678_p3;
wire   [28:0] p_Val2_21_fu_706_p3;
wire  signed [30:0] tmp_4_fu_714_p1;
wire  signed [30:0] tmp_5_fu_717_p1;
wire  signed [30:0] p_Val2_22_fu_721_p2;
wire   [0:0] tmp_6_fu_747_p2;
wire   [0:0] isneg_not_fu_761_p2;
wire   [0:0] brmerge_i_i_fu_757_p2;
wire   [0:0] underflow_3_fu_752_p2;
wire   [0:0] brmerge_fu_766_p2;
wire   [29:0] p_Val2_115_mux_fu_771_p3;
wire   [29:0] p_Val2_s_37_fu_778_p3;
wire  signed [29:0] grp_fu_802_p0;
wire   [25:0] grp_fu_802_p1;
wire  signed [54:0] grp_fu_802_p2;
wire   [0:0] r_2_fu_872_p2;
wire   [0:0] r_i_i3_fu_877_p2;
wire   [15:0] tmp_9_fu_887_p1;
wire   [0:0] tmp_2_fu_903_p2;
wire   [0:0] carry_fu_909_p2;
wire   [0:0] Range1_all_ones_fu_914_p2;
wire   [0:0] Range1_all_zeros_fu_919_p2;
wire   [0:0] tmp_10_fu_932_p2;
wire   [0:0] p_41_i_fu_937_p2;
wire   [0:0] p_not_i_fu_956_p2;
wire   [0:0] brmerge_i7_fu_961_p2;
wire   [0:0] tmp_11_fu_966_p2;
wire   [0:0] brmerge40_demorgan_i_fu_977_p2;
wire   [0:0] tmp8_demorgan_fu_981_p2;
wire   [0:0] tmp8_fu_986_p2;
wire   [0:0] overflow_3_fu_971_p2;
wire   [0:0] tmp9_fu_1003_p2;
wire   [15:0] p_Val2_118_mux_fu_1014_p3;
wire   [15:0] p_Val2_4_fu_1020_p3;
wire   [15:0] u_out_V_fu_1026_p3;
wire   [12:0] p_Result_s_fu_1053_p4;
wire   [0:0] newsignbit_5_fu_1045_p3;
wire   [0:0] p_not_i6_fu_1063_p2;
wire   [0:0] p_not38_i_fu_1081_p2;
wire   [0:0] newsignbit_0_not_i_fu_1075_p2;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_774;
wire   [0:0] tmp_12_fu_1100_p2;
wire   [0:0] underflow_5_fu_1110_p2;
wire   [0:0] overflow_4_fu_1105_p2;
wire   [0:0] underflow_18_not_fu_1120_p2;
wire   [0:0] brmerge_i_i7_fu_1114_p2;
wire   [29:0] p_Val2_28_fu_1093_p3;
wire   [0:0] brmerge7_fu_1126_p2;
wire   [29:0] p_Val2_120_mux_fu_1132_p3;
wire   [29:0] p_Val2_5_fu_1140_p3;
wire    grp_fu_316_ce;
wire    grp_fu_802_ce;
reg   [23:0] ap_NS_fsm;
wire   [35:0] p_Val2_8_fu_378_p00;
wire   [35:0] p_Val2_s_fu_184_p00;


Compult_mpc_pso grp_Compult_mpc_pso_fu_161(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_Compult_mpc_pso_fu_161_ap_start ),
    .ap_done( grp_Compult_mpc_pso_fu_161_ap_done ),
    .ap_idle( grp_Compult_mpc_pso_fu_161_ap_idle ),
    .ap_ready( grp_Compult_mpc_pso_fu_161_ap_ready ),
    .dx1_in_V( grp_Compult_mpc_pso_fu_161_dx1_in_V ),
    .dx2_in_V( grp_Compult_mpc_pso_fu_161_dx2_in_V ),
    .y_in_V( grp_Compult_mpc_pso_fu_161_y_in_V ),
    .u_in_V( grp_Compult_mpc_pso_fu_161_u_in_V ),
    .ref_in_V( grp_Compult_mpc_pso_fu_161_ref_in_V ),
    .ap_return( grp_Compult_mpc_pso_fu_161_ap_return )
);

Compult_mul_31s_10ns_41_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 41 ))
Compult_mul_31s_10ns_41_3_U59(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_316_p0 ),
    .din1( grp_fu_316_p1 ),
    .ce( grp_fu_316_ce ),
    .dout( grp_fu_316_p2 )
);

Compult_mul_30s_26ns_55_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 55 ))
Compult_mul_30s_26ns_55_6_U60(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_802_p0 ),
    .din1( grp_fu_802_p1 ),
    .ce( grp_fu_802_ce ),
    .dout( grp_fu_802_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_Compult_mpc_pso_fu_161_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_Compult_mpc_pso_fu_161_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_Compult_mpc_pso_fu_161_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
            grp_Compult_mpc_pso_fu_161_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_Compult_mpc_pso_fu_161_ap_ready)) begin
            grp_Compult_mpc_pso_fu_161_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        brmerge39_i_reg_1478 <= brmerge39_i_fu_1087_p2;
        brmerge_i8_reg_1473 <= brmerge_i8_fu_1069_p2;
        isneg_3_reg_1462 <= u_out_V_fu_1026_p3[ap_const_lv32_F];
        tmp_53_reg_1468 <= tmp_53_fu_1041_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        brmerge40_demorgan_i_i_reg_1279 <= brmerge40_demorgan_i_i_fu_441_p2;
        brmerge_i_i2_reg_1274 <= brmerge_i_i2_fu_436_p2;
        p_Val2_9_reg_1244 <= {{p_Val2_8_fu_378_p2[ap_const_lv32_22 : ap_const_lv32_13]}};
        qb_assign_5_reg_1269 <= qb_assign_5_fu_422_p2;
        qbit_1_reg_1249 <= p_Val2_8_fu_378_p2[ap_const_lv32_12];
        tmp_30_reg_1254 <= tmp_30_fu_402_p1;
        tmp_31_reg_1259 <= p_Val2_8_fu_378_p2[ap_const_lv32_22];
        tmp_32_reg_1264 <= p_Val2_8_fu_378_p2[ap_const_lv32_13];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        brmerge_i_i6_reg_1452 <= brmerge_i_i6_fu_997_p2;
        underflow_17_not_reg_1457 <= underflow_17_not_fu_1009_p2;
        underflow_4_reg_1447 <= underflow_4_fu_992_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        deleted_ones_reg_1436 <= deleted_ones_fu_942_p3;
        deleted_zeros_reg_1431 <= deleted_zeros_fu_924_p3;
        newsignbit_4_reg_1425 <= p_Val2_26_fu_890_p2[ap_const_lv32_F];
        p_38_i_reg_1441 <= p_38_i_fu_950_p2;
        p_Val2_26_reg_1419 <= p_Val2_26_fu_890_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        dx1_V_reg_1320[14] <= dx1_V_fu_653_p1[14];
dx1_V_reg_1320[15] <= dx1_V_fu_653_p1[15];
dx1_V_reg_1320[16] <= dx1_V_fu_653_p1[16];
dx1_V_reg_1320[17] <= dx1_V_fu_653_p1[17];
dx1_V_reg_1320[18] <= dx1_V_fu_653_p1[18];
dx1_V_reg_1320[19] <= dx1_V_fu_653_p1[19];
dx1_V_reg_1320[20] <= dx1_V_fu_653_p1[20];
dx1_V_reg_1320[21] <= dx1_V_fu_653_p1[21];
dx1_V_reg_1320[22] <= dx1_V_fu_653_p1[22];
dx1_V_reg_1320[23] <= dx1_V_fu_653_p1[23];
dx1_V_reg_1320[24] <= dx1_V_fu_653_p1[24];
dx1_V_reg_1320[25] <= dx1_V_fu_653_p1[25];
dx1_V_reg_1320[26] <= dx1_V_fu_653_p1[26];
dx1_V_reg_1320[27] <= dx1_V_fu_653_p1[27];
dx1_V_reg_1320[28] <= dx1_V_fu_653_p1[28];
dx1_V_reg_1320[29] <= dx1_V_fu_653_p1[29];
dx1_V_reg_1320[30] <= dx1_V_fu_653_p1[30];
dx1_V_reg_1320[31] <= dx1_V_fu_653_p1[31];
        dx2_V_reg_1325 <= dx2_V_fu_684_p3;
        this_assign_s_reg_1336[12] <= this_assign_s_fu_698_p3[12];
this_assign_s_reg_1336[13] <= this_assign_s_fu_698_p3[13];
this_assign_s_reg_1336[14] <= this_assign_s_fu_698_p3[14];
this_assign_s_reg_1336[15] <= this_assign_s_fu_698_p3[15];
this_assign_s_reg_1336[16] <= this_assign_s_fu_698_p3[16];
this_assign_s_reg_1336[17] <= this_assign_s_fu_698_p3[17];
this_assign_s_reg_1336[18] <= this_assign_s_fu_698_p3[18];
this_assign_s_reg_1336[19] <= this_assign_s_fu_698_p3[19];
this_assign_s_reg_1336[20] <= this_assign_s_fu_698_p3[20];
this_assign_s_reg_1336[21] <= this_assign_s_fu_698_p3[21];
this_assign_s_reg_1336[22] <= this_assign_s_fu_698_p3[22];
this_assign_s_reg_1336[23] <= this_assign_s_fu_698_p3[23];
this_assign_s_reg_1336[24] <= this_assign_s_fu_698_p3[24];
this_assign_s_reg_1336[25] <= this_assign_s_fu_698_p3[25];
this_assign_s_reg_1336[26] <= this_assign_s_fu_698_p3[26];
this_assign_s_reg_1336[27] <= this_assign_s_fu_698_p3[27];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_logic_0 == grp_Compult_mpc_pso_fu_161_ap_done))) begin
        isneg_2_reg_1341 <= p_Val2_22_fu_721_p2[ap_const_lv32_1E];
        newsignbit_3_reg_1354 <= p_Val2_22_fu_721_p2[ap_const_lv32_1D];
        p_Val2_23_reg_1348 <= p_Val2_23_fu_735_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        newsignbit_reg_1222 <= grp_fu_316_p2[ap_const_lv32_21];
        qbit_2_reg_1217 <= grp_fu_316_p2[ap_const_lv32_1];
        signbit_reg_1211 <= grp_fu_316_p2[ap_const_lv32_28];
        tmp_37_reg_1228 <= grp_fu_316_p2[ap_const_lv32_2];
        tmp_38_reg_1238 <= {{grp_fu_316_p2[ap_const_lv32_28 : ap_const_lv32_22]}};
        tmp_s_reg_1233 <= {{grp_fu_316_p2[ap_const_lv32_21 : ap_const_lv32_3]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        overflow_2_reg_1302 <= overflow_2_fu_611_p2;
        p_Val2_18_reg_1296 <= p_Val2_18_fu_571_p1;
        tmp_17_reg_1315 <= tmp_17_fu_646_p3;
        underflow_2_reg_1308 <= underflow_2_fu_635_p2;
        x2_2_V <= p_Val2_15_reg_1290;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_Val2_11_reg_1191[12] <= p_Val2_11_fu_274_p3[12];
p_Val2_11_reg_1191[13] <= p_Val2_11_fu_274_p3[13];
p_Val2_11_reg_1191[14] <= p_Val2_11_fu_274_p3[14];
p_Val2_11_reg_1191[15] <= p_Val2_11_fu_274_p3[15];
p_Val2_11_reg_1191[16] <= p_Val2_11_fu_274_p3[16];
p_Val2_11_reg_1191[17] <= p_Val2_11_fu_274_p3[17];
p_Val2_11_reg_1191[18] <= p_Val2_11_fu_274_p3[18];
p_Val2_11_reg_1191[19] <= p_Val2_11_fu_274_p3[19];
p_Val2_11_reg_1191[20] <= p_Val2_11_fu_274_p3[20];
p_Val2_11_reg_1191[21] <= p_Val2_11_fu_274_p3[21];
p_Val2_11_reg_1191[22] <= p_Val2_11_fu_274_p3[22];
p_Val2_11_reg_1191[23] <= p_Val2_11_fu_274_p3[23];
p_Val2_11_reg_1191[24] <= p_Val2_11_fu_274_p3[24];
p_Val2_11_reg_1191[25] <= p_Val2_11_fu_274_p3[25];
p_Val2_11_reg_1191[26] <= p_Val2_11_fu_274_p3[26];
p_Val2_11_reg_1191[27] <= p_Val2_11_fu_274_p3[27];
        p_Val2_12_reg_1196[12] <= p_Val2_12_fu_293_p2[12];
p_Val2_12_reg_1196[13] <= p_Val2_12_fu_293_p2[13];
p_Val2_12_reg_1196[14] <= p_Val2_12_fu_293_p2[14];
p_Val2_12_reg_1196[15] <= p_Val2_12_fu_293_p2[15];
p_Val2_12_reg_1196[16] <= p_Val2_12_fu_293_p2[16];
p_Val2_12_reg_1196[17] <= p_Val2_12_fu_293_p2[17];
p_Val2_12_reg_1196[18] <= p_Val2_12_fu_293_p2[18];
p_Val2_12_reg_1196[19] <= p_Val2_12_fu_293_p2[19];
p_Val2_12_reg_1196[20] <= p_Val2_12_fu_293_p2[20];
p_Val2_12_reg_1196[21] <= p_Val2_12_fu_293_p2[21];
p_Val2_12_reg_1196[22] <= p_Val2_12_fu_293_p2[22];
p_Val2_12_reg_1196[23] <= p_Val2_12_fu_293_p2[23];
p_Val2_12_reg_1196[24] <= p_Val2_12_fu_293_p2[24];
p_Val2_12_reg_1196[25] <= p_Val2_12_fu_293_p2[25];
p_Val2_12_reg_1196[26] <= p_Val2_12_fu_293_p2[26];
p_Val2_12_reg_1196[27] <= p_Val2_12_fu_293_p2[27];
p_Val2_12_reg_1196[28] <= p_Val2_12_fu_293_p2[28];
        x1_1_V[12] <= p_Val2_11_fu_274_p3[12];
x1_1_V[13] <= p_Val2_11_fu_274_p3[13];
x1_1_V[14] <= p_Val2_11_fu_274_p3[14];
x1_1_V[15] <= p_Val2_11_fu_274_p3[15];
x1_1_V[16] <= p_Val2_11_fu_274_p3[16];
x1_1_V[17] <= p_Val2_11_fu_274_p3[17];
x1_1_V[18] <= p_Val2_11_fu_274_p3[18];
x1_1_V[19] <= p_Val2_11_fu_274_p3[19];
x1_1_V[20] <= p_Val2_11_fu_274_p3[20];
x1_1_V[21] <= p_Val2_11_fu_274_p3[21];
x1_1_V[22] <= p_Val2_11_fu_274_p3[22];
x1_1_V[23] <= p_Val2_11_fu_274_p3[23];
x1_1_V[24] <= p_Val2_11_fu_274_p3[24];
x1_1_V[25] <= p_Val2_11_fu_274_p3[25];
x1_1_V[26] <= p_Val2_11_fu_274_p3[26];
x1_1_V[27] <= p_Val2_11_fu_274_p3[27];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        p_Val2_15_reg_1290 <= p_Val2_15_fu_514_p3;
        qb_assign_3_reg_1285 <= qb_assign_3_fu_456_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        p_Val2_25_reg_1378 <= {{grp_fu_802_p2[ap_const_lv32_34 : ap_const_lv32_25]}};
        qbit_3_reg_1383 <= grp_fu_802_p2[ap_const_lv32_24];
        signbit_1_reg_1371 <= grp_fu_802_p2[ap_const_lv32_36];
        tmp_47_reg_1388 <= tmp_47_fu_834_p1;
        tmp_48_reg_1393 <= grp_fu_802_p2[ap_const_lv32_34];
        tmp_49_reg_1398 <= grp_fu_802_p2[ap_const_lv32_25];
        tmp_51_reg_1403 <= grp_fu_802_p2[ap_const_lv32_35];
        tmp_8_reg_1408 <= {{grp_fu_802_p2[ap_const_lv32_36 : ap_const_lv32_35]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        p_Val2_6_reg_1156 <= {{p_Val2_s_fu_184_p2[ap_const_lv32_22 : ap_const_lv32_13]}};
        qbit_reg_1161 <= p_Val2_s_fu_184_p2[ap_const_lv32_12];
        tmp_25_reg_1166 <= tmp_25_fu_208_p1;
        tmp_26_reg_1171 <= p_Val2_s_fu_184_p2[ap_const_lv32_22];
        tmp_27_reg_1176 <= p_Val2_s_fu_184_p2[ap_const_lv32_13];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        qb_assign_1_reg_1181 <= qb_assign_1_fu_238_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        qb_assign_7_reg_1414 <= qb_assign_7_fu_882_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tmp_15_reg_1186 <= tmp_15_fu_267_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_16_reg_1201[14] <= tmp_16_fu_305_p3[14];
tmp_16_reg_1201[15] <= tmp_16_fu_305_p3[15];
tmp_16_reg_1201[16] <= tmp_16_fu_305_p3[16];
tmp_16_reg_1201[17] <= tmp_16_fu_305_p3[17];
tmp_16_reg_1201[18] <= tmp_16_fu_305_p3[18];
tmp_16_reg_1201[19] <= tmp_16_fu_305_p3[19];
tmp_16_reg_1201[20] <= tmp_16_fu_305_p3[20];
tmp_16_reg_1201[21] <= tmp_16_fu_305_p3[21];
tmp_16_reg_1201[22] <= tmp_16_fu_305_p3[22];
tmp_16_reg_1201[23] <= tmp_16_fu_305_p3[23];
tmp_16_reg_1201[24] <= tmp_16_fu_305_p3[24];
tmp_16_reg_1201[25] <= tmp_16_fu_305_p3[25];
tmp_16_reg_1201[26] <= tmp_16_fu_305_p3[26];
tmp_16_reg_1201[27] <= tmp_16_fu_305_p3[27];
tmp_16_reg_1201[28] <= tmp_16_fu_305_p3[28];
tmp_16_reg_1201[29] <= tmp_16_fu_305_p3[29];
tmp_16_reg_1201[30] <= tmp_16_fu_305_p3[30];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_7_reg_1361 <= tmp_7_fu_785_p3;
        u_V <= tmp_7_fu_785_p3;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_168)
begin
    if (ap_sig_bdd_168) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_183)
begin
    if (ap_sig_bdd_183) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_198)
begin
    if (ap_sig_bdd_198) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_215)
begin
    if (ap_sig_bdd_215) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_224)
begin
    if (ap_sig_bdd_224) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_233)
begin
    if (ap_sig_bdd_233) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_40)
begin
    if (ap_sig_bdd_40) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_256)
begin
    if (ap_sig_bdd_256) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_282)
begin
    if (ap_sig_bdd_282) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_295)
begin
    if (ap_sig_bdd_295) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_774)
begin
    if (ap_sig_bdd_774) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_75)
begin
    if (ap_sig_bdd_75) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_84)
begin
    if (ap_sig_bdd_84) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_93)
begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_104)
begin
    if (ap_sig_bdd_104) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_115)
begin
    if (ap_sig_bdd_115) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_134)
begin
    if (ap_sig_bdd_134) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_157)
begin
    if (ap_sig_bdd_157) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or grp_Compult_mpc_pso_fu_161_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            if (~(ap_const_logic_0 == grp_Compult_mpc_pso_fu_161_ap_done)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_3_fu_426_p2 = (tmp_38_reg_1238 == ap_const_lv7_7F? 1'b1: 1'b0);
assign Range1_all_ones_fu_914_p2 = (tmp_8_reg_1408 == ap_const_lv2_3? 1'b1: 1'b0);
assign Range1_all_zeros_fu_919_p2 = (tmp_8_reg_1408 == ap_const_lv2_0? 1'b1: 1'b0);
assign ap_return = ((brmerge7_fu_1126_p2)? p_Val2_120_mux_fu_1132_p3: p_Val2_5_fu_1140_p3);

/// ap_sig_bdd_104 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_104 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_115 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_115 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_134 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_134 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_157 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_157 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_168 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_168 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_183 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_183 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_198 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_198 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_215 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_215 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_224 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_224 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_233 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_233 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_256 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_256 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_282 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_282 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_295 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_295 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_40 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_40 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_75 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_75 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_774 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_774 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_84 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_84 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_93 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_93 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign brmerge2_i_fu_666_p2 = (overflow_2_reg_1302 | underflow_16_not_i_fu_661_p2);
assign brmerge39_i_fu_1087_p2 = (p_not38_i_fu_1081_p2 | newsignbit_0_not_i_fu_1075_p2);
assign brmerge39_i_i_fu_629_p2 = (p_not38_i_i_fu_623_p2 | newsignbit_0_not_i_i_fu_617_p2);
assign brmerge40_demorgan_i_fu_977_p2 = (newsignbit_4_reg_1425 & deleted_ones_reg_1436);
assign brmerge40_demorgan_i_i_fu_441_p2 = (newsignbit_reg_1222 & Range1_all_ones_3_fu_426_p2);
assign brmerge7_fu_1126_p2 = (overflow_4_fu_1105_p2 | underflow_18_not_fu_1120_p2);
assign brmerge_fu_766_p2 = (newsignbit_3_reg_1354 | isneg_not_fu_761_p2);
assign brmerge_i6_i_fu_599_p2 = (newsignbit_2_fu_575_p3 | p_not_i5_i_fu_593_p2);
assign brmerge_i7_fu_961_p2 = (newsignbit_4_reg_1425 | p_not_i_fu_956_p2);
assign brmerge_i8_fu_1069_p2 = (newsignbit_5_fu_1045_p3 | p_not_i6_fu_1063_p2);
assign brmerge_i_i2_fu_436_p2 = (newsignbit_reg_1222 | p_not_i_i_fu_431_p2);
assign brmerge_i_i5_i_fu_657_p2 = (underflow_2_reg_1308 | overflow_2_reg_1302);
assign brmerge_i_i6_fu_997_p2 = (underflow_4_fu_992_p2 | overflow_3_fu_971_p2);
assign brmerge_i_i7_fu_1114_p2 = (underflow_5_fu_1110_p2 | overflow_4_fu_1105_p2);
assign brmerge_i_i_fu_757_p2 = (isneg_2_reg_1341 ^ newsignbit_3_reg_1354);
assign brmerge_i_i_i3_fu_487_p2 = (underflow_fu_482_p2 | overflow_fu_472_p2);
assign carry_fu_909_p2 = (tmp_48_reg_1393 & tmp_2_fu_903_p2);
assign deleted_ones_fu_942_p3 = ((carry_fu_909_p2)? p_41_i_fu_937_p2: Range1_all_ones_fu_914_p2);
assign deleted_zeros_fu_924_p3 = ((carry_fu_909_p2)? Range1_all_ones_fu_914_p2: Range1_all_zeros_fu_919_p2);
assign dx1_V_fu_653_p1 = $signed(tmp_16_reg_1201);
assign dx2_V_fu_684_p3 = ((brmerge2_i_fu_666_p2)? p_Val2_101_mux_i_fu_671_p3: p_Val2_3_i_fu_678_p3);
assign grp_Compult_mpc_pso_fu_161_ap_start = grp_Compult_mpc_pso_fu_161_ap_start_ap_start_reg;
assign grp_Compult_mpc_pso_fu_161_dx1_in_V = dx1_V_reg_1320;
assign grp_Compult_mpc_pso_fu_161_dx2_in_V = dx2_V_reg_1325;
assign grp_Compult_mpc_pso_fu_161_ref_in_V = this_assign_s_reg_1336;
assign grp_Compult_mpc_pso_fu_161_u_in_V = u_V;
assign grp_Compult_mpc_pso_fu_161_y_in_V = p_Val2_11_reg_1191;
assign grp_fu_316_ce = ap_const_logic_1;
assign grp_fu_316_p0 = tmp_16_fu_305_p3;
assign grp_fu_316_p1 = ap_const_lv41_1F4;
assign grp_fu_802_ce = ap_const_logic_1;
assign grp_fu_802_p0 = tmp_7_reg_1361;
assign grp_fu_802_p1 = ap_const_lv55_1D4C000;
assign isneg_fu_563_p3 = p_Val2_17_fu_557_p2[ap_const_lv32_20];
assign isneg_not_fu_761_p2 = (isneg_2_reg_1341 ^ ap_const_lv1_1);
assign newsignbit_0_not_i_fu_1075_p2 = (newsignbit_5_fu_1045_p3 ^ ap_const_lv1_1);
assign newsignbit_0_not_i_i_fu_617_p2 = (newsignbit_2_fu_575_p3 ^ ap_const_lv1_1);
assign newsignbit_2_fu_575_p3 = p_Val2_17_fu_557_p2[ap_const_lv32_1D];
assign newsignbit_4_fu_895_p3 = p_Val2_26_fu_890_p2[ap_const_lv32_F];
assign newsignbit_5_fu_1045_p3 = u_out_V_fu_1026_p3[ap_const_lv32_2];
assign overflow_2_fu_611_p2 = (brmerge_i6_i_fu_599_p2 & tmp_37_i6_fu_605_p2);
assign overflow_3_fu_971_p2 = (brmerge_i7_fu_961_p2 & tmp_11_fu_966_p2);
assign overflow_4_fu_1105_p2 = (brmerge_i8_reg_1473 & tmp_12_fu_1100_p2);
assign overflow_fu_472_p2 = (brmerge_i_i2_reg_1274 & tmp_34_i_fu_467_p2);
assign p_38_i_fu_950_p2 = (carry_fu_909_p2 & Range1_all_ones_fu_914_p2);
assign p_41_i_fu_937_p2 = (signbit_1_reg_1371 & tmp_10_fu_932_p2);
assign p_Result_21_i_fu_583_p4 = {{p_Val2_17_fu_557_p2[ap_const_lv32_20 : ap_const_lv32_1E]}};
assign p_Result_s_fu_1053_p4 = {{u_out_V_fu_1026_p3[ap_const_lv32_F : ap_const_lv32_3]}};
assign p_Val2_101_mux_i_fu_671_p3 = ((brmerge_i_i5_i_fu_657_p2)? ap_const_lv30_1FFFFFFF: p_Val2_18_reg_1296);
assign p_Val2_10_fu_525_p2 = (p_Val2_9_reg_1244 + tmp_3_fu_522_p1);
assign p_Val2_115_mux_fu_771_p3 = ((brmerge_i_i_fu_757_p2)? ap_const_lv30_1FFFFFFF: p_Val2_23_reg_1348);
assign p_Val2_118_mux_fu_1014_p3 = ((brmerge_i_i6_reg_1452)? ap_const_lv16_7FFF: p_Val2_26_reg_1419);
assign p_Val2_11_fu_274_p3 = {{tmp_15_reg_1186}, {ap_const_lv12_0}};
assign p_Val2_120_mux_fu_1132_p3 = ((brmerge_i_i7_fu_1114_p2)? ap_const_lv30_1FFFFFFF: p_Val2_28_fu_1093_p3);
assign p_Val2_12_fu_293_p2 = (tmp_i_cast_fu_281_p1 - tmp_i_cast_36_fu_289_p1);
assign p_Val2_14_fu_461_p3 = {{tmp_s_reg_1233}, {qb_assign_5_reg_1269}};
assign p_Val2_15_fu_514_p3 = ((tmp7_fu_493_p2)? p_Val2_97_mux_i_fu_498_p3: p_Val2_i4_fu_506_p3);
assign p_Val2_17_fu_557_p2 = ($signed(tmp_35_i_fu_546_p1) - $signed(tmp_36_i5_fu_553_p1));
assign p_Val2_18_fu_571_p1 = p_Val2_17_fu_557_p2[29:0];
assign p_Val2_21_fu_706_p3 = {{grp_Compult_mpc_pso_fu_161_ap_return}, {ap_const_lv2_0}};
assign p_Val2_22_fu_721_p2 = ($signed(tmp_4_fu_714_p1) + $signed(tmp_5_fu_717_p1));
assign p_Val2_23_fu_735_p1 = p_Val2_22_fu_721_p2[29:0];
assign p_Val2_26_fu_890_p2 = (p_Val2_25_reg_1378 + tmp_9_fu_887_p1);
assign p_Val2_28_fu_1093_p3 = {{tmp_53_reg_1468}, {ap_const_lv27_0}};
assign p_Val2_3_i_fu_678_p3 = ((underflow_2_reg_1308)? ap_const_lv30_20000000: p_Val2_18_reg_1296);
assign p_Val2_4_fu_1020_p3 = ((underflow_4_reg_1447)? ap_const_lv16_8000: p_Val2_26_reg_1419);
assign p_Val2_5_fu_1140_p3 = ((underflow_5_fu_1110_p2)? ap_const_lv30_20000000: p_Val2_28_fu_1093_p3);
assign p_Val2_7_fu_246_p2 = (p_Val2_6_reg_1156 + tmp_1_fu_243_p1);
assign p_Val2_8_fu_378_p0 = p_Val2_8_fu_378_p00;
assign p_Val2_8_fu_378_p00 = ref_in_V;
assign p_Val2_8_fu_378_p2 = (p_Val2_8_fu_378_p0 * $signed('h73333));
assign p_Val2_97_mux_i_fu_498_p3 = ((brmerge_i_i_i3_fu_487_p2)? ap_const_lv32_7FFFFFFF: p_Val2_14_fu_461_p3);
assign p_Val2_i4_fu_506_p3 = ((underflow_fu_482_p2)? ap_const_lv32_80000000: p_Val2_14_fu_461_p3);
assign p_Val2_s_37_fu_778_p3 = ((underflow_3_fu_752_p2)? ap_const_lv30_20000000: p_Val2_23_reg_1348);
assign p_Val2_s_fu_184_p0 = p_Val2_s_fu_184_p00;
assign p_Val2_s_fu_184_p00 = y_in_V;
assign p_Val2_s_fu_184_p2 = (p_Val2_s_fu_184_p0 * $signed('h73333));
assign p_not38_i_fu_1081_p2 = (p_Result_s_fu_1053_p4 != ap_const_lv13_1FFF? 1'b1: 1'b0);
assign p_not38_i_i_fu_623_p2 = (p_Result_21_i_fu_583_p4 != ap_const_lv3_7? 1'b1: 1'b0);
assign p_not_i5_i_fu_593_p2 = (p_Result_21_i_fu_583_p4 != ap_const_lv3_0? 1'b1: 1'b0);
assign p_not_i6_fu_1063_p2 = (p_Result_s_fu_1053_p4 != ap_const_lv13_0? 1'b1: 1'b0);
assign p_not_i_fu_956_p2 = (deleted_zeros_reg_1431 ^ ap_const_lv1_1);
assign p_not_i_i_fu_431_p2 = (tmp_38_reg_1238 != ap_const_lv7_0? 1'b1: 1'b0);
assign phitmp8_fu_538_p3 = ((tmp_33_fu_530_p3)? p_Val2_10_fu_525_p2: ap_const_lv16_FFFF);
assign phitmp_fu_259_p3 = ((tmp_28_fu_251_p3)? p_Val2_7_fu_246_p2: ap_const_lv16_FFFF);
assign qb_assign_1_fu_238_p2 = (r_i_i_fu_233_p2 & qbit_reg_1161);
assign qb_assign_3_fu_456_p2 = (r_i_i2_fu_451_p2 & qbit_1_reg_1249);
assign qb_assign_5_fu_422_p2 = (tmp_37_reg_1228 & qbit_2_reg_1217);
assign qb_assign_7_fu_882_p2 = (r_i_i3_fu_877_p2 & qbit_3_reg_1383);
assign r_1_fu_446_p2 = (tmp_30_reg_1254 != ap_const_lv18_0? 1'b1: 1'b0);
assign r_2_fu_872_p2 = (tmp_47_reg_1388 != ap_const_lv36_0? 1'b1: 1'b0);
assign r_fu_228_p2 = (tmp_25_reg_1166 != ap_const_lv18_0? 1'b1: 1'b0);
assign r_i_i2_fu_451_p2 = (tmp_32_reg_1264 | r_1_fu_446_p2);
assign r_i_i3_fu_877_p2 = (tmp_49_reg_1398 | r_2_fu_872_p2);
assign r_i_i_fu_233_p2 = (tmp_27_reg_1176 | r_fu_228_p2);
assign this_assign_s_fu_698_p3 = {{tmp_17_reg_1315}, {ap_const_lv12_0}};
assign tmp7_fu_493_p2 = (brmerge40_demorgan_i_i_reg_1279 | tmp_34_i_fu_467_p2);
assign tmp8_demorgan_fu_981_p2 = (p_38_i_reg_1441 | brmerge40_demorgan_i_fu_977_p2);
assign tmp8_fu_986_p2 = (tmp8_demorgan_fu_981_p2 ^ ap_const_lv1_1);
assign tmp9_fu_1003_p2 = (brmerge40_demorgan_i_fu_977_p2 | tmp_11_fu_966_p2);
assign tmp_10_fu_932_p2 = (tmp_51_reg_1403 ^ ap_const_lv1_1);
assign tmp_11_fu_966_p2 = (signbit_1_reg_1371 ^ ap_const_lv1_1);
assign tmp_12_fu_1100_p2 = (isneg_3_reg_1462 ^ ap_const_lv1_1);
assign tmp_15_fu_267_p3 = ((tmp_26_reg_1171)? phitmp_fu_259_p3: p_Val2_7_fu_246_p2);
assign tmp_16_fu_305_p3 = {{p_Val2_12_reg_1196}, {ap_const_lv2_0}};
assign tmp_17_fu_646_p3 = ((tmp_31_reg_1259)? phitmp8_fu_538_p3: p_Val2_10_fu_525_p2);
assign tmp_1_fu_243_p1 = qb_assign_1_reg_1181;
assign tmp_25_fu_208_p1 = p_Val2_s_fu_184_p2[17:0];
assign tmp_28_fu_251_p3 = p_Val2_7_fu_246_p2[ap_const_lv32_F];
assign tmp_2_fu_903_p2 = (newsignbit_4_fu_895_p3 ^ ap_const_lv1_1);
assign tmp_30_fu_402_p1 = p_Val2_8_fu_378_p2[17:0];
assign tmp_33_fu_530_p3 = p_Val2_10_fu_525_p2[ap_const_lv32_F];
assign tmp_34_i_fu_467_p2 = (signbit_reg_1211 ^ ap_const_lv1_1);
assign tmp_35_i_fu_546_p1 = $signed(p_Val2_15_reg_1290);
assign tmp_36_i5_fu_553_p1 = $signed(x2_2_V);
assign tmp_37_i6_fu_605_p2 = (isneg_fu_563_p3 ^ ap_const_lv1_1);
assign tmp_3_fu_522_p1 = qb_assign_3_reg_1285;
assign tmp_47_fu_834_p1 = grp_fu_802_p2[35:0];
assign tmp_4_fu_714_p1 = $signed(u_V);
assign tmp_53_fu_1041_p1 = u_out_V_fu_1026_p3[2:0];
assign tmp_5_fu_717_p1 = $signed(p_Val2_21_fu_706_p3);
assign tmp_6_fu_747_p2 = (newsignbit_3_reg_1354 ^ ap_const_lv1_1);
assign tmp_7_fu_785_p3 = ((brmerge_fu_766_p2)? p_Val2_115_mux_fu_771_p3: p_Val2_s_37_fu_778_p3);
assign tmp_9_fu_887_p1 = qb_assign_7_reg_1414;
assign tmp_fu_477_p2 = (brmerge40_demorgan_i_i_reg_1279 ^ ap_const_lv1_1);
assign tmp_i_cast_36_fu_289_p1 = x1_1_V;
assign tmp_i_cast_fu_281_p1 = p_Val2_11_fu_274_p3;
assign u_out_V_fu_1026_p3 = ((underflow_17_not_reg_1457)? p_Val2_118_mux_fu_1014_p3: p_Val2_4_fu_1020_p3);
assign underflow_16_not_i_fu_661_p2 = (underflow_2_reg_1308 ^ ap_const_lv1_1);
assign underflow_17_not_fu_1009_p2 = (tmp9_fu_1003_p2 | p_38_i_reg_1441);
assign underflow_18_not_fu_1120_p2 = (underflow_5_fu_1110_p2 ^ ap_const_lv1_1);
assign underflow_2_fu_635_p2 = (brmerge39_i_i_fu_629_p2 & isneg_fu_563_p3);
assign underflow_3_fu_752_p2 = (isneg_2_reg_1341 & tmp_6_fu_747_p2);
assign underflow_4_fu_992_p2 = (signbit_1_reg_1371 & tmp8_fu_986_p2);
assign underflow_5_fu_1110_p2 = (brmerge39_i_reg_1478 & isneg_3_reg_1462);
assign underflow_fu_482_p2 = (signbit_reg_1211 & tmp_fu_477_p2);
always @ (posedge ap_clk)
begin
    x1_1_V[11:0] <= 12'b000000000000;
    p_Val2_11_reg_1191[11:0] <= 12'b000000000000;
    p_Val2_12_reg_1196[11:0] <= 12'b000000000000;
    tmp_16_reg_1201[13:0] <= 14'b00000000000000;
    dx1_V_reg_1320[13:0] <= 14'b00000000000000;
    this_assign_s_reg_1336[11:0] <= 12'b000000000000;
end



endmodule //Compult

