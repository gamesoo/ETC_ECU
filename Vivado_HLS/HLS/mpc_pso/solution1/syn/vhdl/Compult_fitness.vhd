-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Compult_fitness is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_0_V_read : IN STD_LOGIC_VECTOR (28 downto 0);
    x_1_V_read : IN STD_LOGIC_VECTOR (28 downto 0);
    G_0_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
    G_1_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
    b_0_V_read : IN STD_LOGIC_VECTOR (30 downto 0);
    b_1_V_read : IN STD_LOGIC_VECTOR (30 downto 0);
    b_2_V_read : IN STD_LOGIC_VECTOR (30 downto 0);
    b_3_V_read : IN STD_LOGIC_VECTOR (30 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Compult_fitness is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (58 downto 0) := "00000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (58 downto 0) := "00000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (58 downto 0) := "00000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (58 downto 0) := "00000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (58 downto 0) := "00000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (58 downto 0) := "00000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_st55_fsm_54 : STD_LOGIC_VECTOR (58 downto 0) := "00001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st56_fsm_55 : STD_LOGIC_VECTOR (58 downto 0) := "00010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st57_fsm_56 : STD_LOGIC_VECTOR (58 downto 0) := "00100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st58_fsm_57 : STD_LOGIC_VECTOR (58 downto 0) := "01000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_st59_fsm_58 : STD_LOGIC_VECTOR (58 downto 0) := "10000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv29_FFFFFFF : STD_LOGIC_VECTOR (28 downto 0) := "01111111111111111111111111111";
    constant ap_const_lv29_10000000 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv23_3FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "01111111111111111111111";
    constant ap_const_lv23_400000 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv27_3FFFFFF : STD_LOGIC_VECTOR (26 downto 0) := "011111111111111111111111111";
    constant ap_const_lv27_4000000 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv75_349F7 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000110100100111110111";
    constant ap_const_lv75_39E5B : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000111001111001011011";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv75_385DE : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000111000010111011110";
    constant ap_const_lv44_4E20 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000100111000100000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv31_3FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "0111111111111111111111111111111";
    constant ap_const_lv31_40000000 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_77 : BOOLEAN;
    signal tmp_126_reg_3766 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_reg_3773 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_reg_3780 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_reg_3787 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_466_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_105_reg_3794 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_113 : BOOLEAN;
    signal overflow_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_reg_3799 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow9_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow9_reg_3805 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_553_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_115_reg_3812 : STD_LOGIC_VECTOR (27 downto 0);
    signal overflow_1_1_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_1_reg_3817 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_1_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_1_reg_3823 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_3830 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_3835 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_reg_3840 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_136 : BOOLEAN;
    signal p_Val2_s_reg_3847 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_109_reg_3852 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_737_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_110_reg_3857 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_111_reg_3862 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_reg_3867 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_reg_3872 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_3877 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_118_reg_3883 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_1_reg_3890 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_119_reg_3895 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_fu_855_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_120_reg_3900 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_121_reg_3905 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_reg_3910 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_reg_3915 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_3920 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_128_reg_3926 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_2_reg_3933 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_129_reg_3938 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_976_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_130_reg_3943 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_131_reg_3948 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_reg_3953 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_reg_3958 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_3963 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_138_reg_3969 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_3_reg_3976 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_139_reg_3981 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_fu_1097_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_140_reg_3986 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_141_reg_3991 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_reg_3996 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_144_reg_4001 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_4006 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_2_fu_1154_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_2_reg_4012 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_207 : BOOLEAN;
    signal tmp_113_reg_4018 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_1_fu_1186_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_13_1_reg_4025 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_123_reg_4031 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_2_fu_1218_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_13_2_reg_4038 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_133_reg_4044 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_3_fu_1250_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_13_3_reg_4051 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_143_reg_4057 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_reg_4064 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_230 : BOOLEAN;
    signal brmerge_i1_fu_1321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i1_reg_4069 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_reg_4074 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_demorgan_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_demorgan_reg_4079 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_1_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_1_reg_4084 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i1_1_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i1_1_reg_4089 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_1_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_1_reg_4094 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp184_demorgan_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp184_demorgan_reg_4099 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_2_fu_1457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_2_reg_4104 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i1_2_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i1_2_reg_4109 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_2_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_2_reg_4114 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp186_demorgan_fu_1479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp186_demorgan_reg_4119 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_3_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_3_reg_4124 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i1_3_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i1_3_reg_4129 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_3_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_3_reg_4134 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp188_demorgan_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp188_demorgan_reg_4139 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_269 : BOOLEAN;
    signal aa_0_V_fu_1609_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal aa_0_V_reg_4154 : STD_LOGIC_VECTOR (22 downto 0);
    signal aa_1_V_fu_1667_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal aa_1_V_reg_4159 : STD_LOGIC_VECTOR (22 downto 0);
    signal aa_2_V_fu_1725_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal aa_2_V_reg_4164 : STD_LOGIC_VECTOR (22 downto 0);
    signal aa_3_V_fu_1783_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal aa_3_V_reg_4169 : STD_LOGIC_VECTOR (22 downto 0);
    signal k_1_fu_1797_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_reg_4177 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_288 : BOOLEAN;
    signal tmp_145_fu_1803_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_145_reg_4182 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond2_fu_1791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_4189 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_4196 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1825_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sel_tmp3_reg_4203 : STD_LOGIC_VECTOR (22 downto 0);
    signal sel_tmp4_fu_1832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_4208 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_4216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_311 : BOOLEAN;
    signal min_0_V_fu_1923_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_0_V_reg_4223 : STD_LOGIC_VECTOR (26 downto 0);
    signal sel_tmp9_fu_1931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_4231 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_4237 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_1969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_reg_4243 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_328 : BOOLEAN;
    signal min_3_V_4_fu_2025_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_4_reg_4268 : STD_LOGIC_VECTOR (26 downto 0);
    signal sel_tmp14_fu_2033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_reg_4273 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_3_V_19_fu_2066_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_19_reg_4281 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_25_fu_2096_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_25_reg_4286 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_30_fu_2175_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_30_reg_4291 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_349 : BOOLEAN;
    signal OP1_V_fu_2202_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_358 : BOOLEAN;
    signal grp_fu_2205_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Val2_19_reg_4302 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_367 : BOOLEAN;
    signal qbit_reg_4307 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_151_fu_2219_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_151_reg_4312 : STD_LOGIC_VECTOR (21 downto 0);
    signal signbit_reg_4317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_380 : BOOLEAN;
    signal p_Val2_27_reg_4323 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_152_reg_4328 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_9_fu_2289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_9_reg_4333 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_fu_2328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_reg_4338 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_2334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_4345 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_fu_2346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_reg_4350 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_28_fu_2355_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_28_reg_4355 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_401 : BOOLEAN;
    signal newsignbit_10_fu_2360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_10_reg_4361 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_2379_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_reg_4367 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_4_fu_2385_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_4_reg_4372 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_fu_2391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_reg_4377 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_9_fu_2411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_9_reg_4383 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_418 : BOOLEAN;
    signal underflow_10_fu_2432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_10_reg_4388 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_not_fu_2443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_not_reg_4394 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_fu_2465_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_431 : BOOLEAN;
    signal j_2_fu_2478_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_2_reg_4407 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_bdd_440 : BOOLEAN;
    signal tmp_69_fu_2488_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_69_reg_4412 : STD_LOGIC_VECTOR (28 downto 0);
    signal exitcond5_fu_2472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OP2_V_4_cast_cast_fu_2494_p3 : STD_LOGIC_VECTOR (74 downto 0);
    signal OP2_V_4_cast_cast_reg_4417 : STD_LOGIC_VECTOR (74 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_bdd_456 : BOOLEAN;
    signal grp_fu_2513_p2 : STD_LOGIC_VECTOR (74 downto 0);
    signal p_Val2_10_reg_4427 : STD_LOGIC_VECTOR (74 downto 0);
    signal ap_sig_cseq_ST_st27_fsm_26 : STD_LOGIC;
    signal ap_sig_bdd_465 : BOOLEAN;
    signal tmp_158_reg_4432 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_fu_2526_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_159_reg_4437 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_157_reg_4442 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st28_fsm_27 : STD_LOGIC;
    signal ap_sig_bdd_478 : BOOLEAN;
    signal p_Val2_24_reg_4450 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_reg_4455 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_7_fu_2596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_7_reg_4461 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_25_fu_2604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_25_reg_4466 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st29_fsm_28 : STD_LOGIC;
    signal ap_sig_bdd_493 : BOOLEAN;
    signal tmp_162_fu_2609_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_162_reg_4472 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_2617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_4479 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_fu_2659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_reg_4484 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st30_fsm_29 : STD_LOGIC;
    signal ap_sig_bdd_506 : BOOLEAN;
    signal underflow_6_fu_2676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_reg_4489 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_not_fu_2687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_not_reg_4495 : STD_LOGIC_VECTOR (0 downto 0);
    signal xH_0_V_fu_2710_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st31_fsm_30 : STD_LOGIC;
    signal ap_sig_bdd_519 : BOOLEAN;
    signal j_2_1_fu_2723_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_2_1_reg_4508 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st32_fsm_31 : STD_LOGIC;
    signal ap_sig_bdd_528 : BOOLEAN;
    signal tmp_79_fu_2733_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_79_reg_4513 : STD_LOGIC_VECTOR (28 downto 0);
    signal exitcond5_1_fu_2717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OP2_V_4_1_cast_cast_fu_2739_p3 : STD_LOGIC_VECTOR (74 downto 0);
    signal OP2_V_4_1_cast_cast_reg_4518 : STD_LOGIC_VECTOR (74 downto 0);
    signal ap_sig_cseq_ST_st33_fsm_32 : STD_LOGIC;
    signal ap_sig_bdd_544 : BOOLEAN;
    signal grp_fu_2758_p2 : STD_LOGIC_VECTOR (74 downto 0);
    signal p_Val2_24_1_reg_4528 : STD_LOGIC_VECTOR (74 downto 0);
    signal ap_sig_cseq_ST_st38_fsm_37 : STD_LOGIC;
    signal ap_sig_bdd_553 : BOOLEAN;
    signal tmp_165_reg_4533 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_166_fu_2771_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_166_reg_4538 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_164_reg_4543 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st39_fsm_38 : STD_LOGIC;
    signal ap_sig_bdd_566 : BOOLEAN;
    signal p_Val2_26_1_reg_4551 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_167_reg_4556 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_7_1_fu_2841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_7_1_reg_4562 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_32_1_fu_2849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_32_1_reg_4567 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st40_fsm_39 : STD_LOGIC;
    signal ap_sig_bdd_581 : BOOLEAN;
    signal tmp_169_fu_2854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_169_reg_4573 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_1_fu_2862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_1_reg_4580 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_1_fu_2904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_1_reg_4585 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st41_fsm_40 : STD_LOGIC;
    signal ap_sig_bdd_594 : BOOLEAN;
    signal underflow_6_1_fu_2921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_1_reg_4590 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_not_1_fu_2932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_not_1_reg_4596 : STD_LOGIC_VECTOR (0 downto 0);
    signal xH_1_V_fu_2955_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st42_fsm_41 : STD_LOGIC;
    signal ap_sig_bdd_607 : BOOLEAN;
    signal i_5_fu_2968_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_5_reg_4609 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st43_fsm_42 : STD_LOGIC;
    signal ap_sig_bdd_616 : BOOLEAN;
    signal xH_V_load_phi_fu_2978_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xH_V_load_phi_reg_4614 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_2962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_1_V_read_assign_2_fu_2986_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal x_1_V_read_assign_2_reg_4619 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_1_fu_3002_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_1_reg_4625 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_sig_cseq_ST_st44_fsm_43 : STD_LOGIC;
    signal ap_sig_bdd_638 : BOOLEAN;
    signal grp_fu_3024_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal p_Val2_7_reg_4655 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_sig_cseq_ST_st49_fsm_48 : STD_LOGIC;
    signal ap_sig_bdd_653 : BOOLEAN;
    signal qbit_9_reg_4660 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_179_fu_3050_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_179_reg_4665 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_3036_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_20_reg_4670 : STD_LOGIC_VECTOR (55 downto 0);
    signal qbit_10_reg_4675 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_186_fu_3062_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_186_reg_4680 : STD_LOGIC_VECTOR (23 downto 0);
    signal signbit_5_reg_4685 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st50_fsm_49 : STD_LOGIC;
    signal ap_sig_bdd_672 : BOOLEAN;
    signal p_Val2_17_reg_4691 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_180_reg_4696 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_5_fu_3128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_5_reg_4701 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_3167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_reg_4706 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_3173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_reg_4713 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i1_fu_3185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i1_reg_4718 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_6_reg_4723 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_22_reg_4732 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_187_reg_4737 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_s_fu_3257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_s_reg_4743 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_18_fu_3265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_18_reg_4748 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st51_fsm_50 : STD_LOGIC;
    signal ap_sig_bdd_701 : BOOLEAN;
    signal newsignbit_11_fu_3270_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_11_reg_4754 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_3289_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_reg_4760 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_2_fu_3295_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_2_reg_4765 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i1_fu_3301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i1_reg_4770 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_23_fu_3309_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_23_reg_4776 : STD_LOGIC_VECTOR (30 downto 0);
    signal newsignbit_12_fu_3314_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_12_reg_4782 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i2_fu_3349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i2_reg_4788 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i5_fu_3354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i5_reg_4794 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_i3_fu_3360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_i3_reg_4799 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_11_fu_3380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_11_reg_4804 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st52_fsm_51 : STD_LOGIC;
    signal ap_sig_bdd_728 : BOOLEAN;
    signal underflow_12_fu_3401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_12_reg_4809 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_not_fu_3412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_not_reg_4815 : STD_LOGIC_VECTOR (0 downto 0);
    signal Gx_V_fu_3471_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal Gx_V_reg_4820 : STD_LOGIC_VECTOR (30 downto 0);
    signal xHx_V_fu_3496_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st53_fsm_52 : STD_LOGIC;
    signal ap_sig_bdd_743 : BOOLEAN;
    signal grp_fu_3012_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_6_reg_4830 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_sig_cseq_ST_st55_fsm_54 : STD_LOGIC;
    signal ap_sig_bdd_752 : BOOLEAN;
    signal signbit_7_reg_4835 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st56_fsm_55 : STD_LOGIC;
    signal ap_sig_bdd_761 : BOOLEAN;
    signal p_Val2_14_reg_4844 : STD_LOGIC_VECTOR (31 downto 0);
    signal qbit_11_reg_4849 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_172_fu_3568_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_172_reg_4854 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_173_reg_4859 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_174_reg_4865 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_fu_3598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_reg_4870 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st57_fsm_56 : STD_LOGIC;
    signal ap_sig_bdd_780 : BOOLEAN;
    signal p_Val2_15_fu_3606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_15_reg_4875 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st58_fsm_57 : STD_LOGIC;
    signal ap_sig_bdd_789 : BOOLEAN;
    signal newsignbit_13_fu_3611_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_13_reg_4881 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i1_fu_3646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i1_reg_4887 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i1_fu_3651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i1_reg_4893 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i1_fu_3657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i1_reg_4898 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_73_reg_320 : STD_LOGIC_VECTOR (28 downto 0);
    signal k_reg_332 : STD_LOGIC_VECTOR (2 downto 0);
    signal xH_V_reg_343 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_reg_355 : STD_LOGIC_VECTOR (1 downto 0);
    signal xH_V_1_reg_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_1_reg_378 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_5_reg_389 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_8_reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_413 : STD_LOGIC_VECTOR (1 downto 0);
    signal min_V_fu_256 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_V_0_3_fu_2154_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_14_fu_260 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_27_fu_2140_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_15_fu_264 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_21_fu_2128_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_16_fu_268 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_6_fu_2116_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal OP2_V_cast_fu_457_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_1_fu_460_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_47_fu_486_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_107_fu_478_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_fu_470_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not38_i_i_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_0_not_i_i_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_i_i_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OP2_V_124_1_cast_fu_544_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_1_1_1_fu_547_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_53_fu_573_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_117_fu_565_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_1_1_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_557_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_1_1_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_1_1_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not38_i_i_1_1_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_0_not_i_i_1_1_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_i_i_1_1_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_657_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal brmerge_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_mux_fu_678_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_3_fu_686_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal this_assign_1_fu_693_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_26_cast_fu_701_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_V_read_cast_fu_653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_fu_705_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal underflow_not_1_1_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_1_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_1_1_fu_775_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal brmerge_1_1_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_mux_1_1_fu_796_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_3_1_1_fu_804_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal this_assign_1_1_1_fu_811_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_26_1_cast_fu_819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_V_read_cast_fu_649_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_1_fu_823_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_25_2_0_not_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_fu_893_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal underflow_2_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_2_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_mux_2_fu_916_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_3_2_fu_924_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal this_assign_1_2_fu_932_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_26_2_cast_fu_940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_V_read_cast_fu_645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_2_fu_944_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_3_1_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_1_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_fu_1014_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal underflow_350_1_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_3_1_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_mux_3_1_fu_1037_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_3_3_1_fu_1045_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal this_assign_1_3_1_fu_1053_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_26_3_cast_fu_1061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_V_read_cast_fu_641_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_3_fu_1065_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_1_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1150_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_s_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_1_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_1_1_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_1_fu_1182_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_2_fu_1199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_2_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_1_2_fu_1209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_2_fu_1214_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_6_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_3_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_1_3_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_3_fu_1246_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_43_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_1268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1283_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_fu_1315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_1301_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_1_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_1_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_s_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_s_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_1_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_1_fu_1370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_s_fu_1357_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_1_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_s_fu_1375_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_2_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_2_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_6_fu_1421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_5_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_2_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_2_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_5_fu_1431_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_2_fu_1463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_1449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_3_fu_1485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_3_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_6_fu_1500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_3_fu_1513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_3_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_6_fu_1505_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_3_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_6_fu_1523_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp51_fu_1585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i4_fu_1579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_not_fu_1590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_mux_fu_1595_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_1_69_fu_1602_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_73_1_fu_1617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp57_fu_1627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_1_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_1_fu_1622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp58_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i4_1_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_not_1_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_mux_1_fu_1653_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_13_1_70_fu_1660_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_73_2_fu_1675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp67_fu_1685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_2_fu_1690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_2_fu_1680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp68_fu_1701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i4_2_fu_1695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_not_2_fu_1706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_mux_2_fu_1711_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_13_2_71_fu_1718_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_73_3_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp72_fu_1743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_3_fu_1748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_3_fu_1738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp73_fu_1759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i4_3_fu_1753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_not_3_fu_1764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_mux_3_fu_1769_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_13_3_72_fu_1776_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sel_tmp1_fu_1813_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_s_74_fu_1838_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_147_fu_1857_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal newsignbit_fu_1869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_fu_1849_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_1877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_5_not_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i3_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_fu_1861_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal underflow_fu_1883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_fu_1901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_mux_fu_1907_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_4_75_fu_1915_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sel_tmp6_fu_1942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_1952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp76_fu_1963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp75_fu_1957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_3_V_fu_1984_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_1_fu_1994_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sel_tmp12_fu_2009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_3_V_2_fu_2002_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sel_tmp13_fu_2021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_3_V_3_fu_2013_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_7_fu_2037_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_8_fu_2043_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_9_fu_2051_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_18_fu_2058_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_22_fu_2074_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_23_fu_2081_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_24_fu_2088_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sel_tmp15_fu_2112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_3_V_5_fu_2107_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_20_fu_2123_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_26_fu_2135_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sel_tmp16_fu_2147_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_28_fu_2161_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal min_3_V_29_fu_2168_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_2205_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_2205_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_62_fu_2223_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_95_cast_fu_2231_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_64_fu_2235_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Val2_26_fu_2238_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_153_fu_2275_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_7_fu_2262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_i_fu_2283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_2302_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_1_fu_2318_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_155_fu_2294_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_2312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_2340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_2352_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_66_fu_2368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_3_fu_2374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i4_fu_2396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i8_fu_2401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_2406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_i_fu_2417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp193_demorgan_fu_2421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp77_fu_2426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp78_fu_2437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i4_fu_2448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_31_mux_fu_2452_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_9_76_fu_2459_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_156_fu_2484_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal mt_fu_2502_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal grp_fu_2513_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2513_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_71_fu_2530_p3 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_86_cast_fu_2538_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal tmp_72_fu_2542_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal p_Val2_13_fu_2545_p2 : STD_LOGIC_VECTOR (81 downto 0);
    signal tmp_161_fu_2582_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_2569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_i2_fu_2590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_2601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal carry_9_fu_2623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_2627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_57_not_fu_2639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i3_fu_2649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i7_fu_2654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_7_fu_2632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_i2_fu_2665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_2644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp79_fu_2670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp80_fu_2681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i3_fu_2693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_32_mux_fu_2697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_79_fu_2704_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_163_fu_2729_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal mt_1_fu_2747_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal grp_fu_2758_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2758_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_86_1_fu_2775_p3 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_86_1_cast_fu_2783_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal tmp_87_1_fu_2787_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal p_Val2_25_1_fu_2790_p2 : STD_LOGIC_VECTOR (81 downto 0);
    signal tmp_168_fu_2827_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_1_fu_2814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_i2_1_fu_2835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_1_fu_2846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal carry_9_1_fu_2868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_1_fu_2872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_59_1_not_fu_2884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i3_1_fu_2894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i7_1_fu_2899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_1_fu_2877_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_i2_1_fu_2910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_1_fu_2889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp81_fu_2915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp82_fu_2926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i3_1_fu_2938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_32_mux_1_fu_2942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_32_1_82_fu_2949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_176_fu_2974_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal G_1_V_read_assign_fu_2992_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal OP2_V_6_cast_fu_2998_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3012_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3012_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3024_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3024_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3036_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3036_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_63_fu_3066_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_63_cast_fu_3074_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal p_Val2_16_fu_3078_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_181_fu_3114_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_8_fu_3101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_i1_fu_3122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_3141_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_82_fu_3157_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_183_fu_3133_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_2_fu_3151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_3179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_3191_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_105_cast_fu_3199_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_106_cast_fu_3203_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal p_Val2_21_fu_3206_p2 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_188_fu_3243_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_4_fu_3230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_i3_fu_3251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_3262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_3278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_4_fu_3284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_3306_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_87_fu_3322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_68_not_fu_3333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_6_fu_3338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_5_fu_3328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_4_fu_3344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i2_fu_3365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i6_fu_3370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_3375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_i1_fu_3386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp199_demorgan_fu_3390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp89_fu_3395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp90_fu_3406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_fu_3422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_3417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp201_demorgan_fu_3432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_13_fu_3436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_12_fu_3426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp91_fu_3447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i5_fu_3441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_8_not_fu_3452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_mux_fu_3457_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_5_85_fu_3464_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal brmerge_i_i_i2_fu_3479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_21_mux_fu_3483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_84_fu_3490_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_3503_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_51_cast_fu_3511_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_52_fu_3515_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_11_fu_3519_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_54_fu_3525_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_55_cast_fu_3533_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal p_Val2_12_fu_3536_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_3_fu_3588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i1_fu_3593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_3603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_fu_3619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_38_not_fu_3630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_fu_3635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_3625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_3641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st59_fsm_58 : STD_LOGIC;
    signal ap_sig_bdd_2351 : BOOLEAN;
    signal brmerge_i2_fu_3667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_3662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp203_demorgan_fu_3677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_11_fu_3681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_10_fu_3671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp88_fu_3692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i5_fu_3686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_9_not_fu_3697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_fu_3702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_86_fu_3709_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2205_ce : STD_LOGIC;
    signal grp_fu_2513_ce : STD_LOGIC;
    signal grp_fu_2758_ce : STD_LOGIC;
    signal grp_fu_3012_ce : STD_LOGIC;
    signal grp_fu_3024_ce : STD_LOGIC;
    signal grp_fu_3036_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (58 downto 0);

    component Compult_mul_27s_27s_54_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component Compult_mul_19s_57s_75_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (56 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (74 downto 0) );
    end component;


    component Compult_mul_29s_16ns_44_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (28 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component Compult_mul_32s_29s_61_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (28 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (60 downto 0) );
    end component;


    component Compult_mul_29s_29s_56_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (28 downto 0);
        din1 : IN STD_LOGIC_VECTOR (28 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;



begin
    Compult_mul_27s_27s_54_6_U15 : component Compult_mul_27s_27s_54_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 27,
        din1_WIDTH => 27,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2205_p0,
        din1 => grp_fu_2205_p1,
        ce => grp_fu_2205_ce,
        dout => grp_fu_2205_p2);

    Compult_mul_19s_57s_75_6_U16 : component Compult_mul_19s_57s_75_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 19,
        din1_WIDTH => 57,
        dout_WIDTH => 75)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2513_p0,
        din1 => grp_fu_2513_p1,
        ce => grp_fu_2513_ce,
        dout => grp_fu_2513_p2);

    Compult_mul_19s_57s_75_6_U17 : component Compult_mul_19s_57s_75_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 19,
        din1_WIDTH => 57,
        dout_WIDTH => 75)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2758_p0,
        din1 => grp_fu_2758_p1,
        ce => grp_fu_2758_ce,
        dout => grp_fu_2758_p2);

    Compult_mul_29s_16ns_44_3_U18 : component Compult_mul_29s_16ns_44_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 29,
        din1_WIDTH => 16,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3012_p0,
        din1 => grp_fu_3012_p1,
        ce => grp_fu_3012_ce,
        dout => grp_fu_3012_p2);

    Compult_mul_32s_29s_61_6_U19 : component Compult_mul_32s_29s_61_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 29,
        dout_WIDTH => 61)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3024_p0,
        din1 => grp_fu_3024_p1,
        ce => grp_fu_3024_ce,
        dout => grp_fu_3024_p2);

    Compult_mul_29s_29s_56_6_U20 : component Compult_mul_29s_29s_56_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 29,
        din1_WIDTH => 29,
        dout_WIDTH => 56)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3036_p0,
        din1 => grp_fu_3036_p1,
        ce => grp_fu_3036_ce,
        dout => grp_fu_3036_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- i_2_reg_413 assign process. --
    i_2_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) and not((ap_const_lv1_0 = exitcond5_1_fu_2717_p2)))) then 
                i_2_reg_413 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52)) then 
                i_2_reg_413 <= i_5_reg_4609;
            end if; 
        end if;
    end process;

    -- j1_1_reg_378 assign process. --
    j1_1_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41)) then 
                j1_1_reg_378 <= j_2_1_reg_4508;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((ap_const_lv1_0 = exitcond5_fu_2472_p2)))) then 
                j1_1_reg_378 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- j1_reg_355 assign process. --
    j1_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
                j1_reg_355 <= j_2_reg_4407;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((exitcond2_fu_1791_p2 = ap_const_lv1_0)))) then 
                j1_reg_355 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- k_reg_332 assign process. --
    k_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                k_reg_332 <= k_1_reg_4177;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                k_reg_332 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    -- p_Val2_3_73_reg_320 assign process. --
    p_Val2_3_73_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                p_Val2_3_73_reg_320 <= sum_V_fu_2465_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                p_Val2_3_73_reg_320 <= ap_const_lv29_0;
            end if; 
        end if;
    end process;

    -- p_Val2_5_reg_389 assign process. --
    p_Val2_5_reg_389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) and not((ap_const_lv1_0 = exitcond5_1_fu_2717_p2)))) then 
                p_Val2_5_reg_389 <= ap_const_lv31_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52)) then 
                p_Val2_5_reg_389 <= Gx_V_reg_4820;
            end if; 
        end if;
    end process;

    -- p_Val2_8_reg_401 assign process. --
    p_Val2_8_reg_401_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) and not((ap_const_lv1_0 = exitcond5_1_fu_2717_p2)))) then 
                p_Val2_8_reg_401 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52)) then 
                p_Val2_8_reg_401 <= xHx_V_fu_3496_p3;
            end if; 
        end if;
    end process;

    -- xH_V_1_reg_366 assign process. --
    xH_V_1_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41)) then 
                xH_V_1_reg_366 <= xH_1_V_fu_2955_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((ap_const_lv1_0 = exitcond5_fu_2472_p2)))) then 
                xH_V_1_reg_366 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- xH_V_reg_343 assign process. --
    xH_V_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
                xH_V_reg_343 <= xH_0_V_fu_2710_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((exitcond2_fu_1791_p2 = ap_const_lv1_0)))) then 
                xH_V_reg_343 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_51)) then
                Gx_V_reg_4820 <= Gx_V_fu_3471_p3;
                overflow_11_reg_4804 <= overflow_11_fu_3380_p2;
                underflow_12_reg_4809 <= underflow_12_fu_3401_p2;
                underflow_7_not_reg_4815 <= underflow_7_not_fu_3412_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) and (ap_const_lv1_0 = exitcond5_1_fu_2717_p2))) then
                OP2_V_4_1_cast_cast_reg_4518(0) <= OP2_V_4_1_cast_cast_fu_2739_p3(0);
    OP2_V_4_1_cast_cast_reg_4518(3) <= OP2_V_4_1_cast_cast_fu_2739_p3(3);
    OP2_V_4_1_cast_cast_reg_4518(5) <= OP2_V_4_1_cast_cast_fu_2739_p3(5);
    OP2_V_4_1_cast_cast_reg_4518(10) <= OP2_V_4_1_cast_cast_fu_2739_p3(10);
    OP2_V_4_1_cast_cast_reg_4518(11) <= OP2_V_4_1_cast_cast_fu_2739_p3(11);
    OP2_V_4_1_cast_cast_reg_4518(14) <= OP2_V_4_1_cast_cast_fu_2739_p3(14);
    OP2_V_4_1_cast_cast_reg_4518(15) <= OP2_V_4_1_cast_cast_fu_2739_p3(15);
                tmp_79_reg_4513 <= tmp_79_fu_2733_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (ap_const_lv1_0 = exitcond5_fu_2472_p2))) then
                OP2_V_4_cast_cast_reg_4417(2) <= OP2_V_4_cast_cast_fu_2494_p3(2);
    OP2_V_4_cast_cast_reg_4417(3) <= OP2_V_4_cast_cast_fu_2494_p3(3);
    OP2_V_4_cast_cast_reg_4417(5) <= OP2_V_4_cast_cast_fu_2494_p3(5);
    OP2_V_4_cast_cast_reg_4417(7) <= OP2_V_4_cast_cast_fu_2494_p3(7);
    OP2_V_4_cast_cast_reg_4417(8) <= OP2_V_4_cast_cast_fu_2494_p3(8);
    OP2_V_4_cast_cast_reg_4417(9) <= OP2_V_4_cast_cast_fu_2494_p3(9);
    OP2_V_4_cast_cast_reg_4417(10) <= OP2_V_4_cast_cast_fu_2494_p3(10);
    OP2_V_4_cast_cast_reg_4417(12) <= OP2_V_4_cast_cast_fu_2494_p3(12);
    OP2_V_4_cast_cast_reg_4417(14) <= OP2_V_4_cast_cast_fu_2494_p3(14);
    OP2_V_4_cast_cast_reg_4417(15) <= OP2_V_4_cast_cast_fu_2494_p3(15);
                tmp_69_reg_4412 <= tmp_69_fu_2488_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st50_fsm_49)) then
                Range1_all_ones_2_reg_4706 <= Range1_all_ones_2_fu_3167_p2;
                Range1_all_zeros_2_reg_4713 <= Range1_all_zeros_2_fu_3173_p2;
                p_41_i_i1_reg_4718 <= p_41_i_i1_fu_3185_p2;
                p_Val2_17_reg_4691 <= p_Val2_16_fu_3078_p2(57 downto 26);
                p_Val2_22_reg_4732 <= p_Val2_21_fu_3206_p2(55 downto 25);
                qb_assign_5_reg_4701 <= qb_assign_5_fu_3128_p2;
                qb_assign_s_reg_4743 <= qb_assign_s_fu_3257_p2;
                signbit_5_reg_4685 <= p_Val2_16_fu_3078_p2(60 downto 60);
                signbit_6_reg_4723 <= p_Val2_21_fu_3206_p2(56 downto 56);
                tmp_180_reg_4696 <= p_Val2_16_fu_3078_p2(57 downto 57);
                tmp_187_reg_4737 <= p_Val2_21_fu_3206_p2(55 downto 55);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                Range1_all_ones_4_reg_4338 <= Range1_all_ones_4_fu_2328_p2;
                Range1_all_zeros_1_reg_4345 <= Range1_all_zeros_1_fu_2334_p2;
                p_41_i_i_reg_4350 <= p_41_i_i_fu_2346_p2;
                p_Val2_27_reg_4323 <= p_Val2_26_fu_2238_p2(51 downto 23);
                qb_assign_9_reg_4333 <= qb_assign_9_fu_2289_p2;
                signbit_reg_4317 <= p_Val2_26_fu_2238_p2(54 downto 54);
                tmp_152_reg_4328 <= p_Val2_26_fu_2238_p2(51 downto 51);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                aa_0_V_reg_4154 <= aa_0_V_fu_1609_p3;
                aa_1_V_reg_4159 <= aa_1_V_fu_1667_p3;
                aa_2_V_reg_4164 <= aa_2_V_fu_1725_p3;
                aa_3_V_reg_4169 <= aa_3_V_fu_1783_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st58_fsm_57)) then
                brmerge40_demorgan_i1_reg_4898 <= brmerge40_demorgan_i1_fu_3657_p2;
                newsignbit_13_reg_4881 <= p_Val2_15_fu_3606_p2(31 downto 31);
                p_38_i1_reg_4887 <= p_38_i1_fu_3646_p2;
                p_Val2_15_reg_4875 <= p_Val2_15_fu_3606_p2;
                p_not_i1_reg_4893 <= p_not_i1_fu_3651_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                brmerge40_demorgan_i_1_reg_4094 <= brmerge40_demorgan_i_1_fu_1400_p2;
                brmerge40_demorgan_i_2_reg_4114 <= brmerge40_demorgan_i_2_fu_1474_p2;
                brmerge40_demorgan_i_3_reg_4134 <= brmerge40_demorgan_i_3_fu_1548_p2;
                brmerge40_demorgan_i_reg_4074 <= brmerge40_demorgan_i_fu_1326_p2;
                brmerge_i1_1_reg_4089 <= brmerge_i1_1_fu_1395_p2;
                brmerge_i1_2_reg_4109 <= brmerge_i1_2_fu_1469_p2;
                brmerge_i1_3_reg_4129 <= brmerge_i1_3_fu_1543_p2;
                brmerge_i1_reg_4069 <= brmerge_i1_fu_1321_p2;
                p_38_i_1_reg_4084 <= p_38_i_1_fu_1383_p2;
                p_38_i_2_reg_4104 <= p_38_i_2_fu_1457_p2;
                p_38_i_3_reg_4124 <= p_38_i_3_fu_1531_p2;
                p_38_i_reg_4064 <= p_38_i_fu_1309_p2;
                tmp184_demorgan_reg_4099 <= tmp184_demorgan_fu_1405_p2;
                tmp186_demorgan_reg_4119 <= tmp186_demorgan_fu_1479_p2;
                tmp188_demorgan_reg_4139 <= tmp188_demorgan_fu_1553_p2;
                tmp_demorgan_reg_4079 <= tmp_demorgan_fu_1331_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st51_fsm_50)) then
                brmerge40_demorgan_i_i3_reg_4799 <= brmerge40_demorgan_i_i3_fu_3360_p2;
                deleted_ones_2_reg_4765 <= deleted_ones_2_fu_3295_p3;
                deleted_zeros_2_reg_4760 <= deleted_zeros_2_fu_3289_p3;
                newsignbit_11_reg_4754 <= p_Val2_18_fu_3265_p2(31 downto 31);
                newsignbit_12_reg_4782 <= p_Val2_23_fu_3309_p2(30 downto 30);
                p_38_i_i1_reg_4770 <= p_38_i_i1_fu_3301_p2;
                p_38_i_i2_reg_4788 <= p_38_i_i2_fu_3349_p2;
                p_Val2_18_reg_4748 <= p_Val2_18_fu_3265_p2;
                p_Val2_23_reg_4776 <= p_Val2_23_fu_3309_p2;
                p_not_i_i5_reg_4794 <= p_not_i_i5_fu_3354_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then
                deleted_ones_4_reg_4372 <= deleted_ones_4_fu_2385_p3;
                deleted_zeros_3_reg_4367 <= deleted_zeros_3_fu_2379_p3;
                newsignbit_10_reg_4361 <= p_Val2_28_fu_2355_p2(28 downto 28);
                p_38_i_i_reg_4377 <= p_38_i_i_fu_2391_p2;
                p_Val2_28_reg_4355 <= p_Val2_28_fu_2355_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then
                i_5_reg_4609 <= i_5_fu_2968_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then
                j_2_1_reg_4508 <= j_2_1_fu_2723_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then
                j_2_reg_4407 <= j_2_fu_2478_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                k_1_reg_4177 <= k_1_fu_1797_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                min_0_V_reg_4223 <= min_0_V_fu_1923_p3;
                sel_tmp11_reg_4243 <= sel_tmp11_fu_1969_p2;
                sel_tmp5_reg_4237 <= sel_tmp5_fu_1937_p2;
                sel_tmp9_reg_4231 <= sel_tmp9_fu_1931_p2;
                tmp_s_reg_4216 <= tmp_s_fu_1843_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                min_3_V_14_fu_260 <= min_3_V_27_fu_2140_p3;
                min_3_V_15_fu_264 <= min_3_V_21_fu_2128_p3;
                min_3_V_16_fu_268 <= min_3_V_6_fu_2116_p3;
                min_3_V_30_reg_4291 <= min_3_V_30_fu_2175_p3;
                min_V_fu_256 <= min_V_0_3_fu_2154_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                min_3_V_19_reg_4281 <= min_3_V_19_fu_2066_p3;
                min_3_V_25_reg_4286 <= min_3_V_25_fu_2096_p3;
                min_3_V_4_reg_4268 <= min_3_V_4_fu_2025_p3;
                sel_tmp14_reg_4273 <= sel_tmp14_fu_2033_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                overflow_1_1_reg_3817 <= overflow_1_1_fu_601_p2;
                overflow_reg_3799 <= overflow_fu_514_p2;
                tmp_105_reg_3794 <= tmp_105_fu_466_p1;
                tmp_115_reg_3812 <= tmp_115_fu_553_p1;
                tmp_1_reg_3830 <= tmp_1_fu_631_p2;
                tmp_59_reg_3835 <= tmp_59_fu_636_p2;
                underflow9_reg_3805 <= underflow9_fu_538_p2;
                underflow_1_1_reg_3823 <= underflow_1_1_fu_625_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then
                overflow_6_1_reg_4585 <= overflow_6_1_fu_2904_p2;
                underflow_6_1_reg_4590 <= underflow_6_1_fu_2921_p2;
                underflow_6_not_1_reg_4596 <= underflow_6_not_1_fu_2932_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then
                overflow_6_reg_4484 <= overflow_6_fu_2659_p2;
                underflow_6_not_reg_4495 <= underflow_6_not_fu_2687_p2;
                underflow_6_reg_4489 <= underflow_6_fu_2676_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then
                overflow_9_reg_4383 <= overflow_9_fu_2411_p2;
                underflow_10_reg_4388 <= underflow_10_fu_2432_p2;
                underflow_5_not_reg_4394 <= underflow_5_not_fu_2443_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                p_Val2_10_1_reg_3890 <= p_Val2_9_1_fu_823_p2(29 downto 7);
                p_Val2_10_2_reg_3933 <= p_Val2_9_2_fu_944_p2(29 downto 7);
                p_Val2_10_3_reg_3976 <= p_Val2_9_3_fu_1065_p2(29 downto 7);
                p_Val2_s_reg_3847 <= p_Val2_9_fu_705_p2(29 downto 7);
                tmp_108_reg_3840 <= p_Val2_9_fu_705_p2(31 downto 31);
                tmp_109_reg_3852 <= p_Val2_9_fu_705_p2(6 downto 6);
                tmp_110_reg_3857 <= tmp_110_fu_737_p1;
                tmp_111_reg_3862 <= p_Val2_9_fu_705_p2(29 downto 29);
                tmp_112_reg_3867 <= p_Val2_9_fu_705_p2(7 downto 7);
                tmp_114_reg_3872 <= p_Val2_9_fu_705_p2(30 downto 30);
                tmp_118_reg_3883 <= p_Val2_9_1_fu_823_p2(31 downto 31);
                tmp_119_reg_3895 <= p_Val2_9_1_fu_823_p2(6 downto 6);
                tmp_120_reg_3900 <= tmp_120_fu_855_p1;
                tmp_121_reg_3905 <= p_Val2_9_1_fu_823_p2(29 downto 29);
                tmp_122_reg_3910 <= p_Val2_9_1_fu_823_p2(7 downto 7);
                tmp_124_reg_3915 <= p_Val2_9_1_fu_823_p2(30 downto 30);
                tmp_128_reg_3926 <= p_Val2_9_2_fu_944_p2(31 downto 31);
                tmp_129_reg_3938 <= p_Val2_9_2_fu_944_p2(6 downto 6);
                tmp_130_reg_3943 <= tmp_130_fu_976_p1;
                tmp_131_reg_3948 <= p_Val2_9_2_fu_944_p2(29 downto 29);
                tmp_132_reg_3953 <= p_Val2_9_2_fu_944_p2(7 downto 7);
                tmp_134_reg_3958 <= p_Val2_9_2_fu_944_p2(30 downto 30);
                tmp_138_reg_3969 <= p_Val2_9_3_fu_1065_p2(31 downto 31);
                tmp_139_reg_3981 <= p_Val2_9_3_fu_1065_p2(6 downto 6);
                tmp_140_reg_3986 <= tmp_140_fu_1097_p1;
                tmp_141_reg_3991 <= p_Val2_9_3_fu_1065_p2(29 downto 29);
                tmp_142_reg_3996 <= p_Val2_9_3_fu_1065_p2(7 downto 7);
                tmp_144_reg_4001 <= p_Val2_9_3_fu_1065_p2(30 downto 30);
                tmp_50_reg_3877 <= p_Val2_9_fu_705_p2(31 downto 30);
                tmp_56_reg_3920 <= p_Val2_9_1_fu_823_p2(31 downto 30);
                tmp_58_reg_3963 <= p_Val2_9_2_fu_944_p2(31 downto 30);
                tmp_60_reg_4006 <= p_Val2_9_3_fu_1065_p2(31 downto 30);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then
                p_Val2_10_reg_4427 <= grp_fu_2513_p2;
                tmp_158_reg_4432 <= grp_fu_2513_p2(48 downto 48);
                tmp_159_reg_4437 <= tmp_159_fu_2526_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                p_Val2_13_1_reg_4025 <= p_Val2_13_1_fu_1186_p2;
                p_Val2_13_2_reg_4038 <= p_Val2_13_2_fu_1218_p2;
                p_Val2_13_3_reg_4051 <= p_Val2_13_3_fu_1250_p2;
                p_Val2_2_reg_4012 <= p_Val2_2_fu_1154_p2;
                tmp_113_reg_4018 <= p_Val2_2_fu_1154_p2(22 downto 22);
                tmp_123_reg_4031 <= p_Val2_13_1_fu_1186_p2(22 downto 22);
                tmp_133_reg_4044 <= p_Val2_13_2_fu_1218_p2(22 downto 22);
                tmp_143_reg_4057 <= p_Val2_13_3_fu_1250_p2(22 downto 22);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st56_fsm_55)) then
                p_Val2_14_reg_4844 <= p_Val2_12_fu_3536_p2(44 downto 13);
                qbit_11_reg_4849 <= p_Val2_12_fu_3536_p2(12 downto 12);
                signbit_7_reg_4835 <= p_Val2_12_fu_3536_p2(45 downto 45);
                tmp_172_reg_4854 <= tmp_172_fu_3568_p1;
                tmp_173_reg_4859 <= p_Val2_12_fu_3536_p2(44 downto 44);
                tmp_174_reg_4865 <= p_Val2_12_fu_3536_p2(13 downto 13);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                p_Val2_19_reg_4302 <= grp_fu_2205_p2;
                qbit_reg_4307 <= grp_fu_2205_p2(22 downto 22);
                tmp_151_reg_4312 <= tmp_151_fu_2219_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48)) then
                p_Val2_20_reg_4670 <= grp_fu_3036_p2;
                p_Val2_7_reg_4655 <= grp_fu_3024_p2;
                qbit_10_reg_4675 <= grp_fu_3036_p2(24 downto 24);
                qbit_9_reg_4660 <= grp_fu_3024_p2(25 downto 25);
                tmp_179_reg_4665 <= tmp_179_fu_3050_p1;
                tmp_186_reg_4680 <= tmp_186_fu_3062_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then
                p_Val2_24_1_reg_4528 <= grp_fu_2758_p2;
                tmp_165_reg_4533 <= grp_fu_2758_p2(48 downto 48);
                tmp_166_reg_4538 <= tmp_166_fu_2771_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then
                p_Val2_24_reg_4450 <= p_Val2_13_fu_2545_p2(80 downto 49);
                qb_assign_7_reg_4461 <= qb_assign_7_fu_2596_p2;
                tmp_157_reg_4442 <= p_Val2_13_fu_2545_p2(81 downto 81);
                tmp_160_reg_4455 <= p_Val2_13_fu_2545_p2(80 downto 80);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then
                p_Val2_25_reg_4466 <= p_Val2_25_fu_2604_p2;
                tmp_162_reg_4472 <= p_Val2_25_fu_2604_p2(31 downto 31);
                tmp_74_reg_4479 <= tmp_74_fu_2617_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38)) then
                p_Val2_26_1_reg_4551 <= p_Val2_25_1_fu_2790_p2(80 downto 49);
                qb_assign_7_1_reg_4562 <= qb_assign_7_1_fu_2841_p2;
                tmp_164_reg_4543 <= p_Val2_25_1_fu_2790_p2(81 downto 81);
                tmp_167_reg_4556 <= p_Val2_25_1_fu_2790_p2(80 downto 80);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39)) then
                p_Val2_32_1_reg_4567 <= p_Val2_32_1_fu_2849_p2;
                tmp_108_1_reg_4580 <= tmp_108_1_fu_2862_p2;
                tmp_169_reg_4573 <= p_Val2_32_1_fu_2849_p2(31 downto 31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st55_fsm_54)) then
                p_Val2_6_reg_4830 <= grp_fu_3012_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st57_fsm_56)) then
                qb_assign_3_reg_4870 <= qb_assign_3_fu_3598_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (ap_const_lv1_0 = exitcond_fu_2962_p2))) then
                r_V_1_reg_4625 <= r_V_1_fu_3002_p2;
                xH_V_load_phi_reg_4614 <= xH_V_load_phi_fu_2978_p3;
                x_1_V_read_assign_2_reg_4619 <= x_1_V_read_assign_2_fu_2986_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (exitcond2_fu_1791_p2 = ap_const_lv1_0))) then
                sel_tmp2_reg_4196 <= sel_tmp2_fu_1819_p2;
                sel_tmp3_reg_4203 <= sel_tmp3_fu_1825_p3;
                sel_tmp4_reg_4208 <= sel_tmp4_fu_1832_p2;
                sel_tmp_reg_4189 <= sel_tmp_fu_1807_p2;
                tmp_145_reg_4182 <= tmp_145_fu_1803_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                tmp_126_reg_3766 <= x_0_V_read(28 downto 28);
                tmp_127_reg_3773 <= x_0_V_read(27 downto 27);
                tmp_136_reg_3780 <= x_1_V_read(28 downto 28);
                tmp_137_reg_3787 <= x_1_V_read(27 downto 27);
            end if;
        end if;
    end process;
    OP2_V_4_cast_cast_reg_4417(1 downto 0) <= "11";
    OP2_V_4_cast_cast_reg_4417(4 downto 4) <= "1";
    OP2_V_4_cast_cast_reg_4417(6 downto 6) <= "1";
    OP2_V_4_cast_cast_reg_4417(11 downto 11) <= "1";
    OP2_V_4_cast_cast_reg_4417(13 downto 13) <= "0";
    OP2_V_4_cast_cast_reg_4417(74 downto 16) <= "00000000000000000000000000000000000000000000000000000000011";
    OP2_V_4_1_cast_cast_reg_4518(2 downto 1) <= "11";
    OP2_V_4_1_cast_cast_reg_4518(4 downto 4) <= "1";
    OP2_V_4_1_cast_cast_reg_4518(9 downto 6) <= "0111";
    OP2_V_4_1_cast_cast_reg_4518(13 downto 12) <= "00";
    OP2_V_4_1_cast_cast_reg_4518(74 downto 16) <= "00000000000000000000000000000000000000000000000000000000011";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond2_fu_1791_p2, exitcond5_fu_2472_p2, exitcond5_1_fu_2717_p2, exitcond_fu_2962_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not((exitcond2_fu_1791_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st21_fsm_20 => 
                if (not((ap_const_lv1_0 = exitcond5_fu_2472_p2))) then
                    ap_NS_fsm <= ap_ST_st32_fsm_31;
                else
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                end if;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st32_fsm_31 => 
                if (not((ap_const_lv1_0 = exitcond5_1_fu_2717_p2))) then
                    ap_NS_fsm <= ap_ST_st43_fsm_42;
                else
                    ap_NS_fsm <= ap_ST_st33_fsm_32;
                end if;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st43_fsm_42 => 
                if (not((ap_const_lv1_0 = exitcond_fu_2962_p2))) then
                    ap_NS_fsm <= ap_ST_st54_fsm_53;
                else
                    ap_NS_fsm <= ap_ST_st44_fsm_43;
                end if;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st50_fsm_49;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st51_fsm_50;
            when ap_ST_st51_fsm_50 => 
                ap_NS_fsm <= ap_ST_st52_fsm_51;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_st55_fsm_54;
            when ap_ST_st55_fsm_54 => 
                ap_NS_fsm <= ap_ST_st56_fsm_55;
            when ap_ST_st56_fsm_55 => 
                ap_NS_fsm <= ap_ST_st57_fsm_56;
            when ap_ST_st57_fsm_56 => 
                ap_NS_fsm <= ap_ST_st58_fsm_57;
            when ap_ST_st58_fsm_57 => 
                ap_NS_fsm <= ap_ST_st59_fsm_58;
            when ap_ST_st59_fsm_58 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    G_1_V_read_assign_fu_2992_p3 <= 
        G_1_V_read when (tmp_176_fu_2974_p1(0) = '1') else 
        G_0_V_read;
    Gx_V_fu_3471_p3 <= 
        p_Val2_37_mux_fu_3457_p3 when (underflow_8_not_fu_3452_p2(0) = '1') else 
        p_Val2_5_85_fu_3464_p3;
        OP1_V_fu_2202_p1 <= std_logic_vector(resize(signed(min_3_V_30_reg_4291),54));

        OP2_V_124_1_cast_fu_544_p1 <= std_logic_vector(resize(signed(x_1_V_read),30));

    OP2_V_4_1_cast_cast_fu_2739_p3 <= 
        ap_const_lv75_385DE when (tmp_163_fu_2729_p1(0) = '1') else 
        ap_const_lv75_349F7;
    OP2_V_4_cast_cast_fu_2494_p3 <= 
        ap_const_lv75_349F7 when (tmp_156_fu_2484_p1(0) = '1') else 
        ap_const_lv75_39E5B;
        OP2_V_6_cast_fu_2998_p1 <= std_logic_vector(resize(signed(G_1_V_read_assign_fu_2992_p3),29));

        OP2_V_cast_fu_457_p1 <= std_logic_vector(resize(signed(x_0_V_read),30));

    Range1_all_ones_2_fu_3167_p2 <= "1" when (tmp_82_fu_3157_p4 = ap_const_lv3_7) else "0";
    Range1_all_ones_3_fu_1495_p2 <= "1" when (tmp_60_reg_4006 = ap_const_lv2_3) else "0";
    Range1_all_ones_4_fu_2328_p2 <= "1" when (p_Result_1_fu_2318_p4 = ap_const_lv3_7) else "0";
    Range1_all_ones_6_fu_1421_p2 <= "1" when (tmp_58_reg_3963 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_1273_p2 <= "1" when (tmp_50_reg_3877 = ap_const_lv2_3) else "0";
    Range1_all_ones_s_fu_1347_p2 <= "1" when (tmp_56_reg_3920 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_2334_p2 <= "1" when (p_Result_1_fu_2318_p4 = ap_const_lv3_0) else "0";
    Range1_all_zeros_2_fu_3173_p2 <= "1" when (tmp_82_fu_3157_p4 = ap_const_lv3_0) else "0";
    Range1_all_zeros_5_fu_1426_p2 <= "1" when (tmp_58_reg_3963 = ap_const_lv2_0) else "0";
    Range1_all_zeros_6_fu_1500_p2 <= "1" when (tmp_60_reg_4006 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_1278_p2 <= "1" when (tmp_50_reg_3877 = ap_const_lv2_0) else "0";
    Range1_all_zeros_s_fu_1352_p2 <= "1" when (tmp_56_reg_3920 = ap_const_lv2_0) else "0";
    Range2_all_ones_2_fu_3151_p2 <= "1" when (tmp_81_fu_3141_p4 = ap_const_lv2_3) else "0";
    Range2_all_ones_fu_2312_p2 <= "1" when (p_Result_s_fu_2302_p4 = ap_const_lv2_3) else "0";
    aa_0_V_fu_1609_p3 <= 
        p_Val2_13_mux_fu_1595_p3 when (underflow_3_not_fu_1590_p2(0) = '1') else 
        p_Val2_1_69_fu_1602_p3;
    aa_1_V_fu_1667_p3 <= 
        p_Val2_13_mux_1_fu_1653_p3 when (underflow_3_not_1_fu_1648_p2(0) = '1') else 
        p_Val2_13_1_70_fu_1660_p3;
    aa_2_V_fu_1725_p3 <= 
        p_Val2_13_mux_2_fu_1711_p3 when (underflow_3_not_2_fu_1706_p2(0) = '1') else 
        p_Val2_13_2_71_fu_1718_p3;
    aa_3_V_fu_1783_p3 <= 
        p_Val2_13_mux_3_fu_1769_p3 when (underflow_3_not_3_fu_1764_p2(0) = '1') else 
        p_Val2_13_3_72_fu_1776_p3;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st59_fsm_58)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st59_fsm_58))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st59_fsm_58)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st59_fsm_58)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        result_V_fu_3702_p3 when (underflow_9_not_fu_3697_p2(0) = '1') else 
        p_Val2_s_86_fu_3709_p3;

    -- ap_sig_bdd_113 assign process. --
    ap_sig_bdd_113_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_113 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_136 assign process. --
    ap_sig_bdd_136_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_136 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_207 assign process. --
    ap_sig_bdd_207_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_207 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_230 assign process. --
    ap_sig_bdd_230_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_230 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_2351 assign process. --
    ap_sig_bdd_2351_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_2351 <= (ap_const_lv1_1 = ap_CS_fsm(58 downto 58));
    end process;


    -- ap_sig_bdd_269 assign process. --
    ap_sig_bdd_269_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_269 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_288 assign process. --
    ap_sig_bdd_288_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_288 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_311 assign process. --
    ap_sig_bdd_311_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_311 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_328 assign process. --
    ap_sig_bdd_328_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_328 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_349 assign process. --
    ap_sig_bdd_349_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_349 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_358 assign process. --
    ap_sig_bdd_358_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_358 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_367 assign process. --
    ap_sig_bdd_367_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_367 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_380 assign process. --
    ap_sig_bdd_380_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_380 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_401 assign process. --
    ap_sig_bdd_401_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_401 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_418 assign process. --
    ap_sig_bdd_418_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_418 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_431 assign process. --
    ap_sig_bdd_431_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_431 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_440 assign process. --
    ap_sig_bdd_440_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_440 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    -- ap_sig_bdd_456 assign process. --
    ap_sig_bdd_456_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_456 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    -- ap_sig_bdd_465 assign process. --
    ap_sig_bdd_465_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_465 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    -- ap_sig_bdd_478 assign process. --
    ap_sig_bdd_478_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_478 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    -- ap_sig_bdd_493 assign process. --
    ap_sig_bdd_493_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_493 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    -- ap_sig_bdd_506 assign process. --
    ap_sig_bdd_506_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_506 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    -- ap_sig_bdd_519 assign process. --
    ap_sig_bdd_519_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_519 <= (ap_const_lv1_1 = ap_CS_fsm(30 downto 30));
    end process;


    -- ap_sig_bdd_528 assign process. --
    ap_sig_bdd_528_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_528 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    -- ap_sig_bdd_544 assign process. --
    ap_sig_bdd_544_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_544 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    -- ap_sig_bdd_553 assign process. --
    ap_sig_bdd_553_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_553 <= (ap_const_lv1_1 = ap_CS_fsm(37 downto 37));
    end process;


    -- ap_sig_bdd_566 assign process. --
    ap_sig_bdd_566_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_566 <= (ap_const_lv1_1 = ap_CS_fsm(38 downto 38));
    end process;


    -- ap_sig_bdd_581 assign process. --
    ap_sig_bdd_581_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_581 <= (ap_const_lv1_1 = ap_CS_fsm(39 downto 39));
    end process;


    -- ap_sig_bdd_594 assign process. --
    ap_sig_bdd_594_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_594 <= (ap_const_lv1_1 = ap_CS_fsm(40 downto 40));
    end process;


    -- ap_sig_bdd_607 assign process. --
    ap_sig_bdd_607_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_607 <= (ap_const_lv1_1 = ap_CS_fsm(41 downto 41));
    end process;


    -- ap_sig_bdd_616 assign process. --
    ap_sig_bdd_616_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_616 <= (ap_const_lv1_1 = ap_CS_fsm(42 downto 42));
    end process;


    -- ap_sig_bdd_638 assign process. --
    ap_sig_bdd_638_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_638 <= (ap_const_lv1_1 = ap_CS_fsm(43 downto 43));
    end process;


    -- ap_sig_bdd_653 assign process. --
    ap_sig_bdd_653_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_653 <= (ap_const_lv1_1 = ap_CS_fsm(48 downto 48));
    end process;


    -- ap_sig_bdd_672 assign process. --
    ap_sig_bdd_672_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_672 <= (ap_const_lv1_1 = ap_CS_fsm(49 downto 49));
    end process;


    -- ap_sig_bdd_701 assign process. --
    ap_sig_bdd_701_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_701 <= (ap_const_lv1_1 = ap_CS_fsm(50 downto 50));
    end process;


    -- ap_sig_bdd_728 assign process. --
    ap_sig_bdd_728_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_728 <= (ap_const_lv1_1 = ap_CS_fsm(51 downto 51));
    end process;


    -- ap_sig_bdd_743 assign process. --
    ap_sig_bdd_743_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_743 <= (ap_const_lv1_1 = ap_CS_fsm(52 downto 52));
    end process;


    -- ap_sig_bdd_752 assign process. --
    ap_sig_bdd_752_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_752 <= (ap_const_lv1_1 = ap_CS_fsm(54 downto 54));
    end process;


    -- ap_sig_bdd_761 assign process. --
    ap_sig_bdd_761_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_761 <= (ap_const_lv1_1 = ap_CS_fsm(55 downto 55));
    end process;


    -- ap_sig_bdd_77 assign process. --
    ap_sig_bdd_77_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_77 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_780 assign process. --
    ap_sig_bdd_780_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_780 <= (ap_const_lv1_1 = ap_CS_fsm(56 downto 56));
    end process;


    -- ap_sig_bdd_789 assign process. --
    ap_sig_bdd_789_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_789 <= (ap_const_lv1_1 = ap_CS_fsm(57 downto 57));
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_349)
    begin
        if (ap_sig_bdd_349) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_358)
    begin
        if (ap_sig_bdd_358) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st16_fsm_15 assign process. --
    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_bdd_367)
    begin
        if (ap_sig_bdd_367) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st17_fsm_16 assign process. --
    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_bdd_380)
    begin
        if (ap_sig_bdd_380) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st18_fsm_17 assign process. --
    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_bdd_401)
    begin
        if (ap_sig_bdd_401) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_18 assign process. --
    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_bdd_418)
    begin
        if (ap_sig_bdd_418) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_77)
    begin
        if (ap_sig_bdd_77) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st20_fsm_19 assign process. --
    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_bdd_431)
    begin
        if (ap_sig_bdd_431) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st21_fsm_20 assign process. --
    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_bdd_440)
    begin
        if (ap_sig_bdd_440) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st22_fsm_21 assign process. --
    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_bdd_456)
    begin
        if (ap_sig_bdd_456) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st27_fsm_26 assign process. --
    ap_sig_cseq_ST_st27_fsm_26_assign_proc : process(ap_sig_bdd_465)
    begin
        if (ap_sig_bdd_465) then 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st28_fsm_27 assign process. --
    ap_sig_cseq_ST_st28_fsm_27_assign_proc : process(ap_sig_bdd_478)
    begin
        if (ap_sig_bdd_478) then 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st29_fsm_28 assign process. --
    ap_sig_cseq_ST_st29_fsm_28_assign_proc : process(ap_sig_bdd_493)
    begin
        if (ap_sig_bdd_493) then 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_113)
    begin
        if (ap_sig_bdd_113) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st30_fsm_29 assign process. --
    ap_sig_cseq_ST_st30_fsm_29_assign_proc : process(ap_sig_bdd_506)
    begin
        if (ap_sig_bdd_506) then 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st31_fsm_30 assign process. --
    ap_sig_cseq_ST_st31_fsm_30_assign_proc : process(ap_sig_bdd_519)
    begin
        if (ap_sig_bdd_519) then 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st32_fsm_31 assign process. --
    ap_sig_cseq_ST_st32_fsm_31_assign_proc : process(ap_sig_bdd_528)
    begin
        if (ap_sig_bdd_528) then 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st33_fsm_32 assign process. --
    ap_sig_cseq_ST_st33_fsm_32_assign_proc : process(ap_sig_bdd_544)
    begin
        if (ap_sig_bdd_544) then 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st38_fsm_37 assign process. --
    ap_sig_cseq_ST_st38_fsm_37_assign_proc : process(ap_sig_bdd_553)
    begin
        if (ap_sig_bdd_553) then 
            ap_sig_cseq_ST_st38_fsm_37 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st38_fsm_37 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st39_fsm_38 assign process. --
    ap_sig_cseq_ST_st39_fsm_38_assign_proc : process(ap_sig_bdd_566)
    begin
        if (ap_sig_bdd_566) then 
            ap_sig_cseq_ST_st39_fsm_38 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st39_fsm_38 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_136)
    begin
        if (ap_sig_bdd_136) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st40_fsm_39 assign process. --
    ap_sig_cseq_ST_st40_fsm_39_assign_proc : process(ap_sig_bdd_581)
    begin
        if (ap_sig_bdd_581) then 
            ap_sig_cseq_ST_st40_fsm_39 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st40_fsm_39 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st41_fsm_40 assign process. --
    ap_sig_cseq_ST_st41_fsm_40_assign_proc : process(ap_sig_bdd_594)
    begin
        if (ap_sig_bdd_594) then 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st42_fsm_41 assign process. --
    ap_sig_cseq_ST_st42_fsm_41_assign_proc : process(ap_sig_bdd_607)
    begin
        if (ap_sig_bdd_607) then 
            ap_sig_cseq_ST_st42_fsm_41 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st42_fsm_41 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st43_fsm_42 assign process. --
    ap_sig_cseq_ST_st43_fsm_42_assign_proc : process(ap_sig_bdd_616)
    begin
        if (ap_sig_bdd_616) then 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st44_fsm_43 assign process. --
    ap_sig_cseq_ST_st44_fsm_43_assign_proc : process(ap_sig_bdd_638)
    begin
        if (ap_sig_bdd_638) then 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st49_fsm_48 assign process. --
    ap_sig_cseq_ST_st49_fsm_48_assign_proc : process(ap_sig_bdd_653)
    begin
        if (ap_sig_bdd_653) then 
            ap_sig_cseq_ST_st49_fsm_48 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st49_fsm_48 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_207)
    begin
        if (ap_sig_bdd_207) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st50_fsm_49 assign process. --
    ap_sig_cseq_ST_st50_fsm_49_assign_proc : process(ap_sig_bdd_672)
    begin
        if (ap_sig_bdd_672) then 
            ap_sig_cseq_ST_st50_fsm_49 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st50_fsm_49 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st51_fsm_50 assign process. --
    ap_sig_cseq_ST_st51_fsm_50_assign_proc : process(ap_sig_bdd_701)
    begin
        if (ap_sig_bdd_701) then 
            ap_sig_cseq_ST_st51_fsm_50 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st51_fsm_50 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st52_fsm_51 assign process. --
    ap_sig_cseq_ST_st52_fsm_51_assign_proc : process(ap_sig_bdd_728)
    begin
        if (ap_sig_bdd_728) then 
            ap_sig_cseq_ST_st52_fsm_51 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st52_fsm_51 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st53_fsm_52 assign process. --
    ap_sig_cseq_ST_st53_fsm_52_assign_proc : process(ap_sig_bdd_743)
    begin
        if (ap_sig_bdd_743) then 
            ap_sig_cseq_ST_st53_fsm_52 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st53_fsm_52 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st55_fsm_54 assign process. --
    ap_sig_cseq_ST_st55_fsm_54_assign_proc : process(ap_sig_bdd_752)
    begin
        if (ap_sig_bdd_752) then 
            ap_sig_cseq_ST_st55_fsm_54 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st55_fsm_54 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st56_fsm_55 assign process. --
    ap_sig_cseq_ST_st56_fsm_55_assign_proc : process(ap_sig_bdd_761)
    begin
        if (ap_sig_bdd_761) then 
            ap_sig_cseq_ST_st56_fsm_55 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st56_fsm_55 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st57_fsm_56 assign process. --
    ap_sig_cseq_ST_st57_fsm_56_assign_proc : process(ap_sig_bdd_780)
    begin
        if (ap_sig_bdd_780) then 
            ap_sig_cseq_ST_st57_fsm_56 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st57_fsm_56 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st58_fsm_57 assign process. --
    ap_sig_cseq_ST_st58_fsm_57_assign_proc : process(ap_sig_bdd_789)
    begin
        if (ap_sig_bdd_789) then 
            ap_sig_cseq_ST_st58_fsm_57 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st58_fsm_57 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st59_fsm_58 assign process. --
    ap_sig_cseq_ST_st59_fsm_58_assign_proc : process(ap_sig_bdd_2351)
    begin
        if (ap_sig_bdd_2351) then 
            ap_sig_cseq_ST_st59_fsm_58 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st59_fsm_58 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_230)
    begin
        if (ap_sig_bdd_230) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_269)
    begin
        if (ap_sig_bdd_269) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_288)
    begin
        if (ap_sig_bdd_288) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_311)
    begin
        if (ap_sig_bdd_311) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_328)
    begin
        if (ap_sig_bdd_328) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

        b_0_V_read_cast_fu_653_p1 <= std_logic_vector(resize(signed(b_0_V_read),32));

        b_1_V_read_cast_fu_649_p1 <= std_logic_vector(resize(signed(b_1_V_read),32));

        b_2_V_read_cast_fu_645_p1 <= std_logic_vector(resize(signed(b_2_V_read),32));

        b_3_V_read_cast_fu_641_p1 <= std_logic_vector(resize(signed(b_3_V_read),32));

    brmerge39_i_i_1_1_fu_619_p2 <= (p_not38_i_i_1_1_fu_613_p2 or newsignbit_0_not_i_i_1_1_fu_607_p2);
    brmerge39_i_i_fu_532_p2 <= (p_not38_i_i_fu_526_p2 or newsignbit_0_not_i_i_fu_520_p2);
    brmerge40_demorgan_i1_fu_3657_p2 <= (signbit_7_reg_4835 and newsignbit_13_fu_3611_p3);
    brmerge40_demorgan_i_1_fu_1400_p2 <= (tmp_123_reg_4031 and deleted_ones_s_fu_1375_p3);
    brmerge40_demorgan_i_2_fu_1474_p2 <= (tmp_133_reg_4044 and deleted_ones_3_fu_1449_p3);
    brmerge40_demorgan_i_3_fu_1548_p2 <= (tmp_143_reg_4057 and deleted_ones_6_fu_1523_p3);
    brmerge40_demorgan_i_fu_1326_p2 <= (tmp_113_reg_4018 and deleted_ones_fu_1301_p3);
    brmerge40_demorgan_i_i1_fu_3386_p2 <= (newsignbit_11_reg_4754 and deleted_ones_2_reg_4765);
    brmerge40_demorgan_i_i2_1_fu_2910_p2 <= (tmp_169_reg_4573 and deleted_ones_3_1_fu_2877_p3);
    brmerge40_demorgan_i_i2_fu_2665_p2 <= (tmp_162_reg_4472 and deleted_ones_7_fu_2632_p3);
    brmerge40_demorgan_i_i3_fu_3360_p2 <= (signbit_6_reg_4723 and newsignbit_12_fu_3314_p3);
    brmerge40_demorgan_i_i_fu_2417_p2 <= (newsignbit_10_reg_4361 and deleted_ones_4_reg_4372);
    brmerge4_fu_1901_p2 <= (newsignbit_fu_1869_p3 or isneg_5_not_fu_1895_p2);
    brmerge_1_1_fu_791_p2 <= (overflow_1_1_reg_3817 or underflow_not_1_1_fu_786_p2);
    brmerge_2_fu_911_p2 <= (tmp_127_reg_3773 or p_Result_25_2_0_not_fu_906_p2);
    brmerge_fu_673_p2 <= (overflow_reg_3799 or underflow_not_fu_668_p2);
    brmerge_i1_1_fu_1395_p2 <= (tmp_123_reg_4031 or p_not_i_1_fu_1389_p2);
    brmerge_i1_2_fu_1469_p2 <= (tmp_133_reg_4044 or p_not_i_2_fu_1463_p2);
    brmerge_i1_3_fu_1543_p2 <= (tmp_143_reg_4057 or p_not_i_3_fu_1537_p2);
    brmerge_i1_fu_1321_p2 <= (tmp_113_reg_4018 or p_not_i_fu_1315_p2);
    brmerge_i2_fu_3667_p2 <= (newsignbit_13_reg_4881 or p_not_i1_reg_4893);
    brmerge_i_i3_fu_1889_p2 <= (isneg_fu_1849_p3 xor newsignbit_fu_1869_p3);
    brmerge_i_i4_1_fu_1637_p2 <= (underflow_3_1_fu_1632_p2 or overflow_3_1_fu_1622_p2);
    brmerge_i_i4_2_fu_1695_p2 <= (underflow_3_2_fu_1690_p2 or overflow_3_2_fu_1680_p2);
    brmerge_i_i4_3_fu_1753_p2 <= (underflow_3_3_fu_1748_p2 or overflow_3_3_fu_1738_p2);
    brmerge_i_i4_fu_1579_p2 <= (underflow_3_fu_1574_p2 or overflow_3_fu_1564_p2);
    brmerge_i_i5_fu_3686_p2 <= (underflow_11_fu_3681_p2 or overflow_10_fu_3671_p2);
    brmerge_i_i6_fu_3370_p2 <= (newsignbit_11_reg_4754 or p_not_i_i2_fu_3365_p2);
    brmerge_i_i7_1_fu_2899_p2 <= (tmp_169_reg_4573 or p_not_i_i3_1_fu_2894_p2);
    brmerge_i_i7_fu_2654_p2 <= (tmp_162_reg_4472 or p_not_i_i3_fu_2649_p2);
    brmerge_i_i8_fu_2401_p2 <= (newsignbit_10_reg_4361 or p_not_i_i4_fu_2396_p2);
    brmerge_i_i9_fu_3422_p2 <= (newsignbit_12_reg_4782 or p_not_i_i5_reg_4794);
    brmerge_i_i_1_1_fu_589_p2 <= (tmp_117_fu_565_p3 or p_not_i_i_1_1_fu_583_p2);
    brmerge_i_i_fu_502_p2 <= (tmp_107_fu_478_p3 or p_not_i_i_fu_496_p2);
    brmerge_i_i_i2_fu_3479_p2 <= (underflow_12_reg_4809 or overflow_11_reg_4804);
    brmerge_i_i_i3_1_fu_2938_p2 <= (underflow_6_1_reg_4590 or overflow_6_1_reg_4585);
    brmerge_i_i_i3_fu_2693_p2 <= (underflow_6_reg_4489 or overflow_6_reg_4484);
    brmerge_i_i_i4_fu_2448_p2 <= (underflow_10_reg_4388 or overflow_9_reg_4383);
    brmerge_i_i_i5_fu_3441_p2 <= (underflow_13_fu_3436_p2 or overflow_12_fu_3426_p2);
    brmerge_i_i_i_1_1_fu_782_p2 <= (underflow_1_1_reg_3823 or overflow_1_1_reg_3817);
    brmerge_i_i_i_2_fu_902_p2 <= (tmp_126_reg_3766 xor tmp_127_reg_3773);
    brmerge_i_i_i_3_1_fu_1028_p2 <= (tmp_136_reg_3780 xor tmp_137_reg_3787);
    brmerge_i_i_i_fu_664_p2 <= (underflow9_reg_3805 or overflow_reg_3799);
    carry_1_1_fu_1342_p2 <= (tmp_121_reg_3905 and tmp_43_1_fu_1337_p2);
    carry_1_2_fu_1416_p2 <= (tmp_131_reg_3948 and tmp_43_2_fu_1411_p2);
    carry_1_3_fu_1490_p2 <= (tmp_141_reg_3991 and tmp_43_3_fu_1485_p2);
    carry_1_fu_1268_p2 <= (tmp_111_reg_3862 and tmp_43_fu_1263_p2);
    carry_3_fu_2374_p2 <= (tmp_152_reg_4328 and tmp_66_fu_2368_p2);
    carry_4_fu_3284_p2 <= (tmp_180_reg_4696 and tmp_77_fu_3278_p2);
    carry_5_fu_3328_p2 <= (tmp_187_reg_4737 and tmp_87_fu_3322_p2);
    carry_9_1_fu_2868_p2 <= (tmp_167_reg_4556 and tmp_108_1_reg_4580);
    carry_9_fu_2623_p2 <= (tmp_160_reg_4455 and tmp_74_reg_4479);
    carry_fu_3625_p2 <= (tmp_173_reg_4859 and tmp_75_fu_3619_p2);
    deleted_ones_2_fu_3295_p3 <= 
        p_41_i_i1_reg_4718 when (carry_4_fu_3284_p2(0) = '1') else 
        Range1_all_ones_2_reg_4706;
    deleted_ones_3_1_fu_2877_p3 <= 
        tmp_112_1_fu_2872_p2 when (carry_9_1_fu_2868_p2(0) = '1') else 
        tmp_164_reg_4543;
    deleted_ones_3_fu_1449_p3 <= 
        p_41_i_2_fu_1444_p2 when (carry_1_2_fu_1416_p2(0) = '1') else 
        Range1_all_ones_6_fu_1421_p2;
    deleted_ones_4_fu_2385_p3 <= 
        p_41_i_i_reg_4350 when (carry_3_fu_2374_p2(0) = '1') else 
        Range1_all_ones_4_reg_4338;
    deleted_ones_6_fu_1523_p3 <= 
        p_41_i_3_fu_1518_p2 when (carry_1_3_fu_1490_p2(0) = '1') else 
        Range1_all_ones_3_fu_1495_p2;
    deleted_ones_7_fu_2632_p3 <= 
        tmp_76_fu_2627_p2 when (carry_9_fu_2623_p2(0) = '1') else 
        tmp_157_reg_4442;
    deleted_ones_fu_1301_p3 <= 
        p_41_i_fu_1296_p2 when (carry_1_fu_1268_p2(0) = '1') else 
        Range1_all_ones_fu_1273_p2;
    deleted_ones_s_fu_1375_p3 <= 
        p_41_i_1_fu_1370_p2 when (carry_1_1_fu_1342_p2(0) = '1') else 
        Range1_all_ones_s_fu_1347_p2;
    deleted_zeros_1_fu_3641_p2 <= (signbit_7_reg_4835 xor not_carry_fu_3635_p2);
    deleted_zeros_2_fu_3289_p3 <= 
        Range1_all_ones_2_reg_4706 when (carry_4_fu_3284_p2(0) = '1') else 
        Range1_all_zeros_2_reg_4713;
    deleted_zeros_3_fu_2379_p3 <= 
        Range1_all_ones_4_reg_4338 when (carry_3_fu_2374_p2(0) = '1') else 
        Range1_all_zeros_1_reg_4345;
    deleted_zeros_4_fu_3344_p2 <= (signbit_6_reg_4723 xor not_carry_6_fu_3338_p2);
    deleted_zeros_5_fu_1431_p3 <= 
        Range1_all_ones_6_fu_1421_p2 when (carry_1_2_fu_1416_p2(0) = '1') else 
        Range1_all_zeros_5_fu_1426_p2;
    deleted_zeros_6_fu_1505_p3 <= 
        Range1_all_ones_3_fu_1495_p2 when (carry_1_3_fu_1490_p2(0) = '1') else 
        Range1_all_zeros_6_fu_1500_p2;
    deleted_zeros_fu_1283_p3 <= 
        Range1_all_ones_fu_1273_p2 when (carry_1_fu_1268_p2(0) = '1') else 
        Range1_all_zeros_fu_1278_p2;
    deleted_zeros_s_fu_1357_p3 <= 
        Range1_all_ones_s_fu_1347_p2 when (carry_1_1_fu_1342_p2(0) = '1') else 
        Range1_all_zeros_s_fu_1352_p2;
    exitcond2_fu_1791_p2 <= "1" when (k_reg_332 = ap_const_lv3_4) else "0";
    exitcond5_1_fu_2717_p2 <= "1" when (j1_1_reg_378 = ap_const_lv2_2) else "0";
    exitcond5_fu_2472_p2 <= "1" when (j1_reg_355 = ap_const_lv2_2) else "0";
    exitcond_fu_2962_p2 <= "1" when (i_2_reg_413 = ap_const_lv2_2) else "0";
    grp_fu_2205_ce <= ap_const_logic_1;
    grp_fu_2205_p0 <= OP1_V_fu_2202_p1(27 - 1 downto 0);
    grp_fu_2205_p1 <= OP1_V_fu_2202_p1(27 - 1 downto 0);
    grp_fu_2513_ce <= ap_const_logic_1;
    grp_fu_2513_p0 <= OP2_V_4_cast_cast_reg_4417(19 - 1 downto 0);
    grp_fu_2513_p1 <= mt_fu_2502_p3;
    grp_fu_2758_ce <= ap_const_logic_1;
    grp_fu_2758_p0 <= OP2_V_4_1_cast_cast_reg_4518(19 - 1 downto 0);
    grp_fu_2758_p1 <= mt_1_fu_2747_p3;
    grp_fu_3012_ce <= ap_const_logic_1;
    grp_fu_3012_p0 <= p_Val2_3_73_reg_320;
    grp_fu_3012_p1 <= ap_const_lv44_4E20(16 - 1 downto 0);
    grp_fu_3024_ce <= ap_const_logic_1;
    grp_fu_3024_p0 <= xH_V_load_phi_reg_4614;
    grp_fu_3024_p1 <= x_1_V_read_assign_2_reg_4619;
    grp_fu_3036_ce <= ap_const_logic_1;
    grp_fu_3036_p0 <= r_V_1_reg_4625;
    grp_fu_3036_p1 <= x_1_V_read_assign_2_reg_4619;
    i_5_fu_2968_p2 <= std_logic_vector(unsigned(i_2_reg_413) + unsigned(ap_const_lv2_1));
    isneg_5_not_fu_1895_p2 <= (isneg_fu_1849_p3 xor ap_const_lv1_1);
    isneg_fu_1849_p3 <= p_Val2_s_74_fu_1838_p3(22 downto 22);
    j_2_1_fu_2723_p2 <= std_logic_vector(unsigned(j1_1_reg_378) + unsigned(ap_const_lv2_1));
    j_2_fu_2478_p2 <= std_logic_vector(unsigned(j1_reg_355) + unsigned(ap_const_lv2_1));
    k_1_fu_1797_p2 <= std_logic_vector(unsigned(k_reg_332) + unsigned(ap_const_lv3_1));
    min_0_V_fu_1923_p3 <= 
        p_Val2_4_mux_fu_1907_p3 when (brmerge4_fu_1901_p2(0) = '1') else 
        p_Val2_4_75_fu_1915_p3;
    min_3_V_18_fu_2058_p3 <= 
        ap_const_lv27_0 when (sel_tmp12_fu_2009_p2(0) = '1') else 
        min_3_V_9_fu_2051_p3;
    min_3_V_19_fu_2066_p3 <= 
        min_3_V_15_fu_264 when (sel_tmp13_fu_2021_p2(0) = '1') else 
        min_3_V_18_fu_2058_p3;
    min_3_V_1_fu_1994_p3 <= 
        min_3_V_16_fu_268 when (sel_tmp7_fu_1990_p2(0) = '1') else 
        min_3_V_fu_1984_p3;
    min_3_V_20_fu_2123_p3 <= 
        min_3_V_15_fu_264 when (sel_tmp14_reg_4273(0) = '1') else 
        min_3_V_19_reg_4281;
    min_3_V_21_fu_2128_p3 <= 
        min_3_V_15_fu_264 when (sel_tmp15_fu_2112_p2(0) = '1') else 
        min_3_V_20_fu_2123_p3;
    min_3_V_22_fu_2074_p3 <= 
        min_0_V_reg_4223 when (sel_tmp7_fu_1990_p2(0) = '1') else 
        min_3_V_14_fu_260;
    min_3_V_23_fu_2081_p3 <= 
        min_3_V_14_fu_260 when (sel_tmp11_reg_4243(0) = '1') else 
        min_3_V_22_fu_2074_p3;
    min_3_V_24_fu_2088_p3 <= 
        min_3_V_14_fu_260 when (sel_tmp12_fu_2009_p2(0) = '1') else 
        min_3_V_23_fu_2081_p3;
    min_3_V_25_fu_2096_p3 <= 
        ap_const_lv27_0 when (sel_tmp13_fu_2021_p2(0) = '1') else 
        min_3_V_24_fu_2088_p3;
    min_3_V_26_fu_2135_p3 <= 
        min_3_V_14_fu_260 when (sel_tmp14_reg_4273(0) = '1') else 
        min_3_V_25_reg_4286;
    min_3_V_27_fu_2140_p3 <= 
        min_3_V_14_fu_260 when (sel_tmp15_fu_2112_p2(0) = '1') else 
        min_3_V_26_fu_2135_p3;
    min_3_V_28_fu_2161_p3 <= 
        min_3_V_27_fu_2140_p3 when (sel_tmp_reg_4189(0) = '1') else 
        min_3_V_6_fu_2116_p3;
    min_3_V_29_fu_2168_p3 <= 
        min_3_V_21_fu_2128_p3 when (sel_tmp2_reg_4196(0) = '1') else 
        min_3_V_28_fu_2161_p3;
    min_3_V_2_fu_2002_p3 <= 
        ap_const_lv27_0 when (sel_tmp11_reg_4243(0) = '1') else 
        min_3_V_1_fu_1994_p3;
    min_3_V_30_fu_2175_p3 <= 
        min_V_0_3_fu_2154_p3 when (sel_tmp4_reg_4208(0) = '1') else 
        min_3_V_29_fu_2168_p3;
    min_3_V_3_fu_2013_p3 <= 
        min_3_V_16_fu_268 when (sel_tmp12_fu_2009_p2(0) = '1') else 
        min_3_V_2_fu_2002_p3;
    min_3_V_4_fu_2025_p3 <= 
        min_3_V_16_fu_268 when (sel_tmp13_fu_2021_p2(0) = '1') else 
        min_3_V_3_fu_2013_p3;
    min_3_V_5_fu_2107_p3 <= 
        min_3_V_16_fu_268 when (sel_tmp14_reg_4273(0) = '1') else 
        min_3_V_4_reg_4268;
    min_3_V_6_fu_2116_p3 <= 
        min_3_V_16_fu_268 when (sel_tmp15_fu_2112_p2(0) = '1') else 
        min_3_V_5_fu_2107_p3;
    min_3_V_7_fu_2037_p3 <= 
        min_0_V_reg_4223 when (sel_tmp5_reg_4237(0) = '1') else 
        min_3_V_15_fu_264;
    min_3_V_8_fu_2043_p3 <= 
        min_3_V_15_fu_264 when (sel_tmp7_fu_1990_p2(0) = '1') else 
        min_3_V_7_fu_2037_p3;
    min_3_V_9_fu_2051_p3 <= 
        min_3_V_15_fu_264 when (sel_tmp11_reg_4243(0) = '1') else 
        min_3_V_8_fu_2043_p3;
    min_3_V_fu_1984_p3 <= 
        min_3_V_16_fu_268 when (sel_tmp5_reg_4237(0) = '1') else 
        min_0_V_reg_4223;
    min_V_0_3_fu_2154_p3 <= 
        min_0_V_reg_4223 when (sel_tmp15_fu_2112_p2(0) = '1') else 
        sel_tmp16_fu_2147_p3;
    mt_1_fu_2747_p3 <= (tmp_79_reg_4513 & ap_const_lv28_0);
    mt_fu_2502_p3 <= (tmp_69_reg_4412 & ap_const_lv28_0);
    newsignbit_0_not_i_i_1_1_fu_607_p2 <= (tmp_117_fu_565_p3 xor ap_const_lv1_1);
    newsignbit_0_not_i_i_fu_520_p2 <= (tmp_107_fu_478_p3 xor ap_const_lv1_1);
    newsignbit_10_fu_2360_p3 <= p_Val2_28_fu_2355_p2(28 downto 28);
    newsignbit_11_fu_3270_p3 <= p_Val2_18_fu_3265_p2(31 downto 31);
    newsignbit_12_fu_3314_p3 <= p_Val2_23_fu_3309_p2(30 downto 30);
    newsignbit_13_fu_3611_p3 <= p_Val2_15_fu_3606_p2(31 downto 31);
    newsignbit_fu_1869_p3 <= p_Val2_s_74_fu_1838_p3(21 downto 21);
    not_carry_6_fu_3338_p2 <= (newsignbit_12_fu_3314_p3 or p_Result_68_not_fu_3333_p2);
    not_carry_fu_3635_p2 <= (newsignbit_13_fu_3611_p3 or p_Result_38_not_fu_3630_p2);
    overflow_10_fu_3671_p2 <= (brmerge_i2_fu_3667_p2 and tmp_80_fu_3662_p2);
    overflow_11_fu_3380_p2 <= (brmerge_i_i6_fu_3370_p2 and tmp_84_fu_3375_p2);
    overflow_12_fu_3426_p2 <= (brmerge_i_i9_fu_3422_p2 and tmp_88_fu_3417_p2);
    overflow_1_1_fu_601_p2 <= (brmerge_i_i_1_1_fu_589_p2 and tmp_44_1_1_fu_595_p2);
    overflow_3_1_fu_1622_p2 <= (brmerge_i1_1_reg_4089 and tmp_73_1_fu_1617_p2);
    overflow_3_2_fu_1680_p2 <= (brmerge_i1_2_reg_4109 and tmp_73_2_fu_1675_p2);
    overflow_3_3_fu_1738_p2 <= (brmerge_i1_3_reg_4129 and tmp_73_3_fu_1733_p2);
    overflow_3_fu_1564_p2 <= (brmerge_i1_reg_4069 and tmp_57_fu_1559_p2);
    overflow_6_1_fu_2904_p2 <= (brmerge_i_i7_1_fu_2899_p2 and tmp_112_1_fu_2872_p2);
    overflow_6_fu_2659_p2 <= (brmerge_i_i7_fu_2654_p2 and tmp_76_fu_2627_p2);
    overflow_9_fu_2411_p2 <= (brmerge_i_i8_fu_2401_p2 and tmp_68_fu_2406_p2);
    overflow_fu_514_p2 <= (brmerge_i_i_fu_502_p2 and tmp_44_fu_508_p2);
    p_38_i1_fu_3646_p2 <= (carry_fu_3625_p2 and signbit_7_reg_4835);
    p_38_i_1_fu_1383_p2 <= (carry_1_1_fu_1342_p2 and Range1_all_ones_s_fu_1347_p2);
    p_38_i_2_fu_1457_p2 <= (carry_1_2_fu_1416_p2 and Range1_all_ones_6_fu_1421_p2);
    p_38_i_3_fu_1531_p2 <= (carry_1_3_fu_1490_p2 and Range1_all_ones_3_fu_1495_p2);
    p_38_i_fu_1309_p2 <= (carry_1_fu_1268_p2 and Range1_all_ones_fu_1273_p2);
    p_38_i_i1_fu_3301_p2 <= (carry_4_fu_3284_p2 and Range1_all_ones_2_reg_4706);
    p_38_i_i2_fu_3349_p2 <= (carry_5_fu_3328_p2 and signbit_6_reg_4723);
    p_38_i_i_fu_2391_p2 <= (carry_3_fu_2374_p2 and Range1_all_ones_4_reg_4338);
    p_41_i_1_fu_1370_p2 <= (tmp_118_reg_3883 and tmp_49_1_fu_1365_p2);
    p_41_i_2_fu_1444_p2 <= (tmp_128_reg_3926 and tmp_49_2_fu_1439_p2);
    p_41_i_3_fu_1518_p2 <= (tmp_138_reg_3969 and tmp_49_3_fu_1513_p2);
    p_41_i_fu_1296_p2 <= (tmp_108_reg_3840 and tmp_49_fu_1291_p2);
    p_41_i_i1_fu_3185_p2 <= (Range2_all_ones_2_fu_3151_p2 and tmp_83_fu_3179_p2);
    p_41_i_i_fu_2346_p2 <= (Range2_all_ones_fu_2312_p2 and tmp_67_fu_2340_p2);
    p_Result_1_fu_2318_p4 <= p_Val2_26_fu_2238_p2(54 downto 52);
    p_Result_25_2_0_not_fu_906_p2 <= (tmp_126_reg_3766 xor ap_const_lv1_1);
    p_Result_38_not_fu_3630_p2 <= (tmp_173_reg_4859 xor ap_const_lv1_1);
    p_Result_57_not_fu_2639_p2 <= (tmp_160_reg_4455 xor ap_const_lv1_1);
    p_Result_59_1_not_fu_2884_p2 <= (tmp_167_reg_4556 xor ap_const_lv1_1);
    p_Result_68_not_fu_3333_p2 <= (tmp_187_reg_4737 xor ap_const_lv1_1);
    p_Result_s_fu_2302_p4 <= p_Val2_26_fu_2238_p2(54 downto 53);
    p_Val2_11_fu_3519_p2 <= std_logic_vector(signed(tmp_51_cast_fu_3511_p1) + signed(tmp_52_fu_3515_p1));
    p_Val2_12_fu_3536_p2 <= std_logic_vector(unsigned(tmp_54_fu_3525_p3) + unsigned(tmp_55_cast_fu_3533_p1));
    p_Val2_13_1_70_fu_1660_p3 <= 
        ap_const_lv23_400000 when (underflow_3_1_fu_1632_p2(0) = '1') else 
        p_Val2_13_1_reg_4025;
    p_Val2_13_1_fu_1186_p2 <= std_logic_vector(unsigned(p_Val2_10_1_reg_3890) + unsigned(tmp_33_1_fu_1182_p1));
    p_Val2_13_2_71_fu_1718_p3 <= 
        ap_const_lv23_400000 when (underflow_3_2_fu_1690_p2(0) = '1') else 
        p_Val2_13_2_reg_4038;
    p_Val2_13_2_fu_1218_p2 <= std_logic_vector(unsigned(p_Val2_10_2_reg_3933) + unsigned(tmp_33_2_fu_1214_p1));
    p_Val2_13_3_72_fu_1776_p3 <= 
        ap_const_lv23_400000 when (underflow_3_3_fu_1748_p2(0) = '1') else 
        p_Val2_13_3_reg_4051;
    p_Val2_13_3_fu_1250_p2 <= std_logic_vector(unsigned(p_Val2_10_3_reg_3976) + unsigned(tmp_33_3_fu_1246_p1));
    p_Val2_13_fu_2545_p2 <= std_logic_vector(signed(tmp_86_cast_fu_2538_p1) + signed(tmp_72_fu_2542_p1));
    p_Val2_13_mux_1_fu_1653_p3 <= 
        ap_const_lv23_3FFFFF when (brmerge_i_i4_1_fu_1637_p2(0) = '1') else 
        p_Val2_13_1_reg_4025;
    p_Val2_13_mux_2_fu_1711_p3 <= 
        ap_const_lv23_3FFFFF when (brmerge_i_i4_2_fu_1695_p2(0) = '1') else 
        p_Val2_13_2_reg_4038;
    p_Val2_13_mux_3_fu_1769_p3 <= 
        ap_const_lv23_3FFFFF when (brmerge_i_i4_3_fu_1753_p2(0) = '1') else 
        p_Val2_13_3_reg_4051;
    p_Val2_13_mux_fu_1595_p3 <= 
        ap_const_lv23_3FFFFF when (brmerge_i_i4_fu_1579_p2(0) = '1') else 
        p_Val2_2_reg_4012;
    p_Val2_15_fu_3606_p2 <= std_logic_vector(unsigned(p_Val2_14_reg_4844) + unsigned(tmp_61_fu_3603_p1));
    p_Val2_16_fu_3078_p2 <= std_logic_vector(signed(tmp_63_cast_fu_3074_p1) + signed(p_Val2_7_reg_4655));
    p_Val2_18_fu_3265_p2 <= std_logic_vector(unsigned(p_Val2_17_reg_4691) + unsigned(tmp_70_fu_3262_p1));
    p_Val2_1_1_1_fu_547_p2 <= std_logic_vector(unsigned(ap_const_lv30_0) - unsigned(OP2_V_124_1_cast_fu_544_p1));
    p_Val2_1_69_fu_1602_p3 <= 
        ap_const_lv23_400000 when (underflow_3_fu_1574_p2(0) = '1') else 
        p_Val2_2_reg_4012;
    p_Val2_1_fu_460_p2 <= std_logic_vector(unsigned(ap_const_lv30_0) - unsigned(OP2_V_cast_fu_457_p1));
    p_Val2_21_fu_3206_p2 <= std_logic_vector(signed(tmp_105_cast_fu_3199_p1) + signed(tmp_106_cast_fu_3203_p1));
    p_Val2_21_mux_fu_3483_p3 <= 
        ap_const_lv32_7FFFFFFF when (brmerge_i_i_i2_fu_3479_p2(0) = '1') else 
        p_Val2_18_reg_4748;
    p_Val2_23_fu_3309_p2 <= std_logic_vector(unsigned(p_Val2_22_reg_4732) + unsigned(tmp_86_fu_3306_p1));
    p_Val2_25_1_fu_2790_p2 <= std_logic_vector(signed(tmp_86_1_cast_fu_2783_p1) + signed(tmp_87_1_fu_2787_p1));
    p_Val2_25_fu_2604_p2 <= std_logic_vector(unsigned(p_Val2_24_reg_4450) + unsigned(tmp_73_fu_2601_p1));
    p_Val2_26_fu_2238_p2 <= std_logic_vector(signed(tmp_95_cast_fu_2231_p1) + signed(tmp_64_fu_2235_p1));
    p_Val2_28_fu_2355_p2 <= std_logic_vector(unsigned(p_Val2_27_reg_4323) + unsigned(tmp_65_fu_2352_p1));
    p_Val2_2_79_fu_2704_p3 <= 
        ap_const_lv32_80000000 when (underflow_6_reg_4489(0) = '1') else 
        p_Val2_25_reg_4466;
    p_Val2_2_fu_1154_p2 <= std_logic_vector(unsigned(p_Val2_s_reg_3847) + unsigned(tmp_33_fu_1150_p1));
    p_Val2_31_mux_fu_2452_p3 <= 
        ap_const_lv29_FFFFFFF when (brmerge_i_i_i4_fu_2448_p2(0) = '1') else 
        p_Val2_28_reg_4355;
    p_Val2_32_1_82_fu_2949_p3 <= 
        ap_const_lv32_80000000 when (underflow_6_1_reg_4590(0) = '1') else 
        p_Val2_32_1_reg_4567;
    p_Val2_32_1_fu_2849_p2 <= std_logic_vector(unsigned(p_Val2_26_1_reg_4551) + unsigned(tmp_93_1_fu_2846_p1));
    p_Val2_32_mux_1_fu_2942_p3 <= 
        ap_const_lv32_7FFFFFFF when (brmerge_i_i_i3_1_fu_2938_p2(0) = '1') else 
        p_Val2_32_1_reg_4567;
    p_Val2_32_mux_fu_2697_p3 <= 
        ap_const_lv32_7FFFFFFF when (brmerge_i_i_i3_fu_2693_p2(0) = '1') else 
        p_Val2_25_reg_4466;
    p_Val2_37_mux_fu_3457_p3 <= 
        ap_const_lv31_3FFFFFFF when (brmerge_i_i_i5_fu_3441_p2(0) = '1') else 
        p_Val2_23_reg_4776;
    p_Val2_3_1_1_fu_804_p3 <= 
        ap_const_lv29_10000000 when (underflow_1_1_reg_3823(0) = '1') else 
        tmp_36_1_1_fu_775_p3;
    p_Val2_3_2_fu_924_p3 <= 
        ap_const_lv29_10000000 when (underflow_2_fu_898_p2(0) = '1') else 
        tmp_125_fu_893_p2;
    p_Val2_3_3_1_fu_1045_p3 <= 
        ap_const_lv29_10000000 when (underflow_350_1_fu_1024_p2(0) = '1') else 
        tmp_135_fu_1014_p2;
    p_Val2_3_fu_686_p3 <= 
        ap_const_lv29_10000000 when (underflow9_reg_3805(0) = '1') else 
        tmp_55_fu_657_p3;
    p_Val2_3_mux_1_1_fu_796_p3 <= 
        ap_const_lv29_FFFFFFF when (brmerge_i_i_i_1_1_fu_782_p2(0) = '1') else 
        tmp_36_1_1_fu_775_p3;
    p_Val2_3_mux_2_fu_916_p3 <= 
        ap_const_lv29_FFFFFFF when (brmerge_i_i_i_2_fu_902_p2(0) = '1') else 
        tmp_125_fu_893_p2;
    p_Val2_3_mux_3_1_fu_1037_p3 <= 
        ap_const_lv29_FFFFFFF when (brmerge_i_i_i_3_1_fu_1028_p2(0) = '1') else 
        tmp_135_fu_1014_p2;
    p_Val2_3_mux_fu_678_p3 <= 
        ap_const_lv29_FFFFFFF when (brmerge_i_i_i_fu_664_p2(0) = '1') else 
        tmp_55_fu_657_p3;
    p_Val2_4_75_fu_1915_p3 <= 
        ap_const_lv27_4000000 when (underflow_fu_1883_p2(0) = '1') else 
        p_Val2_4_fu_1861_p3;
    p_Val2_4_fu_1861_p3 <= (tmp_147_fu_1857_p1 & ap_const_lv5_0);
    p_Val2_4_mux_fu_1907_p3 <= 
        ap_const_lv27_3FFFFFF when (brmerge_i_i3_fu_1889_p2(0) = '1') else 
        p_Val2_4_fu_1861_p3;
    p_Val2_5_85_fu_3464_p3 <= 
        ap_const_lv31_40000000 when (underflow_13_fu_3436_p2(0) = '1') else 
        p_Val2_23_reg_4776;
    p_Val2_8_84_fu_3490_p3 <= 
        ap_const_lv32_80000000 when (underflow_12_reg_4809(0) = '1') else 
        p_Val2_18_reg_4748;
    p_Val2_9_1_fu_823_p2 <= std_logic_vector(signed(tmp_26_1_cast_fu_819_p1) - signed(b_1_V_read_cast_fu_649_p1));
    p_Val2_9_2_fu_944_p2 <= std_logic_vector(signed(tmp_26_2_cast_fu_940_p1) - signed(b_2_V_read_cast_fu_645_p1));
    p_Val2_9_3_fu_1065_p2 <= std_logic_vector(signed(tmp_26_3_cast_fu_1061_p1) - signed(b_3_V_read_cast_fu_641_p1));
    p_Val2_9_76_fu_2459_p3 <= 
        ap_const_lv29_10000000 when (underflow_10_reg_4388(0) = '1') else 
        p_Val2_28_reg_4355;
    p_Val2_9_fu_705_p2 <= std_logic_vector(signed(tmp_26_cast_fu_701_p1) - signed(b_0_V_read_cast_fu_653_p1));
    p_Val2_s_74_fu_1838_p3 <= 
        aa_0_V_reg_4154 when (sel_tmp4_reg_4208(0) = '1') else 
        sel_tmp3_reg_4203;
    p_Val2_s_86_fu_3709_p3 <= 
        ap_const_lv32_80000000 when (underflow_11_fu_3681_p2(0) = '1') else 
        p_Val2_15_reg_4875;
    p_not38_i_i_1_1_fu_613_p2 <= "0" when (tmp_53_fu_573_p4 = ap_const_lv2_3) else "1";
    p_not38_i_i_fu_526_p2 <= "0" when (tmp_47_fu_486_p4 = ap_const_lv2_3) else "1";
    p_not_i1_fu_3651_p2 <= (deleted_zeros_1_fu_3641_p2 xor ap_const_lv1_1);
    p_not_i_1_fu_1389_p2 <= (deleted_zeros_s_fu_1357_p3 xor ap_const_lv1_1);
    p_not_i_2_fu_1463_p2 <= (deleted_zeros_5_fu_1431_p3 xor ap_const_lv1_1);
    p_not_i_3_fu_1537_p2 <= (deleted_zeros_6_fu_1505_p3 xor ap_const_lv1_1);
    p_not_i_fu_1315_p2 <= (deleted_zeros_fu_1283_p3 xor ap_const_lv1_1);
    p_not_i_i2_fu_3365_p2 <= (deleted_zeros_2_reg_4760 xor ap_const_lv1_1);
    p_not_i_i3_1_fu_2894_p2 <= (tmp_164_reg_4543 xor carry_9_1_fu_2868_p2);
    p_not_i_i3_fu_2649_p2 <= (tmp_157_reg_4442 xor carry_9_fu_2623_p2);
    p_not_i_i4_fu_2396_p2 <= (deleted_zeros_3_reg_4367 xor ap_const_lv1_1);
    p_not_i_i5_fu_3354_p2 <= (deleted_zeros_4_fu_3344_p2 xor ap_const_lv1_1);
    p_not_i_i_1_1_fu_583_p2 <= "0" when (tmp_53_fu_573_p4 = ap_const_lv2_0) else "1";
    p_not_i_i_fu_496_p2 <= "0" when (tmp_47_fu_486_p4 = ap_const_lv2_0) else "1";
    qb_assign_1_1_fu_1177_p2 <= (r_i_i_1_fu_1172_p2 and tmp_119_reg_3895);
    qb_assign_1_2_fu_1209_p2 <= (r_i_i_2_fu_1204_p2 and tmp_129_reg_3938);
    qb_assign_1_3_fu_1241_p2 <= (r_i_i_3_fu_1236_p2 and tmp_139_reg_3981);
    qb_assign_1_fu_1145_p2 <= (r_i_i_fu_1140_p2 and tmp_109_reg_3852);
    qb_assign_3_fu_3598_p2 <= (r_i_i1_fu_3593_p2 and qbit_11_reg_4849);
    qb_assign_5_fu_3128_p2 <= (r_i_i_i1_fu_3122_p2 and qbit_9_reg_4660);
    qb_assign_7_1_fu_2841_p2 <= (r_i_i_i2_1_fu_2835_p2 and tmp_165_reg_4533);
    qb_assign_7_fu_2596_p2 <= (r_i_i_i2_fu_2590_p2 and tmp_158_reg_4432);
    qb_assign_9_fu_2289_p2 <= (r_i_i_i_fu_2283_p2 and qbit_reg_4307);
    qb_assign_s_fu_3257_p2 <= (r_i_i_i3_fu_3251_p2 and qbit_10_reg_4675);
    r_1_fu_2569_p2 <= "0" when (tmp_159_reg_4437 = ap_const_lv48_0) else "1";
    r_2_1_fu_2814_p2 <= "0" when (tmp_166_reg_4538 = ap_const_lv48_0) else "1";
    r_2_fu_1199_p2 <= "0" when (tmp_130_reg_3943 = ap_const_lv6_0) else "1";
    r_3_fu_3588_p2 <= "0" when (tmp_172_reg_4854 = ap_const_lv12_0) else "1";
    r_4_fu_3230_p2 <= "0" when (tmp_186_reg_4680 = ap_const_lv24_0) else "1";
    r_6_fu_1231_p2 <= "0" when (tmp_140_reg_3986 = ap_const_lv6_0) else "1";
    r_7_fu_2262_p2 <= "0" when (tmp_151_reg_4312 = ap_const_lv22_0) else "1";
    r_8_fu_3101_p2 <= "0" when (tmp_179_reg_4665 = ap_const_lv25_0) else "1";
    r_V_1_fu_3002_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(OP2_V_6_cast_fu_2998_p1));
    r_fu_1135_p2 <= "0" when (tmp_110_reg_3857 = ap_const_lv6_0) else "1";
    r_i_i1_fu_3593_p2 <= (tmp_174_reg_4865 or r_3_fu_3588_p2);
    r_i_i_1_fu_1172_p2 <= (tmp_122_reg_3910 or r_s_fu_1167_p2);
    r_i_i_2_fu_1204_p2 <= (tmp_132_reg_3953 or r_2_fu_1199_p2);
    r_i_i_3_fu_1236_p2 <= (tmp_142_reg_3996 or r_6_fu_1231_p2);
    r_i_i_fu_1140_p2 <= (tmp_112_reg_3867 or r_fu_1135_p2);
    r_i_i_i1_fu_3122_p2 <= (tmp_181_fu_3114_p3 or r_8_fu_3101_p2);
    r_i_i_i2_1_fu_2835_p2 <= (tmp_168_fu_2827_p3 or r_2_1_fu_2814_p2);
    r_i_i_i2_fu_2590_p2 <= (tmp_161_fu_2582_p3 or r_1_fu_2569_p2);
    r_i_i_i3_fu_3251_p2 <= (tmp_188_fu_3243_p3 or r_4_fu_3230_p2);
    r_i_i_i_fu_2283_p2 <= (tmp_153_fu_2275_p3 or r_7_fu_2262_p2);
    r_s_fu_1167_p2 <= "0" when (tmp_120_reg_3900 = ap_const_lv6_0) else "1";
    result_V_fu_3702_p3 <= 
        ap_const_lv32_7FFFFFFF when (brmerge_i_i5_fu_3686_p2(0) = '1') else 
        p_Val2_15_reg_4875;
    sel_tmp10_fu_1952_p2 <= "0" when (tmp_145_reg_4182 = ap_const_lv2_2) else "1";
    sel_tmp11_fu_1969_p2 <= (tmp76_fu_1963_p2 and tmp75_fu_1957_p2);
    sel_tmp12_fu_2009_p2 <= (tmp_s_reg_4216 and sel_tmp2_reg_4196);
    sel_tmp13_fu_2021_p2 <= (tmp_s_reg_4216 and sel_tmp_reg_4189);
    sel_tmp14_fu_2033_p2 <= (tmp_s_reg_4216 and sel_tmp4_reg_4208);
    sel_tmp15_fu_2112_p2 <= (sel_tmp4_reg_4208 and sel_tmp9_reg_4231);
    sel_tmp16_fu_2147_p3 <= 
        ap_const_lv27_0 when (sel_tmp14_reg_4273(0) = '1') else 
        min_V_fu_256;
    sel_tmp1_fu_1813_p3 <= 
        aa_1_V_reg_4159 when (sel_tmp_fu_1807_p2(0) = '1') else 
        aa_3_V_reg_4169;
    sel_tmp2_fu_1819_p2 <= "1" when (tmp_145_fu_1803_p1 = ap_const_lv2_2) else "0";
    sel_tmp3_fu_1825_p3 <= 
        aa_2_V_reg_4164 when (sel_tmp2_fu_1819_p2(0) = '1') else 
        sel_tmp1_fu_1813_p3;
    sel_tmp4_fu_1832_p2 <= "1" when (tmp_145_fu_1803_p1 = ap_const_lv2_0) else "0";
    sel_tmp5_fu_1937_p2 <= (sel_tmp2_reg_4196 and sel_tmp9_fu_1931_p2);
    sel_tmp6_fu_1942_p2 <= "0" when (tmp_145_reg_4182 = ap_const_lv2_0) else "1";
    sel_tmp7_fu_1990_p2 <= (sel_tmp_reg_4189 and sel_tmp9_reg_4231);
    sel_tmp8_fu_1947_p2 <= "0" when (tmp_145_reg_4182 = ap_const_lv2_1) else "1";
    sel_tmp9_fu_1931_p2 <= (tmp_s_fu_1843_p2 xor ap_const_lv1_1);
    sel_tmp_fu_1807_p2 <= "1" when (tmp_145_fu_1803_p1 = ap_const_lv2_1) else "0";
    sum_V_fu_2465_p3 <= 
        p_Val2_31_mux_fu_2452_p3 when (underflow_5_not_reg_4394(0) = '1') else 
        p_Val2_9_76_fu_2459_p3;
    this_assign_1_1_1_fu_811_p3 <= 
        p_Val2_3_mux_1_1_fu_796_p3 when (brmerge_1_1_fu_791_p2(0) = '1') else 
        p_Val2_3_1_1_fu_804_p3;
    this_assign_1_2_fu_932_p3 <= 
        p_Val2_3_mux_2_fu_916_p3 when (brmerge_2_fu_911_p2(0) = '1') else 
        p_Val2_3_2_fu_924_p3;
    this_assign_1_3_1_fu_1053_p3 <= 
        p_Val2_3_mux_3_1_fu_1037_p3 when (underflow_not_3_1_fu_1032_p2(0) = '1') else 
        p_Val2_3_3_1_fu_1045_p3;
    this_assign_1_fu_693_p3 <= 
        p_Val2_3_mux_fu_678_p3 when (brmerge_fu_673_p2(0) = '1') else 
        p_Val2_3_fu_686_p3;
    tmp184_demorgan_fu_1405_p2 <= (p_38_i_1_fu_1383_p2 or brmerge40_demorgan_i_1_fu_1400_p2);
    tmp186_demorgan_fu_1479_p2 <= (p_38_i_2_fu_1457_p2 or brmerge40_demorgan_i_2_fu_1474_p2);
    tmp188_demorgan_fu_1553_p2 <= (p_38_i_3_fu_1531_p2 or brmerge40_demorgan_i_3_fu_1548_p2);
    tmp193_demorgan_fu_2421_p2 <= (p_38_i_i_reg_4377 or brmerge40_demorgan_i_i_fu_2417_p2);
    tmp199_demorgan_fu_3390_p2 <= (p_38_i_i1_reg_4770 or brmerge40_demorgan_i_i1_fu_3386_p2);
    tmp201_demorgan_fu_3432_p2 <= (p_38_i_i2_reg_4788 or brmerge40_demorgan_i_i3_reg_4799);
    tmp203_demorgan_fu_3677_p2 <= (p_38_i1_reg_4887 or brmerge40_demorgan_i1_reg_4898);
    tmp51_fu_1585_p2 <= (brmerge40_demorgan_i_reg_4074 or tmp_57_fu_1559_p2);
    tmp57_fu_1627_p2 <= (tmp184_demorgan_reg_4099 xor ap_const_lv1_1);
    tmp58_fu_1643_p2 <= (brmerge40_demorgan_i_1_reg_4094 or tmp_73_1_fu_1617_p2);
    tmp67_fu_1685_p2 <= (tmp186_demorgan_reg_4119 xor ap_const_lv1_1);
    tmp68_fu_1701_p2 <= (brmerge40_demorgan_i_2_reg_4114 or tmp_73_2_fu_1675_p2);
    tmp72_fu_1743_p2 <= (tmp188_demorgan_reg_4139 xor ap_const_lv1_1);
    tmp73_fu_1759_p2 <= (brmerge40_demorgan_i_3_reg_4134 or tmp_73_3_fu_1733_p2);
    tmp75_fu_1957_p2 <= (sel_tmp6_fu_1942_p2 and sel_tmp8_fu_1947_p2);
    tmp76_fu_1963_p2 <= (tmp_s_fu_1843_p2 and sel_tmp10_fu_1952_p2);
    tmp77_fu_2426_p2 <= (tmp193_demorgan_fu_2421_p2 xor ap_const_lv1_1);
    tmp78_fu_2437_p2 <= (brmerge40_demorgan_i_i_fu_2417_p2 or tmp_68_fu_2406_p2);
    tmp79_fu_2670_p2 <= (brmerge40_demorgan_i_i2_fu_2665_p2 xor tmp_78_fu_2644_p2);
    tmp80_fu_2681_p2 <= (brmerge40_demorgan_i_i2_fu_2665_p2 or tmp_76_fu_2627_p2);
    tmp81_fu_2915_p2 <= (brmerge40_demorgan_i_i2_1_fu_2910_p2 xor tmp_115_1_fu_2889_p2);
    tmp82_fu_2926_p2 <= (brmerge40_demorgan_i_i2_1_fu_2910_p2 or tmp_112_1_fu_2872_p2);
    tmp88_fu_3692_p2 <= (newsignbit_13_reg_4881 or tmp_80_fu_3662_p2);
    tmp89_fu_3395_p2 <= (tmp199_demorgan_fu_3390_p2 xor ap_const_lv1_1);
    tmp90_fu_3406_p2 <= (brmerge40_demorgan_i_i1_fu_3386_p2 or tmp_84_fu_3375_p2);
    tmp91_fu_3447_p2 <= (newsignbit_12_reg_4782 or tmp_88_fu_3417_p2);
        tmp_105_cast_fu_3199_p1 <= std_logic_vector(resize(signed(tmp_85_fu_3191_p3),57));

    tmp_105_fu_466_p1 <= p_Val2_1_fu_460_p2(28 - 1 downto 0);
        tmp_106_cast_fu_3203_p1 <= std_logic_vector(resize(signed(p_Val2_20_reg_4670),57));

    tmp_106_fu_470_p3 <= p_Val2_1_fu_460_p2(29 downto 29);
    tmp_107_fu_478_p3 <= p_Val2_1_fu_460_p2(27 downto 27);
    tmp_108_1_fu_2862_p2 <= (tmp_169_fu_2854_p3 xor ap_const_lv1_1);
    tmp_110_fu_737_p1 <= p_Val2_9_fu_705_p2(6 - 1 downto 0);
    tmp_112_1_fu_2872_p2 <= (tmp_164_reg_4543 xor ap_const_lv1_1);
    tmp_115_1_fu_2889_p2 <= (tmp_169_reg_4573 or p_Result_59_1_not_fu_2884_p2);
    tmp_115_fu_553_p1 <= p_Val2_1_1_1_fu_547_p2(28 - 1 downto 0);
    tmp_116_fu_557_p3 <= p_Val2_1_1_1_fu_547_p2(29 downto 29);
    tmp_117_fu_565_p3 <= p_Val2_1_1_1_fu_547_p2(27 downto 27);
    tmp_120_fu_855_p1 <= p_Val2_9_1_fu_823_p2(6 - 1 downto 0);
    tmp_125_fu_893_p2 <= std_logic_vector(shift_left(unsigned(x_0_V_read),to_integer(unsigned('0' & ap_const_lv29_1(29-1 downto 0)))));
    tmp_130_fu_976_p1 <= p_Val2_9_2_fu_944_p2(6 - 1 downto 0);
    tmp_135_fu_1014_p2 <= std_logic_vector(shift_left(unsigned(x_1_V_read),to_integer(unsigned('0' & ap_const_lv29_1(29-1 downto 0)))));
    tmp_140_fu_1097_p1 <= p_Val2_9_3_fu_1065_p2(6 - 1 downto 0);
    tmp_145_fu_1803_p1 <= k_reg_332(2 - 1 downto 0);
    tmp_147_fu_1857_p1 <= p_Val2_s_74_fu_1838_p3(22 - 1 downto 0);
    tmp_151_fu_2219_p1 <= grp_fu_2205_p2(22 - 1 downto 0);
    tmp_153_fu_2275_p3 <= p_Val2_26_fu_2238_p2(23 downto 23);
    tmp_155_fu_2294_p3 <= p_Val2_26_fu_2238_p2(52 downto 52);
    tmp_156_fu_2484_p1 <= j1_reg_355(1 - 1 downto 0);
    tmp_159_fu_2526_p1 <= grp_fu_2513_p2(48 - 1 downto 0);
    tmp_161_fu_2582_p3 <= p_Val2_13_fu_2545_p2(49 downto 49);
    tmp_162_fu_2609_p3 <= p_Val2_25_fu_2604_p2(31 downto 31);
    tmp_163_fu_2729_p1 <= j1_1_reg_378(1 - 1 downto 0);
    tmp_166_fu_2771_p1 <= grp_fu_2758_p2(48 - 1 downto 0);
    tmp_168_fu_2827_p3 <= p_Val2_25_1_fu_2790_p2(49 downto 49);
    tmp_169_fu_2854_p3 <= p_Val2_32_1_fu_2849_p2(31 downto 31);
    tmp_172_fu_3568_p1 <= p_Val2_12_fu_3536_p2(12 - 1 downto 0);
    tmp_176_fu_2974_p1 <= i_2_reg_413(1 - 1 downto 0);
    tmp_179_fu_3050_p1 <= grp_fu_3024_p2(25 - 1 downto 0);
    tmp_181_fu_3114_p3 <= p_Val2_16_fu_3078_p2(26 downto 26);
    tmp_183_fu_3133_p3 <= p_Val2_16_fu_3078_p2(58 downto 58);
    tmp_186_fu_3062_p1 <= grp_fu_3036_p2(24 - 1 downto 0);
    tmp_188_fu_3243_p3 <= p_Val2_21_fu_3206_p2(25 downto 25);
    tmp_1_fu_631_p2 <= (tmp_127_reg_3773 xor ap_const_lv1_1);
        tmp_26_1_cast_fu_819_p1 <= std_logic_vector(resize(signed(this_assign_1_1_1_fu_811_p3),32));

        tmp_26_2_cast_fu_940_p1 <= std_logic_vector(resize(signed(this_assign_1_2_fu_932_p3),32));

        tmp_26_3_cast_fu_1061_p1 <= std_logic_vector(resize(signed(this_assign_1_3_1_fu_1053_p3),32));

        tmp_26_cast_fu_701_p1 <= std_logic_vector(resize(signed(this_assign_1_fu_693_p3),32));

    tmp_33_1_fu_1182_p1 <= std_logic_vector(resize(unsigned(qb_assign_1_1_fu_1177_p2),23));
    tmp_33_2_fu_1214_p1 <= std_logic_vector(resize(unsigned(qb_assign_1_2_fu_1209_p2),23));
    tmp_33_3_fu_1246_p1 <= std_logic_vector(resize(unsigned(qb_assign_1_3_fu_1241_p2),23));
    tmp_33_fu_1150_p1 <= std_logic_vector(resize(unsigned(qb_assign_1_fu_1145_p2),23));
    tmp_36_1_1_fu_775_p3 <= (tmp_115_reg_3812 & ap_const_lv1_0);
    tmp_43_1_fu_1337_p2 <= (tmp_123_reg_4031 xor ap_const_lv1_1);
    tmp_43_2_fu_1411_p2 <= (tmp_133_reg_4044 xor ap_const_lv1_1);
    tmp_43_3_fu_1485_p2 <= (tmp_143_reg_4057 xor ap_const_lv1_1);
    tmp_43_fu_1263_p2 <= (tmp_113_reg_4018 xor ap_const_lv1_1);
    tmp_44_1_1_fu_595_p2 <= (tmp_116_fu_557_p3 xor ap_const_lv1_1);
    tmp_44_3_1_fu_1019_p2 <= (tmp_136_reg_3780 xor ap_const_lv1_1);
    tmp_44_fu_508_p2 <= (tmp_106_fu_470_p3 xor ap_const_lv1_1);
    tmp_46_fu_1877_p2 <= (newsignbit_fu_1869_p3 xor ap_const_lv1_1);
    tmp_47_fu_486_p4 <= p_Val2_1_fu_460_p2(29 downto 28);
    tmp_49_1_fu_1365_p2 <= (tmp_124_reg_3915 xor ap_const_lv1_1);
    tmp_49_2_fu_1439_p2 <= (tmp_134_reg_3958 xor ap_const_lv1_1);
    tmp_49_3_fu_1513_p2 <= (tmp_144_reg_4001 xor ap_const_lv1_1);
    tmp_49_fu_1291_p2 <= (tmp_114_reg_3872 xor ap_const_lv1_1);
        tmp_51_cast_fu_3511_p1 <= std_logic_vector(resize(signed(tmp_51_fu_3503_p3),35));

    tmp_51_fu_3503_p3 <= (p_Val2_8_reg_401 & ap_const_lv2_0);
        tmp_52_fu_3515_p1 <= std_logic_vector(resize(signed(p_Val2_5_reg_389),35));

    tmp_53_fu_573_p4 <= p_Val2_1_1_1_fu_547_p2(29 downto 28);
    tmp_54_fu_3525_p3 <= (p_Val2_11_fu_3519_p2 & ap_const_lv11_0);
        tmp_55_cast_fu_3533_p1 <= std_logic_vector(resize(signed(p_Val2_6_reg_4830),46));

    tmp_55_fu_657_p3 <= (tmp_105_reg_3794 & ap_const_lv1_0);
    tmp_57_fu_1559_p2 <= (tmp_108_reg_3840 xor ap_const_lv1_1);
    tmp_59_fu_636_p2 <= (tmp_137_reg_3787 xor ap_const_lv1_1);
    tmp_61_fu_3603_p1 <= std_logic_vector(resize(unsigned(qb_assign_3_reg_4870),32));
    tmp_62_fu_2223_p3 <= (p_Val2_3_73_reg_320 & ap_const_lv23_0);
        tmp_63_cast_fu_3074_p1 <= std_logic_vector(resize(signed(tmp_63_fu_3066_p3),61));

    tmp_63_fu_3066_p3 <= (p_Val2_8_reg_401 & ap_const_lv26_0);
    tmp_64_fu_2235_p1 <= std_logic_vector(resize(unsigned(p_Val2_19_reg_4302),55));
    tmp_65_fu_2352_p1 <= std_logic_vector(resize(unsigned(qb_assign_9_reg_4333),29));
    tmp_66_fu_2368_p2 <= (newsignbit_10_fu_2360_p3 xor ap_const_lv1_1);
    tmp_67_fu_2340_p2 <= (tmp_155_fu_2294_p3 xor ap_const_lv1_1);
    tmp_68_fu_2406_p2 <= (signbit_reg_4317 xor ap_const_lv1_1);
    tmp_69_fu_2488_p3 <= 
        x_1_V_read when (tmp_156_fu_2484_p1(0) = '1') else 
        x_0_V_read;
    tmp_70_fu_3262_p1 <= std_logic_vector(resize(unsigned(qb_assign_5_reg_4701),32));
    tmp_71_fu_2530_p3 <= (xH_V_reg_343 & ap_const_lv49_0);
        tmp_72_fu_2542_p1 <= std_logic_vector(resize(signed(p_Val2_10_reg_4427),82));

    tmp_73_1_fu_1617_p2 <= (tmp_118_reg_3883 xor ap_const_lv1_1);
    tmp_73_2_fu_1675_p2 <= (tmp_128_reg_3926 xor ap_const_lv1_1);
    tmp_73_3_fu_1733_p2 <= (tmp_138_reg_3969 xor ap_const_lv1_1);
    tmp_73_fu_2601_p1 <= std_logic_vector(resize(unsigned(qb_assign_7_reg_4461),32));
    tmp_74_fu_2617_p2 <= (tmp_162_fu_2609_p3 xor ap_const_lv1_1);
    tmp_75_fu_3619_p2 <= (newsignbit_13_fu_3611_p3 xor ap_const_lv1_1);
    tmp_76_fu_2627_p2 <= (tmp_157_reg_4442 xor ap_const_lv1_1);
    tmp_77_fu_3278_p2 <= (newsignbit_11_fu_3270_p3 xor ap_const_lv1_1);
    tmp_78_fu_2644_p2 <= (tmp_162_reg_4472 or p_Result_57_not_fu_2639_p2);
    tmp_79_fu_2733_p3 <= 
        x_1_V_read when (tmp_163_fu_2729_p1(0) = '1') else 
        x_0_V_read;
    tmp_80_fu_3662_p2 <= (signbit_7_reg_4835 xor ap_const_lv1_1);
    tmp_81_fu_3141_p4 <= p_Val2_16_fu_3078_p2(60 downto 59);
    tmp_82_fu_3157_p4 <= p_Val2_16_fu_3078_p2(60 downto 58);
    tmp_83_fu_3179_p2 <= (tmp_183_fu_3133_p3 xor ap_const_lv1_1);
    tmp_84_fu_3375_p2 <= (signbit_5_reg_4685 xor ap_const_lv1_1);
    tmp_85_fu_3191_p3 <= (p_Val2_5_reg_389 & ap_const_lv25_0);
        tmp_86_1_cast_fu_2783_p1 <= std_logic_vector(resize(signed(tmp_86_1_fu_2775_p3),82));

    tmp_86_1_fu_2775_p3 <= (xH_V_1_reg_366 & ap_const_lv49_0);
        tmp_86_cast_fu_2538_p1 <= std_logic_vector(resize(signed(tmp_71_fu_2530_p3),82));

    tmp_86_fu_3306_p1 <= std_logic_vector(resize(unsigned(qb_assign_s_reg_4743),31));
        tmp_87_1_fu_2787_p1 <= std_logic_vector(resize(signed(p_Val2_24_1_reg_4528),82));

    tmp_87_fu_3322_p2 <= (newsignbit_12_fu_3314_p3 xor ap_const_lv1_1);
    tmp_88_fu_3417_p2 <= (signbit_6_reg_4723 xor ap_const_lv1_1);
    tmp_93_1_fu_2846_p1 <= std_logic_vector(resize(unsigned(qb_assign_7_1_reg_4562),32));
        tmp_95_cast_fu_2231_p1 <= std_logic_vector(resize(signed(tmp_62_fu_2223_p3),55));

    tmp_demorgan_fu_1331_p2 <= (p_38_i_fu_1309_p2 or brmerge40_demorgan_i_fu_1326_p2);
    tmp_fu_1569_p2 <= (tmp_demorgan_reg_4079 xor ap_const_lv1_1);
    tmp_s_fu_1843_p2 <= "1" when (signed(p_Val2_s_74_fu_1838_p3) > signed(ap_const_lv23_0)) else "0";
    underflow9_fu_538_p2 <= (brmerge39_i_i_fu_532_p2 and tmp_106_fu_470_p3);
    underflow_10_fu_2432_p2 <= (signbit_reg_4317 and tmp77_fu_2426_p2);
    underflow_11_fu_3681_p2 <= (tmp203_demorgan_fu_3677_p2 xor signbit_7_reg_4835);
    underflow_12_fu_3401_p2 <= (signbit_5_reg_4685 and tmp89_fu_3395_p2);
    underflow_13_fu_3436_p2 <= (tmp201_demorgan_fu_3432_p2 xor signbit_6_reg_4723);
    underflow_1_1_fu_625_p2 <= (brmerge39_i_i_1_1_fu_619_p2 and tmp_116_fu_557_p3);
    underflow_2_fu_898_p2 <= (tmp_126_reg_3766 and tmp_1_reg_3830);
    underflow_350_1_fu_1024_p2 <= (tmp_136_reg_3780 and tmp_59_reg_3835);
    underflow_3_1_fu_1632_p2 <= (tmp_118_reg_3883 and tmp57_fu_1627_p2);
    underflow_3_2_fu_1690_p2 <= (tmp_128_reg_3926 and tmp67_fu_1685_p2);
    underflow_3_3_fu_1748_p2 <= (tmp_138_reg_3969 and tmp72_fu_1743_p2);
    underflow_3_fu_1574_p2 <= (tmp_108_reg_3840 and tmp_fu_1569_p2);
    underflow_3_not_1_fu_1648_p2 <= (tmp58_fu_1643_p2 or p_38_i_1_reg_4084);
    underflow_3_not_2_fu_1706_p2 <= (tmp68_fu_1701_p2 or p_38_i_2_reg_4104);
    underflow_3_not_3_fu_1764_p2 <= (tmp73_fu_1759_p2 or p_38_i_3_reg_4124);
    underflow_3_not_fu_1590_p2 <= (tmp51_fu_1585_p2 or p_38_i_reg_4064);
    underflow_5_not_fu_2443_p2 <= (tmp78_fu_2437_p2 or p_38_i_i_reg_4377);
    underflow_6_1_fu_2921_p2 <= (tmp81_fu_2915_p2 and tmp_164_reg_4543);
    underflow_6_fu_2676_p2 <= (tmp79_fu_2670_p2 and tmp_157_reg_4442);
    underflow_6_not_1_fu_2932_p2 <= (tmp82_fu_2926_p2 or carry_9_1_fu_2868_p2);
    underflow_6_not_fu_2687_p2 <= (tmp80_fu_2681_p2 or carry_9_fu_2623_p2);
    underflow_7_not_fu_3412_p2 <= (tmp90_fu_3406_p2 or p_38_i_i1_reg_4770);
    underflow_8_not_fu_3452_p2 <= (tmp91_fu_3447_p2 or p_38_i_i2_reg_4788);
    underflow_9_not_fu_3697_p2 <= (tmp88_fu_3692_p2 or p_38_i1_reg_4887);
    underflow_fu_1883_p2 <= (isneg_fu_1849_p3 and tmp_46_fu_1877_p2);
    underflow_not_1_1_fu_786_p2 <= (underflow_1_1_reg_3823 xor ap_const_lv1_1);
    underflow_not_3_1_fu_1032_p2 <= (tmp_137_reg_3787 or tmp_44_3_1_fu_1019_p2);
    underflow_not_fu_668_p2 <= (underflow9_reg_3805 xor ap_const_lv1_1);
    xH_0_V_fu_2710_p3 <= 
        p_Val2_32_mux_fu_2697_p3 when (underflow_6_not_reg_4495(0) = '1') else 
        p_Val2_2_79_fu_2704_p3;
    xH_1_V_fu_2955_p3 <= 
        p_Val2_32_mux_1_fu_2942_p3 when (underflow_6_not_1_reg_4596(0) = '1') else 
        p_Val2_32_1_82_fu_2949_p3;
    xH_V_load_phi_fu_2978_p3 <= 
        xH_V_1_reg_366 when (tmp_176_fu_2974_p1(0) = '1') else 
        xH_V_reg_343;
    xHx_V_fu_3496_p3 <= 
        p_Val2_21_mux_fu_3483_p3 when (underflow_7_not_reg_4815(0) = '1') else 
        p_Val2_8_84_fu_3490_p3;
    x_1_V_read_assign_2_fu_2986_p3 <= 
        x_1_V_read when (tmp_176_fu_2974_p1(0) = '1') else 
        x_0_V_read;
end behav;
